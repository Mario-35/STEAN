(()=>{var nl={7162:()=>{+function(w){"use strict";var g=".dropdown-backdrop",r='[data-toggle="dropdown"]',p=function(a){w(a).on("click.bs.dropdown",this.toggle)};p.VERSION="3.4.1";function s(a){var i=a.attr("data-target");i||(i=a.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var u=i!=="#"?w(document).find(i):null;return u&&u.length?u:a.parent()}function n(a){a&&a.which===3||(w(g).remove(),w(r).each(function(){var i=w(this),u=s(i),m={relatedTarget:this};u.hasClass("open")&&(a&&a.type=="click"&&/input|textarea/i.test(a.target.tagName)&&w.contains(u[0],a.target)||(u.trigger(a=w.Event("hide.bs.dropdown",m)),!a.isDefaultPrevented()&&(i.attr("aria-expanded","false"),u.removeClass("open").trigger(w.Event("hidden.bs.dropdown",m)))))}))}p.prototype.toggle=function(a){var i=w(this);if(!i.is(".disabled, :disabled")){var u=s(i),m=u.hasClass("open");if(n(),!m){"ontouchstart"in document.documentElement&&!u.closest(".navbar-nav").length&&w(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(w(this)).on("click",n);var o={relatedTarget:this};if(u.trigger(a=w.Event("show.bs.dropdown",o)),a.isDefaultPrevented())return;i.trigger("focus").attr("aria-expanded","true"),u.toggleClass("open").trigger(w.Event("shown.bs.dropdown",o))}return!1}},p.prototype.keydown=function(a){if(!(!/(38|40|27|32)/.test(a.which)||/input|textarea/i.test(a.target.tagName))){var i=w(this);if(a.preventDefault(),a.stopPropagation(),!i.is(".disabled, :disabled")){var u=s(i),m=u.hasClass("open");if(!m&&a.which!=27||m&&a.which==27)return a.which==27&&u.find(r).trigger("focus"),i.trigger("click");var o=" li:not(.disabled):visible a",v=u.find(".dropdown-menu"+o);if(v.length){var f=v.index(a.target);a.which==38&&f>0&&f--,a.which==40&&f<v.length-1&&f++,~f||(f=0),v.eq(f).trigger("focus")}}}};function c(a){return this.each(function(){var i=w(this),u=i.data("bs.dropdown");u||i.data("bs.dropdown",u=new p(this)),typeof a=="string"&&u[a].call(i)})}var d=w.fn.dropdown;w.fn.dropdown=c,w.fn.dropdown.Constructor=p,w.fn.dropdown.noConflict=function(){return w.fn.dropdown=d,this},w(document).on("click.bs.dropdown.data-api",n).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",r,p.prototype.toggle).on("keydown.bs.dropdown.data-api",r,p.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",p.prototype.keydown)}(jQuery)},4010:()=>{+function(w){"use strict";var g=function(s,n){this.init("popover",s,n)};if(!w.fn.tooltip)throw new Error("Popover requires tooltip.js");g.VERSION="3.4.1",g.DEFAULTS=w.extend({},w.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),g.prototype=w.extend({},w.fn.tooltip.Constructor.prototype),g.prototype.constructor=g,g.prototype.getDefaults=function(){return g.DEFAULTS},g.prototype.setContent=function(){var s=this.tip(),n=this.getTitle(),c=this.getContent();if(this.options.html){var d=typeof c;this.options.sanitize&&(n=this.sanitizeHtml(n),d==="string"&&(c=this.sanitizeHtml(c))),s.find(".popover-title").html(n),s.find(".popover-content").children().detach().end()[d==="string"?"html":"append"](c)}else s.find(".popover-title").text(n),s.find(".popover-content").children().detach().end().text(c);s.removeClass("fade top bottom left right in"),s.find(".popover-title").html()||s.find(".popover-title").hide()},g.prototype.hasContent=function(){return this.getTitle()||this.getContent()},g.prototype.getContent=function(){var s=this.$element,n=this.options;return s.attr("data-content")||(typeof n.content=="function"?n.content.call(s[0]):n.content)},g.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};function r(s){return this.each(function(){var n=w(this),c=n.data("bs.popover"),d=typeof s=="object"&&s;!c&&/destroy|hide/.test(s)||(c||n.data("bs.popover",c=new g(this,d)),typeof s=="string"&&c[s]())})}var p=w.fn.popover;w.fn.popover=r,w.fn.popover.Constructor=g,w.fn.popover.noConflict=function(){return w.fn.popover=p,this}}(jQuery)},8385:()=>{+function(w){"use strict";function g(s,n){this.$body=w(document.body),this.$scrollElement=w(s).is(document.body)?w(window):w(s),this.options=w.extend({},g.DEFAULTS,n),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",w.proxy(this.process,this)),this.refresh(),this.process()}g.VERSION="3.4.1",g.DEFAULTS={offset:10},g.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},g.prototype.refresh=function(){var s=this,n="offset",c=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),w.isWindow(this.$scrollElement[0])||(n="position",c=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var d=w(this),a=d.data("target")||d.attr("href"),i=/^#./.test(a)&&w(a);return i&&i.length&&i.is(":visible")&&[[i[n]().top+c,a]]||null}).sort(function(d,a){return d[0]-a[0]}).each(function(){s.offsets.push(this[0]),s.targets.push(this[1])})},g.prototype.process=function(){var s=this.$scrollElement.scrollTop()+this.options.offset,n=this.getScrollHeight(),c=this.options.offset+n-this.$scrollElement.height(),d=this.offsets,a=this.targets,i=this.activeTarget,u;if(this.scrollHeight!=n&&this.refresh(),s>=c)return i!=(u=a[a.length-1])&&this.activate(u);if(i&&s<d[0])return this.activeTarget=null,this.clear();for(u=d.length;u--;)i!=a[u]&&s>=d[u]&&(d[u+1]===void 0||s<d[u+1])&&this.activate(a[u])},g.prototype.activate=function(s){this.activeTarget=s,this.clear();var n=this.selector+'[data-target="'+s+'"],'+this.selector+'[href="'+s+'"]',c=w(n).parents("li").addClass("active");c.parent(".dropdown-menu").length&&(c=c.closest("li.dropdown").addClass("active")),c.trigger("activate.bs.scrollspy")},g.prototype.clear=function(){w(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};function r(s){return this.each(function(){var n=w(this),c=n.data("bs.scrollspy"),d=typeof s=="object"&&s;c||n.data("bs.scrollspy",c=new g(this,d)),typeof s=="string"&&c[s]()})}var p=w.fn.scrollspy;w.fn.scrollspy=r,w.fn.scrollspy.Constructor=g,w.fn.scrollspy.noConflict=function(){return w.fn.scrollspy=p,this},w(window).on("load.bs.scrollspy.data-api",function(){w('[data-spy="scroll"]').each(function(){var s=w(this);r.call(s,s.data())})})}(jQuery)},8958:()=>{+function(w){"use strict";var g=function(n){this.element=w(n)};g.VERSION="3.4.1",g.TRANSITION_DURATION=150,g.prototype.show=function(){var n=this.element,c=n.closest("ul:not(.dropdown-menu)"),d=n.data("target");if(d||(d=n.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!n.parent("li").hasClass("active")){var a=c.find(".active:last a"),i=w.Event("hide.bs.tab",{relatedTarget:n[0]}),u=w.Event("show.bs.tab",{relatedTarget:a[0]});if(a.trigger(i),n.trigger(u),!(u.isDefaultPrevented()||i.isDefaultPrevented())){var m=w(document).find(d);this.activate(n.closest("li"),c),this.activate(m,m.parent(),function(){a.trigger({type:"hidden.bs.tab",relatedTarget:n[0]}),n.trigger({type:"shown.bs.tab",relatedTarget:a[0]})})}}},g.prototype.activate=function(n,c,d){var a=c.find("> .active"),i=d&&w.support.transition&&(a.length&&a.hasClass("fade")||!!c.find("> .fade").length);function u(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),n.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),i?(n[0].offsetWidth,n.addClass("in")):n.removeClass("fade"),n.parent(".dropdown-menu").length&&n.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),d&&d()}a.length&&i?a.one("bsTransitionEnd",u).emulateTransitionEnd(g.TRANSITION_DURATION):u(),a.removeClass("in")};function r(n){return this.each(function(){var c=w(this),d=c.data("bs.tab");d||c.data("bs.tab",d=new g(this)),typeof n=="string"&&d[n]()})}var p=w.fn.tab;w.fn.tab=r,w.fn.tab.Constructor=g,w.fn.tab.noConflict=function(){return w.fn.tab=p,this};var s=function(n){n.preventDefault(),r.call(w(this),"show")};w(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',s).on("click.bs.tab.data-api",'[data-toggle="pill"]',s)}(jQuery)},6276:()=>{+function(w){"use strict";var g=["sanitize","whiteList","sanitizeFn"],r=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],p=/^aria-[\w-]*$/i,s={"*":["class","dir","id","lang","role",p],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},n=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,c=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function d(o,v){var f=o.nodeName.toLowerCase();if(w.inArray(f,v)!==-1)return w.inArray(f,r)!==-1?Boolean(o.nodeValue.match(n)||o.nodeValue.match(c)):!0;for(var h=w(v).filter(function(b,_){return _ instanceof RegExp}),T=0,y=h.length;T<y;T++)if(f.match(h[T]))return!0;return!1}function a(o,v,f){if(o.length===0)return o;if(f&&typeof f=="function")return f(o);if(!document.implementation||!document.implementation.createHTMLDocument)return o;var h=document.implementation.createHTMLDocument("sanitization");h.body.innerHTML=o;for(var T=w.map(v,function(E,x){return x}),y=w(h.body).find("*"),b=0,_=y.length;b<_;b++){var D=y[b],O=D.nodeName.toLowerCase();if(w.inArray(O,T)===-1){D.parentNode.removeChild(D);continue}for(var S=w.map(D.attributes,function(E){return E}),A=[].concat(v["*"]||[],v[O]||[]),k=0,I=S.length;k<I;k++)d(S[k],A)||D.removeAttribute(S[k].nodeName)}return h.body.innerHTML}var i=function(o,v){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",o,v)};i.VERSION="3.4.1",i.TRANSITION_DURATION=150,i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0},sanitize:!0,sanitizeFn:null,whiteList:s},i.prototype.init=function(o,v,f){if(this.enabled=!0,this.type=o,this.$element=w(v),this.options=this.getOptions(f),this.$viewport=this.options.viewport&&w(document).find(w.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var h=this.options.trigger.split(" "),T=h.length;T--;){var y=h[T];if(y=="click")this.$element.on("click."+this.type,this.options.selector,w.proxy(this.toggle,this));else if(y!="manual"){var b=y=="hover"?"mouseenter":"focusin",_=y=="hover"?"mouseleave":"focusout";this.$element.on(b+"."+this.type,this.options.selector,w.proxy(this.enter,this)),this.$element.on(_+"."+this.type,this.options.selector,w.proxy(this.leave,this))}}this.options.selector?this._options=w.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(o){var v=this.$element.data();for(var f in v)v.hasOwnProperty(f)&&w.inArray(f,g)!==-1&&delete v[f];return o=w.extend({},this.getDefaults(),v,o),o.delay&&typeof o.delay=="number"&&(o.delay={show:o.delay,hide:o.delay}),o.sanitize&&(o.template=a(o.template,o.whiteList,o.sanitizeFn)),o},i.prototype.getDelegateOptions=function(){var o={},v=this.getDefaults();return this._options&&w.each(this._options,function(f,h){v[f]!=h&&(o[f]=h)}),o},i.prototype.enter=function(o){var v=o instanceof this.constructor?o:w(o.currentTarget).data("bs."+this.type);if(v||(v=new this.constructor(o.currentTarget,this.getDelegateOptions()),w(o.currentTarget).data("bs."+this.type,v)),o instanceof w.Event&&(v.inState[o.type=="focusin"?"focus":"hover"]=!0),v.tip().hasClass("in")||v.hoverState=="in"){v.hoverState="in";return}if(clearTimeout(v.timeout),v.hoverState="in",!v.options.delay||!v.options.delay.show)return v.show();v.timeout=setTimeout(function(){v.hoverState=="in"&&v.show()},v.options.delay.show)},i.prototype.isInStateTrue=function(){for(var o in this.inState)if(this.inState[o])return!0;return!1},i.prototype.leave=function(o){var v=o instanceof this.constructor?o:w(o.currentTarget).data("bs."+this.type);if(v||(v=new this.constructor(o.currentTarget,this.getDelegateOptions()),w(o.currentTarget).data("bs."+this.type,v)),o instanceof w.Event&&(v.inState[o.type=="focusout"?"focus":"hover"]=!1),!v.isInStateTrue()){if(clearTimeout(v.timeout),v.hoverState="out",!v.options.delay||!v.options.delay.hide)return v.hide();v.timeout=setTimeout(function(){v.hoverState=="out"&&v.hide()},v.options.delay.hide)}},i.prototype.show=function(){var o=w.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(o);var v=w.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(o.isDefaultPrevented()||!v)return;var f=this,h=this.tip(),T=this.getUID(this.type);this.setContent(),h.attr("id",T),this.$element.attr("aria-describedby",T),this.options.animation&&h.addClass("fade");var y=typeof this.options.placement=="function"?this.options.placement.call(this,h[0],this.$element[0]):this.options.placement,b=/\s?auto?\s?/i,_=b.test(y);_&&(y=y.replace(b,"")||"top"),h.detach().css({top:0,left:0,display:"block"}).addClass(y).data("bs."+this.type,this),this.options.container?h.appendTo(w(document).find(this.options.container)):h.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var D=this.getPosition(),O=h[0].offsetWidth,S=h[0].offsetHeight;if(_){var A=y,k=this.getPosition(this.$viewport);y=y=="bottom"&&D.bottom+S>k.bottom?"top":y=="top"&&D.top-S<k.top?"bottom":y=="right"&&D.right+O>k.width?"left":y=="left"&&D.left-O<k.left?"right":y,h.removeClass(A).addClass(y)}var I=this.getCalculatedOffset(y,D,O,S);this.applyPlacement(I,y);var E=function(){var x=f.hoverState;f.$element.trigger("shown.bs."+f.type),f.hoverState=null,x=="out"&&f.leave(f)};w.support.transition&&this.$tip.hasClass("fade")?h.one("bsTransitionEnd",E).emulateTransitionEnd(i.TRANSITION_DURATION):E()}},i.prototype.applyPlacement=function(o,v){var f=this.tip(),h=f[0].offsetWidth,T=f[0].offsetHeight,y=parseInt(f.css("margin-top"),10),b=parseInt(f.css("margin-left"),10);isNaN(y)&&(y=0),isNaN(b)&&(b=0),o.top+=y,o.left+=b,w.offset.setOffset(f[0],w.extend({using:function(I){f.css({top:Math.round(I.top),left:Math.round(I.left)})}},o),0),f.addClass("in");var _=f[0].offsetWidth,D=f[0].offsetHeight;v=="top"&&D!=T&&(o.top=o.top+T-D);var O=this.getViewportAdjustedDelta(v,o,_,D);O.left?o.left+=O.left:o.top+=O.top;var S=/top|bottom/.test(v),A=S?O.left*2-h+_:O.top*2-T+D,k=S?"offsetWidth":"offsetHeight";f.offset(o),this.replaceArrow(A,f[0][k],S)},i.prototype.replaceArrow=function(o,v,f){this.arrow().css(f?"left":"top",50*(1-o/v)+"%").css(f?"top":"left","")},i.prototype.setContent=function(){var o=this.tip(),v=this.getTitle();this.options.html?(this.options.sanitize&&(v=a(v,this.options.whiteList,this.options.sanitizeFn)),o.find(".tooltip-inner").html(v)):o.find(".tooltip-inner").text(v),o.removeClass("fade in top bottom left right")},i.prototype.hide=function(o){var v=this,f=w(this.$tip),h=w.Event("hide.bs."+this.type);function T(){v.hoverState!="in"&&f.detach(),v.$element&&v.$element.removeAttr("aria-describedby").trigger("hidden.bs."+v.type),o&&o()}if(this.$element.trigger(h),!h.isDefaultPrevented())return f.removeClass("in"),w.support.transition&&f.hasClass("fade")?f.one("bsTransitionEnd",T).emulateTransitionEnd(i.TRANSITION_DURATION):T(),this.hoverState=null,this},i.prototype.fixTitle=function(){var o=this.$element;(o.attr("title")||typeof o.attr("data-original-title")!="string")&&o.attr("data-original-title",o.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(o){o=o||this.$element;var v=o[0],f=v.tagName=="BODY",h=v.getBoundingClientRect();h.width==null&&(h=w.extend({},h,{width:h.right-h.left,height:h.bottom-h.top}));var T=window.SVGElement&&v instanceof window.SVGElement,y=f?{top:0,left:0}:T?null:o.offset(),b={scroll:f?document.documentElement.scrollTop||document.body.scrollTop:o.scrollTop()},_=f?{width:w(window).width(),height:w(window).height()}:null;return w.extend({},h,b,_,y)},i.prototype.getCalculatedOffset=function(o,v,f,h){return o=="bottom"?{top:v.top+v.height,left:v.left+v.width/2-f/2}:o=="top"?{top:v.top-h,left:v.left+v.width/2-f/2}:o=="left"?{top:v.top+v.height/2-h/2,left:v.left-f}:{top:v.top+v.height/2-h/2,left:v.left+v.width}},i.prototype.getViewportAdjustedDelta=function(o,v,f,h){var T={top:0,left:0};if(!this.$viewport)return T;var y=this.options.viewport&&this.options.viewport.padding||0,b=this.getPosition(this.$viewport);if(/right|left/.test(o)){var _=v.top-y-b.scroll,D=v.top+y-b.scroll+h;_<b.top?T.top=b.top-_:D>b.top+b.height&&(T.top=b.top+b.height-D)}else{var O=v.left-y,S=v.left+y+f;O<b.left?T.left=b.left-O:S>b.right&&(T.left=b.left+b.width-S)}return T},i.prototype.getTitle=function(){var o,v=this.$element,f=this.options;return o=v.attr("data-original-title")||(typeof f.title=="function"?f.title.call(v[0]):f.title),o},i.prototype.getUID=function(o){do o+=~~(Math.random()*1e6);while(document.getElementById(o));return o},i.prototype.tip=function(){if(!this.$tip&&(this.$tip=w(this.options.template),this.$tip.length!=1))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(o){var v=this;o&&(v=w(o.currentTarget).data("bs."+this.type),v||(v=new this.constructor(o.currentTarget,this.getDelegateOptions()),w(o.currentTarget).data("bs."+this.type,v))),o?(v.inState.click=!v.inState.click,v.isInStateTrue()?v.enter(v):v.leave(v)):v.tip().hasClass("in")?v.leave(v):v.enter(v)},i.prototype.destroy=function(){var o=this;clearTimeout(this.timeout),this.hide(function(){o.$element.off("."+o.type).removeData("bs."+o.type),o.$tip&&o.$tip.detach(),o.$tip=null,o.$arrow=null,o.$viewport=null,o.$element=null})},i.prototype.sanitizeHtml=function(o){return a(o,this.options.whiteList,this.options.sanitizeFn)};function u(o){return this.each(function(){var v=w(this),f=v.data("bs.tooltip"),h=typeof o=="object"&&o;!f&&/destroy|hide/.test(o)||(f||v.data("bs.tooltip",f=new i(this,h)),typeof o=="string"&&f[o]())})}var m=w.fn.tooltip;w.fn.tooltip=u,w.fn.tooltip.Constructor=i,w.fn.tooltip.noConflict=function(){return w.fn.tooltip=m,this}}(jQuery)},8526:w=>{var g=function(){this.Diff_Timeout=1,this.Diff_EditCost=4,this.Match_Threshold=.5,this.Match_Distance=1e3,this.Patch_DeleteThreshold=.5,this.Patch_Margin=4,this.Match_MaxBits=32},r=-1,p=1,s=0;g.Diff=function(n,c){return[n,c]},g.prototype.diff_main=function(n,c,d,a){typeof a=="undefined"&&(this.Diff_Timeout<=0?a=Number.MAX_VALUE:a=new Date().getTime()+this.Diff_Timeout*1e3);var i=a;if(n==null||c==null)throw new Error("Null input. (diff_main)");if(n==c)return n?[new g.Diff(s,n)]:[];typeof d=="undefined"&&(d=!0);var u=d,m=this.diff_commonPrefix(n,c),o=n.substring(0,m);n=n.substring(m),c=c.substring(m),m=this.diff_commonSuffix(n,c);var v=n.substring(n.length-m);n=n.substring(0,n.length-m),c=c.substring(0,c.length-m);var f=this.diff_compute_(n,c,u,i);return o&&f.unshift(new g.Diff(s,o)),v&&f.push(new g.Diff(s,v)),this.diff_cleanupMerge(f),f},g.prototype.diff_compute_=function(n,c,d,a){var i;if(!n)return[new g.Diff(p,c)];if(!c)return[new g.Diff(r,n)];var u=n.length>c.length?n:c,m=n.length>c.length?c:n,o=u.indexOf(m);if(o!=-1)return i=[new g.Diff(p,u.substring(0,o)),new g.Diff(s,m),new g.Diff(p,u.substring(o+m.length))],n.length>c.length&&(i[0][0]=i[2][0]=r),i;if(m.length==1)return[new g.Diff(r,n),new g.Diff(p,c)];var v=this.diff_halfMatch_(n,c);if(v){var f=v[0],h=v[1],T=v[2],y=v[3],b=v[4],_=this.diff_main(f,T,d,a),D=this.diff_main(h,y,d,a);return _.concat([new g.Diff(s,b)],D)}return d&&n.length>100&&c.length>100?this.diff_lineMode_(n,c,a):this.diff_bisect_(n,c,a)},g.prototype.diff_lineMode_=function(n,c,d){var a=this.diff_linesToChars_(n,c);n=a.chars1,c=a.chars2;var i=a.lineArray,u=this.diff_main(n,c,!1,d);this.diff_charsToLines_(u,i),this.diff_cleanupSemantic(u),u.push(new g.Diff(s,""));for(var m=0,o=0,v=0,f="",h="";m<u.length;){switch(u[m][0]){case p:v++,h+=u[m][1];break;case r:o++,f+=u[m][1];break;case s:if(o>=1&&v>=1){u.splice(m-o-v,o+v),m=m-o-v;for(var T=this.diff_main(f,h,!1,d),y=T.length-1;y>=0;y--)u.splice(m,0,T[y]);m=m+T.length}v=0,o=0,f="",h="";break}m++}return u.pop(),u},g.prototype.diff_bisect_=function(n,c,d){for(var a=n.length,i=c.length,u=Math.ceil((a+i)/2),m=u,o=2*u,v=new Array(o),f=new Array(o),h=0;h<o;h++)v[h]=-1,f[h]=-1;v[m+1]=0,f[m+1]=0;for(var T=a-i,y=T%2!=0,b=0,_=0,D=0,O=0,S=0;S<u&&!(new Date().getTime()>d);S++){for(var A=-S+b;A<=S-_;A+=2){var k=m+A,I;A==-S||A!=S&&v[k-1]<v[k+1]?I=v[k+1]:I=v[k-1]+1;for(var E=I-A;I<a&&E<i&&n.charAt(I)==c.charAt(E);)I++,E++;if(v[k]=I,I>a)_+=2;else if(E>i)b+=2;else if(y){var x=m+T-A;if(x>=0&&x<o&&f[x]!=-1){var P=a-f[x];if(I>=P)return this.diff_bisectSplit_(n,c,I,E,d)}}}for(var F=-S+D;F<=S-O;F+=2){var x=m+F,P;F==-S||F!=S&&f[x-1]<f[x+1]?P=f[x+1]:P=f[x-1]+1;for(var q=P-F;P<a&&q<i&&n.charAt(a-P-1)==c.charAt(i-q-1);)P++,q++;if(f[x]=P,P>a)O+=2;else if(q>i)D+=2;else if(!y){var k=m+T-F;if(k>=0&&k<o&&v[k]!=-1){var I=v[k],E=m+I-k;if(P=a-P,I>=P)return this.diff_bisectSplit_(n,c,I,E,d)}}}}return[new g.Diff(r,n),new g.Diff(p,c)]},g.prototype.diff_bisectSplit_=function(n,c,d,a,i){var u=n.substring(0,d),m=c.substring(0,a),o=n.substring(d),v=c.substring(a),f=this.diff_main(u,m,!1,i),h=this.diff_main(o,v,!1,i);return f.concat(h)},g.prototype.diff_linesToChars_=function(n,c){var d=[],a={};d[0]="";function i(v){for(var f="",h=0,T=-1,y=d.length;T<v.length-1;){T=v.indexOf(`
`,h),T==-1&&(T=v.length-1);var b=v.substring(h,T+1);(a.hasOwnProperty?a.hasOwnProperty(b):a[b]!==void 0)?f+=String.fromCharCode(a[b]):(y==u&&(b=v.substring(h),T=v.length),f+=String.fromCharCode(y),a[b]=y,d[y++]=b),h=T+1}return f}var u=4e4,m=i(n);u=65535;var o=i(c);return{chars1:m,chars2:o,lineArray:d}},g.prototype.diff_charsToLines_=function(n,c){for(var d=0;d<n.length;d++){for(var a=n[d][1],i=[],u=0;u<a.length;u++)i[u]=c[a.charCodeAt(u)];n[d][1]=i.join("")}},g.prototype.diff_commonPrefix=function(n,c){if(!n||!c||n.charAt(0)!=c.charAt(0))return 0;for(var d=0,a=Math.min(n.length,c.length),i=a,u=0;d<i;)n.substring(u,i)==c.substring(u,i)?(d=i,u=d):a=i,i=Math.floor((a-d)/2+d);return i},g.prototype.diff_commonSuffix=function(n,c){if(!n||!c||n.charAt(n.length-1)!=c.charAt(c.length-1))return 0;for(var d=0,a=Math.min(n.length,c.length),i=a,u=0;d<i;)n.substring(n.length-i,n.length-u)==c.substring(c.length-i,c.length-u)?(d=i,u=d):a=i,i=Math.floor((a-d)/2+d);return i},g.prototype.diff_commonOverlap_=function(n,c){var d=n.length,a=c.length;if(d==0||a==0)return 0;d>a?n=n.substring(d-a):d<a&&(c=c.substring(0,d));var i=Math.min(d,a);if(n==c)return i;for(var u=0,m=1;;){var o=n.substring(i-m),v=c.indexOf(o);if(v==-1)return u;m+=v,(v==0||n.substring(i-m)==c.substring(0,m))&&(u=m,m++)}},g.prototype.diff_halfMatch_=function(n,c){if(this.Diff_Timeout<=0)return null;var d=n.length>c.length?n:c,a=n.length>c.length?c:n;if(d.length<4||a.length*2<d.length)return null;var i=this;function u(_,D,O){for(var S=_.substring(O,O+Math.floor(_.length/4)),A=-1,k="",I,E,x,P;(A=D.indexOf(S,A+1))!=-1;){var F=i.diff_commonPrefix(_.substring(O),D.substring(A)),q=i.diff_commonSuffix(_.substring(0,O),D.substring(0,A));k.length<q+F&&(k=D.substring(A-q,A)+D.substring(A,A+F),I=_.substring(0,O-q),E=_.substring(O+F),x=D.substring(0,A-q),P=D.substring(A+F))}return k.length*2>=_.length?[I,E,x,P,k]:null}var m=u(d,a,Math.ceil(d.length/4)),o=u(d,a,Math.ceil(d.length/2)),v;if(!m&&!o)return null;o?m?v=m[4].length>o[4].length?m:o:v=o:v=m;var f,h,T,y;n.length>c.length?(f=v[0],h=v[1],T=v[2],y=v[3]):(T=v[0],y=v[1],f=v[2],h=v[3]);var b=v[4];return[f,h,T,y,b]},g.prototype.diff_cleanupSemantic=function(n){for(var c=!1,d=[],a=0,i=null,u=0,m=0,o=0,v=0,f=0;u<n.length;)n[u][0]==s?(d[a++]=u,m=v,o=f,v=0,f=0,i=n[u][1]):(n[u][0]==p?v+=n[u][1].length:f+=n[u][1].length,i&&i.length<=Math.max(m,o)&&i.length<=Math.max(v,f)&&(n.splice(d[a-1],0,new g.Diff(r,i)),n[d[a-1]+1][0]=p,a--,a--,u=a>0?d[a-1]:-1,m=0,o=0,v=0,f=0,i=null,c=!0)),u++;for(c&&this.diff_cleanupMerge(n),this.diff_cleanupSemanticLossless(n),u=1;u<n.length;){if(n[u-1][0]==r&&n[u][0]==p){var h=n[u-1][1],T=n[u][1],y=this.diff_commonOverlap_(h,T),b=this.diff_commonOverlap_(T,h);y>=b?(y>=h.length/2||y>=T.length/2)&&(n.splice(u,0,new g.Diff(s,T.substring(0,y))),n[u-1][1]=h.substring(0,h.length-y),n[u+1][1]=T.substring(y),u++):(b>=h.length/2||b>=T.length/2)&&(n.splice(u,0,new g.Diff(s,h.substring(0,b))),n[u-1][0]=p,n[u-1][1]=T.substring(0,T.length-b),n[u+1][0]=r,n[u+1][1]=h.substring(b),u++),u++}u++}},g.prototype.diff_cleanupSemanticLossless=function(n){function c(b,_){if(!b||!_)return 6;var D=b.charAt(b.length-1),O=_.charAt(0),S=D.match(g.nonAlphaNumericRegex_),A=O.match(g.nonAlphaNumericRegex_),k=S&&D.match(g.whitespaceRegex_),I=A&&O.match(g.whitespaceRegex_),E=k&&D.match(g.linebreakRegex_),x=I&&O.match(g.linebreakRegex_),P=E&&b.match(g.blanklineEndRegex_),F=x&&_.match(g.blanklineStartRegex_);return P||F?5:E||x?4:S&&!k&&I?3:k||I?2:S||A?1:0}for(var d=1;d<n.length-1;){if(n[d-1][0]==s&&n[d+1][0]==s){var a=n[d-1][1],i=n[d][1],u=n[d+1][1],m=this.diff_commonSuffix(a,i);if(m){var o=i.substring(i.length-m);a=a.substring(0,a.length-m),i=o+i.substring(0,i.length-m),u=o+u}for(var v=a,f=i,h=u,T=c(a,i)+c(i,u);i.charAt(0)===u.charAt(0);){a+=i.charAt(0),i=i.substring(1)+u.charAt(0),u=u.substring(1);var y=c(a,i)+c(i,u);y>=T&&(T=y,v=a,f=i,h=u)}n[d-1][1]!=v&&(v?n[d-1][1]=v:(n.splice(d-1,1),d--),n[d][1]=f,h?n[d+1][1]=h:(n.splice(d+1,1),d--))}d++}},g.nonAlphaNumericRegex_=/[^a-zA-Z0-9]/,g.whitespaceRegex_=/\s/,g.linebreakRegex_=/[\r\n]/,g.blanklineEndRegex_=/\n\r?\n$/,g.blanklineStartRegex_=/^\r?\n\r?\n/,g.prototype.diff_cleanupEfficiency=function(n){for(var c=!1,d=[],a=0,i=null,u=0,m=!1,o=!1,v=!1,f=!1;u<n.length;)n[u][0]==s?(n[u][1].length<this.Diff_EditCost&&(v||f)?(d[a++]=u,m=v,o=f,i=n[u][1]):(a=0,i=null),v=f=!1):(n[u][0]==r?f=!0:v=!0,i&&(m&&o&&v&&f||i.length<this.Diff_EditCost/2&&m+o+v+f==3)&&(n.splice(d[a-1],0,new g.Diff(r,i)),n[d[a-1]+1][0]=p,a--,i=null,m&&o?(v=f=!0,a=0):(a--,u=a>0?d[a-1]:-1,v=f=!1),c=!0)),u++;c&&this.diff_cleanupMerge(n)},g.prototype.diff_cleanupMerge=function(n){n.push(new g.Diff(s,""));for(var c=0,d=0,a=0,i="",u="",m;c<n.length;)switch(n[c][0]){case p:a++,u+=n[c][1],c++;break;case r:d++,i+=n[c][1],c++;break;case s:d+a>1?(d!==0&&a!==0&&(m=this.diff_commonPrefix(u,i),m!==0&&(c-d-a>0&&n[c-d-a-1][0]==s?n[c-d-a-1][1]+=u.substring(0,m):(n.splice(0,0,new g.Diff(s,u.substring(0,m))),c++),u=u.substring(m),i=i.substring(m)),m=this.diff_commonSuffix(u,i),m!==0&&(n[c][1]=u.substring(u.length-m)+n[c][1],u=u.substring(0,u.length-m),i=i.substring(0,i.length-m))),c-=d+a,n.splice(c,d+a),i.length&&(n.splice(c,0,new g.Diff(r,i)),c++),u.length&&(n.splice(c,0,new g.Diff(p,u)),c++),c++):c!==0&&n[c-1][0]==s?(n[c-1][1]+=n[c][1],n.splice(c,1)):c++,a=0,d=0,i="",u="";break}n[n.length-1][1]===""&&n.pop();var o=!1;for(c=1;c<n.length-1;)n[c-1][0]==s&&n[c+1][0]==s&&(n[c][1].substring(n[c][1].length-n[c-1][1].length)==n[c-1][1]?(n[c][1]=n[c-1][1]+n[c][1].substring(0,n[c][1].length-n[c-1][1].length),n[c+1][1]=n[c-1][1]+n[c+1][1],n.splice(c-1,1),o=!0):n[c][1].substring(0,n[c+1][1].length)==n[c+1][1]&&(n[c-1][1]+=n[c+1][1],n[c][1]=n[c][1].substring(n[c+1][1].length)+n[c+1][1],n.splice(c+1,1),o=!0)),c++;o&&this.diff_cleanupMerge(n)},g.prototype.diff_xIndex=function(n,c){var d=0,a=0,i=0,u=0,m;for(m=0;m<n.length&&(n[m][0]!==p&&(d+=n[m][1].length),n[m][0]!==r&&(a+=n[m][1].length),!(d>c));m++)i=d,u=a;return n.length!=m&&n[m][0]===r?u:u+(c-i)},g.prototype.diff_prettyHtml=function(n){for(var c=[],d=/&/g,a=/</g,i=/>/g,u=/\n/g,m=0;m<n.length;m++){var o=n[m][0],v=n[m][1],f=v.replace(d,"&amp;").replace(a,"&lt;").replace(i,"&gt;").replace(u,"&para;<br>");switch(o){case p:c[m]='<ins style="background:#e6ffe6;">'+f+"</ins>";break;case r:c[m]='<del style="background:#ffe6e6;">'+f+"</del>";break;case s:c[m]="<span>"+f+"</span>";break}}return c.join("")},g.prototype.diff_text1=function(n){for(var c=[],d=0;d<n.length;d++)n[d][0]!==p&&(c[d]=n[d][1]);return c.join("")},g.prototype.diff_text2=function(n){for(var c=[],d=0;d<n.length;d++)n[d][0]!==r&&(c[d]=n[d][1]);return c.join("")},g.prototype.diff_levenshtein=function(n){for(var c=0,d=0,a=0,i=0;i<n.length;i++){var u=n[i][0],m=n[i][1];switch(u){case p:d+=m.length;break;case r:a+=m.length;break;case s:c+=Math.max(d,a),d=0,a=0;break}}return c+=Math.max(d,a),c},g.prototype.diff_toDelta=function(n){for(var c=[],d=0;d<n.length;d++)switch(n[d][0]){case p:c[d]="+"+encodeURI(n[d][1]);break;case r:c[d]="-"+n[d][1].length;break;case s:c[d]="="+n[d][1].length;break}return c.join("	").replace(/%20/g," ")},g.prototype.diff_fromDelta=function(n,c){for(var d=[],a=0,i=0,u=c.split(/\t/g),m=0;m<u.length;m++){var o=u[m].substring(1);switch(u[m].charAt(0)){case"+":try{d[a++]=new g.Diff(p,decodeURI(o))}catch(h){throw new Error("Illegal escape in diff_fromDelta: "+o)}break;case"-":case"=":var v=parseInt(o,10);if(isNaN(v)||v<0)throw new Error("Invalid number in diff_fromDelta: "+o);var f=n.substring(i,i+=v);u[m].charAt(0)=="="?d[a++]=new g.Diff(s,f):d[a++]=new g.Diff(r,f);break;default:if(u[m])throw new Error("Invalid diff operation in diff_fromDelta: "+u[m])}}if(i!=n.length)throw new Error("Delta length ("+i+") does not equal source text length ("+n.length+").");return d},g.prototype.match_main=function(n,c,d){if(n==null||c==null||d==null)throw new Error("Null input. (match_main)");return d=Math.max(0,Math.min(d,n.length)),n==c?0:n.length?n.substring(d,d+c.length)==c?d:this.match_bitap_(n,c,d):-1},g.prototype.match_bitap_=function(n,c,d){if(c.length>this.Match_MaxBits)throw new Error("Pattern too long for this browser.");var a=this.match_alphabet_(c),i=this;function u(I,E){var x=I/c.length,P=Math.abs(d-E);return i.Match_Distance?x+P/i.Match_Distance:P?1:x}var m=this.Match_Threshold,o=n.indexOf(c,d);o!=-1&&(m=Math.min(u(0,o),m),o=n.lastIndexOf(c,d+c.length),o!=-1&&(m=Math.min(u(0,o),m)));var v=1<<c.length-1;o=-1;for(var f,h,T=c.length+n.length,y,b=0;b<c.length;b++){for(f=0,h=T;f<h;)u(b,d+h)<=m?f=h:T=h,h=Math.floor((T-f)/2+f);T=h;var _=Math.max(1,d-h+1),D=Math.min(d+h,n.length)+c.length,O=Array(D+2);O[D+1]=(1<<b)-1;for(var S=D;S>=_;S--){var A=a[n.charAt(S-1)];if(b===0?O[S]=(O[S+1]<<1|1)&A:O[S]=(O[S+1]<<1|1)&A|((y[S+1]|y[S])<<1|1)|y[S+1],O[S]&v){var k=u(b,S-1);if(k<=m)if(m=k,o=S-1,o>d)_=Math.max(1,2*d-o);else break}}if(u(b+1,d)>m)break;y=O}return o},g.prototype.match_alphabet_=function(n){for(var c={},d=0;d<n.length;d++)c[n.charAt(d)]=0;for(var d=0;d<n.length;d++)c[n.charAt(d)]|=1<<n.length-d-1;return c},g.prototype.patch_addContext_=function(n,c){if(c.length!=0){if(n.start2===null)throw Error("patch not initialized");for(var d=c.substring(n.start2,n.start2+n.length1),a=0;c.indexOf(d)!=c.lastIndexOf(d)&&d.length<this.Match_MaxBits-this.Patch_Margin-this.Patch_Margin;)a+=this.Patch_Margin,d=c.substring(n.start2-a,n.start2+n.length1+a);a+=this.Patch_Margin;var i=c.substring(n.start2-a,n.start2);i&&n.diffs.unshift(new g.Diff(s,i));var u=c.substring(n.start2+n.length1,n.start2+n.length1+a);u&&n.diffs.push(new g.Diff(s,u)),n.start1-=i.length,n.start2-=i.length,n.length1+=i.length+u.length,n.length2+=i.length+u.length}},g.prototype.patch_make=function(n,c,d){var a,i;if(typeof n=="string"&&typeof c=="string"&&typeof d=="undefined")a=n,i=this.diff_main(a,c,!0),i.length>2&&(this.diff_cleanupSemantic(i),this.diff_cleanupEfficiency(i));else if(n&&typeof n=="object"&&typeof c=="undefined"&&typeof d=="undefined")i=n,a=this.diff_text1(i);else if(typeof n=="string"&&c&&typeof c=="object"&&typeof d=="undefined")a=n,i=c;else if(typeof n=="string"&&typeof c=="string"&&d&&typeof d=="object")a=n,i=d;else throw new Error("Unknown call format to patch_make.");if(i.length===0)return[];for(var u=[],m=new g.patch_obj,o=0,v=0,f=0,h=a,T=a,y=0;y<i.length;y++){var b=i[y][0],_=i[y][1];switch(!o&&b!==s&&(m.start1=v,m.start2=f),b){case p:m.diffs[o++]=i[y],m.length2+=_.length,T=T.substring(0,f)+_+T.substring(f);break;case r:m.length1+=_.length,m.diffs[o++]=i[y],T=T.substring(0,f)+T.substring(f+_.length);break;case s:_.length<=2*this.Patch_Margin&&o&&i.length!=y+1?(m.diffs[o++]=i[y],m.length1+=_.length,m.length2+=_.length):_.length>=2*this.Patch_Margin&&o&&(this.patch_addContext_(m,h),u.push(m),m=new g.patch_obj,o=0,h=T,v=f);break}b!==p&&(v+=_.length),b!==r&&(f+=_.length)}return o&&(this.patch_addContext_(m,h),u.push(m)),u},g.prototype.patch_deepCopy=function(n){for(var c=[],d=0;d<n.length;d++){var a=n[d],i=new g.patch_obj;i.diffs=[];for(var u=0;u<a.diffs.length;u++)i.diffs[u]=new g.Diff(a.diffs[u][0],a.diffs[u][1]);i.start1=a.start1,i.start2=a.start2,i.length1=a.length1,i.length2=a.length2,c[d]=i}return c},g.prototype.patch_apply=function(n,c){if(n.length==0)return[c,[]];n=this.patch_deepCopy(n);var d=this.patch_addPadding(n);c=d+c+d,this.patch_splitMax(n);for(var a=0,i=[],u=0;u<n.length;u++){var m=n[u].start2+a,o=this.diff_text1(n[u].diffs),v,f=-1;if(o.length>this.Match_MaxBits?(v=this.match_main(c,o.substring(0,this.Match_MaxBits),m),v!=-1&&(f=this.match_main(c,o.substring(o.length-this.Match_MaxBits),m+o.length-this.Match_MaxBits),(f==-1||v>=f)&&(v=-1))):v=this.match_main(c,o,m),v==-1)i[u]=!1,a-=n[u].length2-n[u].length1;else{i[u]=!0,a=v-m;var h;if(f==-1?h=c.substring(v,v+o.length):h=c.substring(v,f+this.Match_MaxBits),o==h)c=c.substring(0,v)+this.diff_text2(n[u].diffs)+c.substring(v+o.length);else{var T=this.diff_main(o,h,!1);if(o.length>this.Match_MaxBits&&this.diff_levenshtein(T)/o.length>this.Patch_DeleteThreshold)i[u]=!1;else{this.diff_cleanupSemanticLossless(T);for(var y=0,b,_=0;_<n[u].diffs.length;_++){var D=n[u].diffs[_];D[0]!==s&&(b=this.diff_xIndex(T,y)),D[0]===p?c=c.substring(0,v+b)+D[1]+c.substring(v+b):D[0]===r&&(c=c.substring(0,v+b)+c.substring(v+this.diff_xIndex(T,y+D[1].length))),D[0]!==r&&(y+=D[1].length)}}}}}return c=c.substring(d.length,c.length-d.length),[c,i]},g.prototype.patch_addPadding=function(n){for(var c=this.Patch_Margin,d="",a=1;a<=c;a++)d+=String.fromCharCode(a);for(var a=0;a<n.length;a++)n[a].start1+=c,n[a].start2+=c;var i=n[0],u=i.diffs;if(u.length==0||u[0][0]!=s)u.unshift(new g.Diff(s,d)),i.start1-=c,i.start2-=c,i.length1+=c,i.length2+=c;else if(c>u[0][1].length){var m=c-u[0][1].length;u[0][1]=d.substring(u[0][1].length)+u[0][1],i.start1-=m,i.start2-=m,i.length1+=m,i.length2+=m}if(i=n[n.length-1],u=i.diffs,u.length==0||u[u.length-1][0]!=s)u.push(new g.Diff(s,d)),i.length1+=c,i.length2+=c;else if(c>u[u.length-1][1].length){var m=c-u[u.length-1][1].length;u[u.length-1][1]+=d.substring(0,m),i.length1+=m,i.length2+=m}return d},g.prototype.patch_splitMax=function(n){for(var c=this.Match_MaxBits,d=0;d<n.length;d++)if(!(n[d].length1<=c)){var a=n[d];n.splice(d--,1);for(var i=a.start1,u=a.start2,m="";a.diffs.length!==0;){var o=new g.patch_obj,v=!0;for(o.start1=i-m.length,o.start2=u-m.length,m!==""&&(o.length1=o.length2=m.length,o.diffs.push(new g.Diff(s,m)));a.diffs.length!==0&&o.length1<c-this.Patch_Margin;){var f=a.diffs[0][0],h=a.diffs[0][1];f===p?(o.length2+=h.length,u+=h.length,o.diffs.push(a.diffs.shift()),v=!1):f===r&&o.diffs.length==1&&o.diffs[0][0]==s&&h.length>2*c?(o.length1+=h.length,i+=h.length,v=!1,o.diffs.push(new g.Diff(f,h)),a.diffs.shift()):(h=h.substring(0,c-o.length1-this.Patch_Margin),o.length1+=h.length,i+=h.length,f===s?(o.length2+=h.length,u+=h.length):v=!1,o.diffs.push(new g.Diff(f,h)),h==a.diffs[0][1]?a.diffs.shift():a.diffs[0][1]=a.diffs[0][1].substring(h.length))}m=this.diff_text2(o.diffs),m=m.substring(m.length-this.Patch_Margin);var T=this.diff_text1(a.diffs).substring(0,this.Patch_Margin);T!==""&&(o.length1+=T.length,o.length2+=T.length,o.diffs.length!==0&&o.diffs[o.diffs.length-1][0]===s?o.diffs[o.diffs.length-1][1]+=T:o.diffs.push(new g.Diff(s,T))),v||n.splice(++d,0,o)}}},g.prototype.patch_toText=function(n){for(var c=[],d=0;d<n.length;d++)c[d]=n[d];return c.join("")},g.prototype.patch_fromText=function(n){var c=[];if(!n)return c;for(var d=n.split(`
`),a=0,i=/^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/;a<d.length;){var u=d[a].match(i);if(!u)throw new Error("Invalid patch string: "+d[a]);var m=new g.patch_obj;for(c.push(m),m.start1=parseInt(u[1],10),u[2]===""?(m.start1--,m.length1=1):u[2]=="0"?m.length1=0:(m.start1--,m.length1=parseInt(u[2],10)),m.start2=parseInt(u[3],10),u[4]===""?(m.start2--,m.length2=1):u[4]=="0"?m.length2=0:(m.start2--,m.length2=parseInt(u[4],10)),a++;a<d.length;){var o=d[a].charAt(0);try{var v=decodeURI(d[a].substring(1))}catch(f){throw new Error("Illegal escape in patch_fromText: "+v)}if(o=="-")m.diffs.push(new g.Diff(r,v));else if(o=="+")m.diffs.push(new g.Diff(p,v));else if(o==" ")m.diffs.push(new g.Diff(s,v));else{if(o=="@")break;if(o!=="")throw new Error('Invalid patch mode "'+o+'" in: '+v)}a++}}return c},g.patch_obj=function(){this.diffs=[],this.start1=null,this.start2=null,this.length1=0,this.length2=0},g.patch_obj.prototype.toString=function(){var n,c;this.length1===0?n=this.start1+",0":this.length1==1?n=this.start1+1:n=this.start1+1+","+this.length1,this.length2===0?c=this.start2+",0":this.length2==1?c=this.start2+1:c=this.start2+1+","+this.length2;for(var d=["@@ -"+n+" +"+c+` @@
`],a,i=0;i<this.diffs.length;i++){switch(this.diffs[i][0]){case p:a="+";break;case r:a="-";break;case s:a=" ";break}d[i+1]=a+encodeURI(this.diffs[i][1])+`
`}return d.join("").replace(/%20/g," ")},w.exports=g,w.exports.diff_match_patch=g,w.exports.DIFF_DELETE=r,w.exports.DIFF_INSERT=p,w.exports.DIFF_EQUAL=s},2706:function(w){/**!

 @license
 handlebars v4.7.8

Copyright (C) 2011-2019 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/(function(g,r){w.exports=r()})(this,function(){return function(g){function r(s){if(p[s])return p[s].exports;var n=p[s]={exports:{},id:s,loaded:!1};return g[s].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var p={};return r.m=g,r.c=p,r.p="",r(0)}([function(g,r,p){"use strict";function s(){var D=b();return D.compile=function(O,S){return m.compile(O,S,D)},D.precompile=function(O,S){return m.precompile(O,S,D)},D.AST=i.default,D.Compiler=m.Compiler,D.JavaScriptCompiler=v.default,D.Parser=u.parser,D.parse=u.parse,D.parseWithoutProcessing=u.parseWithoutProcessing,D}var n=p(1).default;r.__esModule=!0;var c=p(2),d=n(c),a=p(84),i=n(a),u=p(85),m=p(90),o=p(91),v=n(o),f=p(88),h=n(f),T=p(83),y=n(T),b=d.default.create,_=s();_.create=s,y.default(_),_.Visitor=h.default,_.default=_,r.default=_,g.exports=r.default},function(g,r){"use strict";r.default=function(p){return p&&p.__esModule?p:{default:p}},r.__esModule=!0},function(g,r,p){"use strict";function s(){var D=new a.HandlebarsEnvironment;return f.extend(D,a),D.SafeString=u.default,D.Exception=o.default,D.Utils=f,D.escapeExpression=f.escapeExpression,D.VM=T,D.template=function(O){return T.template(O,D)},D}var n=p(3).default,c=p(1).default;r.__esModule=!0;var d=p(4),a=n(d),i=p(77),u=c(i),m=p(6),o=c(m),v=p(5),f=n(v),h=p(78),T=n(h),y=p(83),b=c(y),_=s();_.create=s,b.default(_),_.default=_,r.default=_,g.exports=r.default},function(g,r){"use strict";r.default=function(p){if(p&&p.__esModule)return p;var s={};if(p!=null)for(var n in p)Object.prototype.hasOwnProperty.call(p,n)&&(s[n]=p[n]);return s.default=p,s},r.__esModule=!0},function(g,r,p){"use strict";function s(D,O,S){this.helpers=D||{},this.partials=O||{},this.decorators=S||{},i.registerDefaultHelpers(this),u.registerDefaultDecorators(this)}var n=p(1).default;r.__esModule=!0,r.HandlebarsEnvironment=s;var c=p(5),d=p(6),a=n(d),i=p(10),u=p(70),m=p(72),o=n(m),v=p(73),f="4.7.8";r.VERSION=f;var h=8;r.COMPILER_REVISION=h;var T=7;r.LAST_COMPATIBLE_COMPILER_REVISION=T;var y={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0 <4.3.0",8:">= 4.3.0"};r.REVISION_CHANGES=y;var b="[object Object]";s.prototype={constructor:s,logger:o.default,log:o.default.log,registerHelper:function(D,O){if(c.toString.call(D)===b){if(O)throw new a.default("Arg not supported with multiple helpers");c.extend(this.helpers,D)}else this.helpers[D]=O},unregisterHelper:function(D){delete this.helpers[D]},registerPartial:function(D,O){if(c.toString.call(D)===b)c.extend(this.partials,D);else{if(typeof O=="undefined")throw new a.default('Attempting to register a partial called "'+D+'" as undefined');this.partials[D]=O}},unregisterPartial:function(D){delete this.partials[D]},registerDecorator:function(D,O){if(c.toString.call(D)===b){if(O)throw new a.default("Arg not supported with multiple decorators");c.extend(this.decorators,D)}else this.decorators[D]=O},unregisterDecorator:function(D){delete this.decorators[D]},resetLoggedPropertyAccesses:function(){v.resetLoggedProperties()}};var _=o.default.log;r.log=_,r.createFrame=c.createFrame,r.logger=o.default},function(g,r){"use strict";function p(y){return m[y]}function s(y){for(var b=1;b<arguments.length;b++)for(var _ in arguments[b])Object.prototype.hasOwnProperty.call(arguments[b],_)&&(y[_]=arguments[b][_]);return y}function n(y,b){for(var _=0,D=y.length;_<D;_++)if(y[_]===b)return _;return-1}function c(y){if(typeof y!="string"){if(y&&y.toHTML)return y.toHTML();if(y==null)return"";if(!y)return y+"";y=""+y}return v.test(y)?y.replace(o,p):y}function d(y){return!y&&y!==0||!(!T(y)||y.length!==0)}function a(y){var b=s({},y);return b._parent=y,b}function i(y,b){return y.path=b,y}function u(y,b){return(y?y+".":"")+b}r.__esModule=!0,r.extend=s,r.indexOf=n,r.escapeExpression=c,r.isEmpty=d,r.createFrame=a,r.blockParams=i,r.appendContextPath=u;var m={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},o=/[&<>"'`=]/g,v=/[&<>"'`=]/,f=Object.prototype.toString;r.toString=f;var h=function(y){return typeof y=="function"};h(/x/)&&(r.isFunction=h=function(y){return typeof y=="function"&&f.call(y)==="[object Function]"}),r.isFunction=h;var T=Array.isArray||function(y){return!(!y||typeof y!="object")&&f.call(y)==="[object Array]"};r.isArray=T},function(g,r,p){"use strict";function s(d,a){var i=a&&a.loc,u=void 0,m=void 0,o=void 0,v=void 0;i&&(u=i.start.line,m=i.end.line,o=i.start.column,v=i.end.column,d+=" - "+u+":"+o);for(var f=Error.prototype.constructor.call(this,d),h=0;h<c.length;h++)this[c[h]]=f[c[h]];Error.captureStackTrace&&Error.captureStackTrace(this,s);try{i&&(this.lineNumber=u,this.endLineNumber=m,n?(Object.defineProperty(this,"column",{value:o,enumerable:!0}),Object.defineProperty(this,"endColumn",{value:v,enumerable:!0})):(this.column=o,this.endColumn=v))}catch(T){}}var n=p(7).default;r.__esModule=!0;var c=["description","fileName","lineNumber","endLineNumber","message","name","number","stack"];s.prototype=new Error,r.default=s,g.exports=r.default},function(g,r,p){g.exports={default:p(8),__esModule:!0}},function(g,r,p){var s=p(9);g.exports=function(n,c,d){return s.setDesc(n,c,d)}},function(g,r){var p=Object;g.exports={create:p.create,getProto:p.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:p.getOwnPropertyDescriptor,setDesc:p.defineProperty,setDescs:p.defineProperties,getKeys:p.keys,getNames:p.getOwnPropertyNames,getSymbols:p.getOwnPropertySymbols,each:[].forEach}},function(g,r,p){"use strict";function s(O){a.default(O),u.default(O),o.default(O),f.default(O),T.default(O),b.default(O),D.default(O)}function n(O,S,A){O.helpers[S]&&(O.hooks[S]=O.helpers[S],A||delete O.helpers[S])}var c=p(1).default;r.__esModule=!0,r.registerDefaultHelpers=s,r.moveHelperToHooks=n;var d=p(11),a=c(d),i=p(12),u=c(i),m=p(65),o=c(m),v=p(66),f=c(v),h=p(67),T=c(h),y=p(68),b=c(y),_=p(69),D=c(_)},function(g,r,p){"use strict";r.__esModule=!0;var s=p(5);r.default=function(n){n.registerHelper("blockHelperMissing",function(c,d){var a=d.inverse,i=d.fn;if(c===!0)return i(this);if(c===!1||c==null)return a(this);if(s.isArray(c))return c.length>0?(d.ids&&(d.ids=[d.name]),n.helpers.each(c,d)):a(this);if(d.data&&d.ids){var u=s.createFrame(d.data);u.contextPath=s.appendContextPath(d.data.contextPath,d.name),d={data:u}}return i(c,d)})},g.exports=r.default},function(g,r,p){"use strict";var s=p(13).default,n=p(43).default,c=p(55).default,d=p(60).default,a=p(1).default;r.__esModule=!0;var i=p(5),u=p(6),m=a(u);r.default=function(o){o.registerHelper("each",function(v,f){function h(E,x,P){D&&(D.key=E,D.index=x,D.first=x===0,D.last=!!P,O&&(D.contextPath=O+E)),_+=T(v[E],{data:D,blockParams:i.blockParams([v[E],E],[O+E,null])})}if(!f)throw new m.default("Must pass iterator to #each");var T=f.fn,y=f.inverse,b=0,_="",D=void 0,O=void 0;if(f.data&&f.ids&&(O=i.appendContextPath(f.data.contextPath,f.ids[0])+"."),i.isFunction(v)&&(v=v.call(this)),f.data&&(D=i.createFrame(f.data)),v&&typeof v=="object")if(i.isArray(v))for(var S=v.length;b<S;b++)b in v&&h(b,b,b===v.length-1);else if(typeof s=="function"&&v[n]){for(var A=[],k=c(v),I=k.next();!I.done;I=k.next())A.push(I.value);v=A;for(var S=v.length;b<S;b++)h(b,b,b===v.length-1)}else(function(){var E=void 0;d(v).forEach(function(x){E!==void 0&&h(E,b-1),E=x,b++}),E!==void 0&&h(E,b-1,!0)})();return b===0&&(_=y(this)),_})},g.exports=r.default},function(g,r,p){g.exports={default:p(14),__esModule:!0}},function(g,r,p){p(15),p(42),g.exports=p(21).Symbol},function(g,r,p){"use strict";var s=p(9),n=p(16),c=p(17),d=p(18),a=p(20),i=p(24),u=p(19),m=p(27),o=p(28),v=p(30),f=p(29),h=p(31),T=p(36),y=p(37),b=p(38),_=p(39),D=p(32),O=p(26),S=s.getDesc,A=s.setDesc,k=s.create,I=T.get,E=n.Symbol,x=n.JSON,P=x&&x.stringify,F=!1,q=f("_hidden"),W=s.isEnum,M=m("symbol-registry"),$=m("symbols"),H=typeof E=="function",Z=Object.prototype,G=d&&u(function(){return k(A({},"a",{get:function(){return A(this,"a",{value:7}).a}})).a!=7})?function(ut,Pt,_t){var $t=S(Z,Pt);$t&&delete Z[Pt],A(ut,Pt,_t),$t&&ut!==Z&&A(Z,Pt,$t)}:A,tt=function(ut){var Pt=$[ut]=k(E.prototype);return Pt._k=ut,d&&F&&G(Z,ut,{configurable:!0,set:function(_t){c(this,q)&&c(this[q],ut)&&(this[q][ut]=!1),G(this,ut,O(1,_t))}}),Pt},it=function(ut){return typeof ut=="symbol"},lt=function(ut,Pt,_t){return _t&&c($,Pt)?(_t.enumerable?(c(ut,q)&&ut[q][Pt]&&(ut[q][Pt]=!1),_t=k(_t,{enumerable:O(0,!1)})):(c(ut,q)||A(ut,q,O(1,{})),ut[q][Pt]=!0),G(ut,Pt,_t)):A(ut,Pt,_t)},Y=function(ut,Pt){_(ut);for(var _t,$t=y(Pt=D(Pt)),de=0,Be=$t.length;Be>de;)lt(ut,_t=$t[de++],Pt[_t]);return ut},bt=function(ut,Pt){return Pt===void 0?k(ut):Y(k(ut),Pt)},St=function(ut){var Pt=W.call(this,ut);return!(Pt||!c(this,ut)||!c($,ut)||c(this,q)&&this[q][ut])||Pt},xt=function(ut,Pt){var _t=S(ut=D(ut),Pt);return!_t||!c($,Pt)||c(ut,q)&&ut[q][Pt]||(_t.enumerable=!0),_t},oe=function(ut){for(var Pt,_t=I(D(ut)),$t=[],de=0;_t.length>de;)c($,Pt=_t[de++])||Pt==q||$t.push(Pt);return $t},De=function(ut){for(var Pt,_t=I(D(ut)),$t=[],de=0;_t.length>de;)c($,Pt=_t[de++])&&$t.push($[Pt]);return $t},_e=function(ut){if(ut!==void 0&&!it(ut)){for(var Pt,_t,$t=[ut],de=1,Be=arguments;Be.length>de;)$t.push(Be[de++]);return Pt=$t[1],typeof Pt=="function"&&(_t=Pt),!_t&&b(Pt)||(Pt=function(ae,Te){if(_t&&(Te=_t.call(this,ae,Te)),!it(Te))return Te}),$t[1]=Pt,P.apply(x,$t)}},we=u(function(){var ut=E();return P([ut])!="[null]"||P({a:ut})!="{}"||P(Object(ut))!="{}"});H||(E=function(){if(it(this))throw TypeError("Symbol is not a constructor");return tt(v(arguments.length>0?arguments[0]:void 0))},i(E.prototype,"toString",function(){return this._k}),it=function(ut){return ut instanceof E},s.create=bt,s.isEnum=St,s.getDesc=xt,s.setDesc=lt,s.setDescs=Y,s.getNames=T.get=oe,s.getSymbols=De,d&&!p(41)&&i(Z,"propertyIsEnumerable",St,!0));var Me={for:function(ut){return c(M,ut+="")?M[ut]:M[ut]=E(ut)},keyFor:function(ut){return h(M,ut)},useSetter:function(){F=!0},useSimple:function(){F=!1}};s.each.call("hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),function(ut){var Pt=f(ut);Me[ut]=H?Pt:tt(Pt)}),F=!0,a(a.G+a.W,{Symbol:E}),a(a.S,"Symbol",Me),a(a.S+a.F*!H,"Object",{create:bt,defineProperty:lt,defineProperties:Y,getOwnPropertyDescriptor:xt,getOwnPropertyNames:oe,getOwnPropertySymbols:De}),x&&a(a.S+a.F*(!H||we),"JSON",{stringify:_e}),o(E,"Symbol"),o(Math,"Math",!0),o(n.JSON,"JSON",!0)},function(g,r){var p=g.exports=typeof window!="undefined"&&window.Math==Math?window:typeof self!="undefined"&&self.Math==Math?self:Function("return this")();typeof __g=="number"&&(__g=p)},function(g,r){var p={}.hasOwnProperty;g.exports=function(s,n){return p.call(s,n)}},function(g,r,p){g.exports=!p(19)(function(){return Object.defineProperty({},"a",{get:function(){return 7}}).a!=7})},function(g,r){g.exports=function(p){try{return!!p()}catch(s){return!0}}},function(g,r,p){var s=p(16),n=p(21),c=p(22),d="prototype",a=function(i,u,m){var o,v,f,h=i&a.F,T=i&a.G,y=i&a.S,b=i&a.P,_=i&a.B,D=i&a.W,O=T?n:n[u]||(n[u]={}),S=T?s:y?s[u]:(s[u]||{})[d];T&&(m=u);for(o in m)v=!h&&S&&o in S,v&&o in O||(f=v?S[o]:m[o],O[o]=T&&typeof S[o]!="function"?m[o]:_&&v?c(f,s):D&&S[o]==f?function(A){var k=function(I){return this instanceof A?new A(I):A(I)};return k[d]=A[d],k}(f):b&&typeof f=="function"?c(Function.call,f):f,b&&((O[d]||(O[d]={}))[o]=f))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,g.exports=a},function(g,r){var p=g.exports={version:"1.2.6"};typeof __e=="number"&&(__e=p)},function(g,r,p){var s=p(23);g.exports=function(n,c,d){if(s(n),c===void 0)return n;switch(d){case 1:return function(a){return n.call(c,a)};case 2:return function(a,i){return n.call(c,a,i)};case 3:return function(a,i,u){return n.call(c,a,i,u)}}return function(){return n.apply(c,arguments)}}},function(g,r){g.exports=function(p){if(typeof p!="function")throw TypeError(p+" is not a function!");return p}},function(g,r,p){g.exports=p(25)},function(g,r,p){var s=p(9),n=p(26);g.exports=p(18)?function(c,d,a){return s.setDesc(c,d,n(1,a))}:function(c,d,a){return c[d]=a,c}},function(g,r){g.exports=function(p,s){return{enumerable:!(1&p),configurable:!(2&p),writable:!(4&p),value:s}}},function(g,r,p){var s=p(16),n="__core-js_shared__",c=s[n]||(s[n]={});g.exports=function(d){return c[d]||(c[d]={})}},function(g,r,p){var s=p(9).setDesc,n=p(17),c=p(29)("toStringTag");g.exports=function(d,a,i){d&&!n(d=i?d:d.prototype,c)&&s(d,c,{configurable:!0,value:a})}},function(g,r,p){var s=p(27)("wks"),n=p(30),c=p(16).Symbol;g.exports=function(d){return s[d]||(s[d]=c&&c[d]||(c||n)("Symbol."+d))}},function(g,r){var p=0,s=Math.random();g.exports=function(n){return"Symbol(".concat(n===void 0?"":n,")_",(++p+s).toString(36))}},function(g,r,p){var s=p(9),n=p(32);g.exports=function(c,d){for(var a,i=n(c),u=s.getKeys(i),m=u.length,o=0;m>o;)if(i[a=u[o++]]===d)return a}},function(g,r,p){var s=p(33),n=p(35);g.exports=function(c){return s(n(c))}},function(g,r,p){var s=p(34);g.exports=Object("z").propertyIsEnumerable(0)?Object:function(n){return s(n)=="String"?n.split(""):Object(n)}},function(g,r){var p={}.toString;g.exports=function(s){return p.call(s).slice(8,-1)}},function(g,r){g.exports=function(p){if(p==null)throw TypeError("Can't call method on  "+p);return p}},function(g,r,p){var s=p(32),n=p(9).getNames,c={}.toString,d=typeof window=="object"&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],a=function(i){try{return n(i)}catch(u){return d.slice()}};g.exports.get=function(i){return d&&c.call(i)=="[object Window]"?a(i):n(s(i))}},function(g,r,p){var s=p(9);g.exports=function(n){var c=s.getKeys(n),d=s.getSymbols;if(d)for(var a,i=d(n),u=s.isEnum,m=0;i.length>m;)u.call(n,a=i[m++])&&c.push(a);return c}},function(g,r,p){var s=p(34);g.exports=Array.isArray||function(n){return s(n)=="Array"}},function(g,r,p){var s=p(40);g.exports=function(n){if(!s(n))throw TypeError(n+" is not an object!");return n}},function(g,r){g.exports=function(p){return typeof p=="object"?p!==null:typeof p=="function"}},function(g,r){g.exports=!0},function(g,r){},function(g,r,p){g.exports={default:p(44),__esModule:!0}},function(g,r,p){p(45),p(51),g.exports=p(29)("iterator")},function(g,r,p){"use strict";var s=p(46)(!0);p(48)(String,"String",function(n){this._t=String(n),this._i=0},function(){var n,c=this._t,d=this._i;return d>=c.length?{value:void 0,done:!0}:(n=s(c,d),this._i+=n.length,{value:n,done:!1})})},function(g,r,p){var s=p(47),n=p(35);g.exports=function(c){return function(d,a){var i,u,m=String(n(d)),o=s(a),v=m.length;return o<0||o>=v?c?"":void 0:(i=m.charCodeAt(o),i<55296||i>56319||o+1===v||(u=m.charCodeAt(o+1))<56320||u>57343?c?m.charAt(o):i:c?m.slice(o,o+2):(i-55296<<10)+(u-56320)+65536)}}},function(g,r){var p=Math.ceil,s=Math.floor;g.exports=function(n){return isNaN(n=+n)?0:(n>0?s:p)(n)}},function(g,r,p){"use strict";var s=p(41),n=p(20),c=p(24),d=p(25),a=p(17),i=p(49),u=p(50),m=p(28),o=p(9).getProto,v=p(29)("iterator"),f=!([].keys&&"next"in[].keys()),h="@@iterator",T="keys",y="values",b=function(){return this};g.exports=function(_,D,O,S,A,k,I){u(O,D,S);var E,x,P=function(G){if(!f&&G in M)return M[G];switch(G){case T:return function(){return new O(this,G)};case y:return function(){return new O(this,G)}}return function(){return new O(this,G)}},F=D+" Iterator",q=A==y,W=!1,M=_.prototype,$=M[v]||M[h]||A&&M[A],H=$||P(A);if($){var Z=o(H.call(new _));m(Z,F,!0),!s&&a(M,h)&&d(Z,v,b),q&&$.name!==y&&(W=!0,H=function(){return $.call(this)})}if(s&&!I||!f&&!W&&M[v]||d(M,v,H),i[D]=H,i[F]=b,A)if(E={values:q?H:P(y),keys:k?H:P(T),entries:q?P("entries"):H},I)for(x in E)x in M||c(M,x,E[x]);else n(n.P+n.F*(f||W),D,E);return E}},function(g,r){g.exports={}},function(g,r,p){"use strict";var s=p(9),n=p(26),c=p(28),d={};p(25)(d,p(29)("iterator"),function(){return this}),g.exports=function(a,i,u){a.prototype=s.create(d,{next:n(1,u)}),c(a,i+" Iterator")}},function(g,r,p){p(52);var s=p(49);s.NodeList=s.HTMLCollection=s.Array},function(g,r,p){"use strict";var s=p(53),n=p(54),c=p(49),d=p(32);g.exports=p(48)(Array,"Array",function(a,i){this._t=d(a),this._i=0,this._k=i},function(){var a=this._t,i=this._k,u=this._i++;return!a||u>=a.length?(this._t=void 0,n(1)):i=="keys"?n(0,u):i=="values"?n(0,a[u]):n(0,[u,a[u]])},"values"),c.Arguments=c.Array,s("keys"),s("values"),s("entries")},function(g,r){g.exports=function(){}},function(g,r){g.exports=function(p,s){return{value:s,done:!!p}}},function(g,r,p){g.exports={default:p(56),__esModule:!0}},function(g,r,p){p(51),p(45),g.exports=p(57)},function(g,r,p){var s=p(39),n=p(58);g.exports=p(21).getIterator=function(c){var d=n(c);if(typeof d!="function")throw TypeError(c+" is not iterable!");return s(d.call(c))}},function(g,r,p){var s=p(59),n=p(29)("iterator"),c=p(49);g.exports=p(21).getIteratorMethod=function(d){if(d!=null)return d[n]||d["@@iterator"]||c[s(d)]}},function(g,r,p){var s=p(34),n=p(29)("toStringTag"),c=s(function(){return arguments}())=="Arguments";g.exports=function(d){var a,i,u;return d===void 0?"Undefined":d===null?"Null":typeof(i=(a=Object(d))[n])=="string"?i:c?s(a):(u=s(a))=="Object"&&typeof a.callee=="function"?"Arguments":u}},function(g,r,p){g.exports={default:p(61),__esModule:!0}},function(g,r,p){p(62),g.exports=p(21).Object.keys},function(g,r,p){var s=p(63);p(64)("keys",function(n){return function(c){return n(s(c))}})},function(g,r,p){var s=p(35);g.exports=function(n){return Object(s(n))}},function(g,r,p){var s=p(20),n=p(21),c=p(19);g.exports=function(d,a){var i=(n.Object||{})[d]||Object[d],u={};u[d]=a(i),s(s.S+s.F*c(function(){i(1)}),"Object",u)}},function(g,r,p){"use strict";var s=p(1).default;r.__esModule=!0;var n=p(6),c=s(n);r.default=function(d){d.registerHelper("helperMissing",function(){if(arguments.length!==1)throw new c.default('Missing helper: "'+arguments[arguments.length-1].name+'"')})},g.exports=r.default},function(g,r,p){"use strict";var s=p(1).default;r.__esModule=!0;var n=p(5),c=p(6),d=s(c);r.default=function(a){a.registerHelper("if",function(i,u){if(arguments.length!=2)throw new d.default("#if requires exactly one argument");return n.isFunction(i)&&(i=i.call(this)),!u.hash.includeZero&&!i||n.isEmpty(i)?u.inverse(this):u.fn(this)}),a.registerHelper("unless",function(i,u){if(arguments.length!=2)throw new d.default("#unless requires exactly one argument");return a.helpers.if.call(this,i,{fn:u.inverse,inverse:u.fn,hash:u.hash})})},g.exports=r.default},function(g,r){"use strict";r.__esModule=!0,r.default=function(p){p.registerHelper("log",function(){for(var s=[void 0],n=arguments[arguments.length-1],c=0;c<arguments.length-1;c++)s.push(arguments[c]);var d=1;n.hash.level!=null?d=n.hash.level:n.data&&n.data.level!=null&&(d=n.data.level),s[0]=d,p.log.apply(p,s)})},g.exports=r.default},function(g,r){"use strict";r.__esModule=!0,r.default=function(p){p.registerHelper("lookup",function(s,n,c){return s&&c.lookupProperty(s,n)})},g.exports=r.default},function(g,r,p){"use strict";var s=p(1).default;r.__esModule=!0;var n=p(5),c=p(6),d=s(c);r.default=function(a){a.registerHelper("with",function(i,u){if(arguments.length!=2)throw new d.default("#with requires exactly one argument");n.isFunction(i)&&(i=i.call(this));var m=u.fn;if(n.isEmpty(i))return u.inverse(this);var o=u.data;return u.data&&u.ids&&(o=n.createFrame(u.data),o.contextPath=n.appendContextPath(u.data.contextPath,u.ids[0])),m(i,{data:o,blockParams:n.blockParams([i],[o&&o.contextPath])})})},g.exports=r.default},function(g,r,p){"use strict";function s(a){d.default(a)}var n=p(1).default;r.__esModule=!0,r.registerDefaultDecorators=s;var c=p(71),d=n(c)},function(g,r,p){"use strict";r.__esModule=!0;var s=p(5);r.default=function(n){n.registerDecorator("inline",function(c,d,a,i){var u=c;return d.partials||(d.partials={},u=function(m,o){var v=a.partials;a.partials=s.extend({},v,d.partials);var f=c(m,o);return a.partials=v,f}),d.partials[i.args[0]]=i.fn,u})},g.exports=r.default},function(g,r,p){"use strict";r.__esModule=!0;var s=p(5),n={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(c){if(typeof c=="string"){var d=s.indexOf(n.methodMap,c.toLowerCase());c=d>=0?d:parseInt(c,10)}return c},log:function(c){if(c=n.lookupLevel(c),typeof console!="undefined"&&n.lookupLevel(n.level)<=c){var d=n.methodMap[c];console[d]||(d="log");for(var a=arguments.length,i=Array(a>1?a-1:0),u=1;u<a;u++)i[u-1]=arguments[u];console[d].apply(console,i)}}};r.default=n,g.exports=r.default},function(g,r,p){"use strict";function s(T){var y=i(null);y.constructor=!1,y.__defineGetter__=!1,y.__defineSetter__=!1,y.__lookupGetter__=!1;var b=i(null);return b.__proto__=!1,{properties:{whitelist:o.createNewLookupObject(b,T.allowedProtoProperties),defaultValue:T.allowProtoPropertiesByDefault},methods:{whitelist:o.createNewLookupObject(y,T.allowedProtoMethods),defaultValue:T.allowProtoMethodsByDefault}}}function n(T,y,b){return c(typeof T=="function"?y.methods:y.properties,b)}function c(T,y){return T.whitelist[y]!==void 0?T.whitelist[y]===!0:T.defaultValue!==void 0?T.defaultValue:(d(y),!1)}function d(T){h[T]!==!0&&(h[T]=!0,f.default.log("error",'Handlebars: Access has been denied to resolve the property "'+T+`" because it is not an "own property" of its parent.
You can add a runtime option to disable the check or this warning:
See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`))}function a(){u(h).forEach(function(T){delete h[T]})}var i=p(74).default,u=p(60).default,m=p(1).default;r.__esModule=!0,r.createProtoAccessControl=s,r.resultIsAllowed=n,r.resetLoggedProperties=a;var o=p(76),v=p(72),f=m(v),h=i(null)},function(g,r,p){g.exports={default:p(75),__esModule:!0}},function(g,r,p){var s=p(9);g.exports=function(n,c){return s.create(n,c)}},function(g,r,p){"use strict";function s(){for(var d=arguments.length,a=Array(d),i=0;i<d;i++)a[i]=arguments[i];return c.extend.apply(void 0,[n(null)].concat(a))}var n=p(74).default;r.__esModule=!0,r.createNewLookupObject=s;var c=p(5)},function(g,r){"use strict";function p(s){this.string=s}r.__esModule=!0,p.prototype.toString=p.prototype.toHTML=function(){return""+this.string},r.default=p,g.exports=r.default},function(g,r,p){"use strict";function s(E){var x=E&&E[0]||1,P=S.COMPILER_REVISION;if(!(x>=S.LAST_COMPATIBLE_COMPILER_REVISION&&x<=S.COMPILER_REVISION)){if(x<S.LAST_COMPATIBLE_COMPILER_REVISION){var F=S.REVISION_CHANGES[P],q=S.REVISION_CHANGES[x];throw new O.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+F+") or downgrade your runtime to an older version ("+q+").")}throw new O.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+E[1]+").")}}function n(E,x){function P(M,$,H){H.hash&&($=_.extend({},$,H.hash),H.ids&&(H.ids[0]=!0)),M=x.VM.resolvePartial.call(this,M,$,H);var Z=_.extend({},H,{hooks:this.hooks,protoAccessControl:this.protoAccessControl}),G=x.VM.invokePartial.call(this,M,$,Z);if(G==null&&x.compile&&(H.partials[H.name]=x.compile(M,E.compilerOptions,x),G=H.partials[H.name]($,Z)),G!=null){if(H.indent){for(var tt=G.split(`
`),it=0,lt=tt.length;it<lt&&(tt[it]||it+1!==lt);it++)tt[it]=H.indent+tt[it];G=tt.join(`
`)}return G}throw new O.default("The partial "+H.name+" could not be compiled when running in runtime-only mode")}function F(M){function $(it){return""+E.main(W,it,W.helpers,W.partials,Z,tt,G)}var H=arguments.length<=1||arguments[1]===void 0?{}:arguments[1],Z=H.data;F._setup(H),!H.partial&&E.useData&&(Z=u(M,Z));var G=void 0,tt=E.useBlockParams?[]:void 0;return E.useDepths&&(G=H.depths?M!=H.depths[0]?[M].concat(H.depths):H.depths:[M]),($=m(E.main,$,W,H.depths||[],Z,tt))(M,H)}if(!x)throw new O.default("No environment passed to template");if(!E||!E.main)throw new O.default("Unknown template object: "+typeof E);E.main.decorator=E.main_d,x.VM.checkRevision(E.compiler);var q=E.compiler&&E.compiler[0]===7,W={strict:function(M,$,H){if(!(M&&$ in M))throw new O.default('"'+$+'" not defined in '+M,{loc:H});return W.lookupProperty(M,$)},lookupProperty:function(M,$){var H=M[$];return H==null||Object.prototype.hasOwnProperty.call(M,$)||I.resultIsAllowed(H,W.protoAccessControl,$)?H:void 0},lookup:function(M,$){for(var H=M.length,Z=0;Z<H;Z++){var G=M[Z]&&W.lookupProperty(M[Z],$);if(G!=null)return M[Z][$]}},lambda:function(M,$){return typeof M=="function"?M.call($):M},escapeExpression:_.escapeExpression,invokePartial:P,fn:function(M){var $=E[M];return $.decorator=E[M+"_d"],$},programs:[],program:function(M,$,H,Z,G){var tt=this.programs[M],it=this.fn(M);return $||G||Z||H?tt=c(this,M,it,$,H,Z,G):tt||(tt=this.programs[M]=c(this,M,it)),tt},data:function(M,$){for(;M&&$--;)M=M._parent;return M},mergeIfNeeded:function(M,$){var H=M||$;return M&&$&&M!==$&&(H=_.extend({},$,M)),H},nullContext:f({}),noop:x.VM.noop,compilerInfo:E.compiler};return F.isTop=!0,F._setup=function(M){if(M.partial)W.protoAccessControl=M.protoAccessControl,W.helpers=M.helpers,W.partials=M.partials,W.decorators=M.decorators,W.hooks=M.hooks;else{var $=_.extend({},x.helpers,M.helpers);o($,W),W.helpers=$,E.usePartial&&(W.partials=W.mergeIfNeeded(M.partials,x.partials)),(E.usePartial||E.useDecorators)&&(W.decorators=_.extend({},x.decorators,M.decorators)),W.hooks={},W.protoAccessControl=I.createProtoAccessControl(M);var H=M.allowCallsToHelperMissing||q;A.moveHelperToHooks(W,"helperMissing",H),A.moveHelperToHooks(W,"blockHelperMissing",H)}},F._child=function(M,$,H,Z){if(E.useBlockParams&&!H)throw new O.default("must pass block params");if(E.useDepths&&!Z)throw new O.default("must pass parent depths");return c(W,M,E[M],$,0,H,Z)},F}function c(E,x,P,F,q,W,M){function $(H){var Z=arguments.length<=1||arguments[1]===void 0?{}:arguments[1],G=M;return!M||H==M[0]||H===E.nullContext&&M[0]===null||(G=[H].concat(M)),P(E,H,E.helpers,E.partials,Z.data||F,W&&[Z.blockParams].concat(W),G)}return $=m(P,$,E,M,F,W),$.program=x,$.depth=M?M.length:0,$.blockParams=q||0,$}function d(E,x,P){return E?E.call||P.name||(P.name=E,E=P.partials[E]):E=P.name==="@partial-block"?P.data["partial-block"]:P.partials[P.name],E}function a(E,x,P){var F=P.data&&P.data["partial-block"];P.partial=!0,P.ids&&(P.data.contextPath=P.ids[0]||P.data.contextPath);var q=void 0;if(P.fn&&P.fn!==i&&function(){P.data=S.createFrame(P.data);var W=P.fn;q=P.data["partial-block"]=function(M){var $=arguments.length<=1||arguments[1]===void 0?{}:arguments[1];return $.data=S.createFrame($.data),$.data["partial-block"]=F,W(M,$)},W.partials&&(P.partials=_.extend({},P.partials,W.partials))}(),E===void 0&&q&&(E=q),E===void 0)throw new O.default("The partial "+P.name+" could not be found");if(E instanceof Function)return E(x,P)}function i(){return""}function u(E,x){return x&&"root"in x||(x=x?S.createFrame(x):{},x.root=E),x}function m(E,x,P,F,q,W){if(E.decorator){var M={};x=E.decorator(x,M,P,F&&F[0],q,W,F),_.extend(x,M)}return x}function o(E,x){h(E).forEach(function(P){var F=E[P];E[P]=v(F,x)})}function v(E,x){var P=x.lookupProperty;return k.wrapHelper(E,function(F){return _.extend({lookupProperty:P},F)})}var f=p(79).default,h=p(60).default,T=p(3).default,y=p(1).default;r.__esModule=!0,r.checkRevision=s,r.template=n,r.wrapProgram=c,r.resolvePartial=d,r.invokePartial=a,r.noop=i;var b=p(5),_=T(b),D=p(6),O=y(D),S=p(4),A=p(10),k=p(82),I=p(73)},function(g,r,p){g.exports={default:p(80),__esModule:!0}},function(g,r,p){p(81),g.exports=p(21).Object.seal},function(g,r,p){var s=p(40);p(64)("seal",function(n){return function(c){return n&&s(c)?n(c):c}})},function(g,r){"use strict";function p(s,n){if(typeof s!="function")return s;var c=function(){var d=arguments[arguments.length-1];return arguments[arguments.length-1]=n(d),s.apply(this,arguments)};return c}r.__esModule=!0,r.wrapHelper=p},function(g,r){"use strict";r.__esModule=!0,r.default=function(p){(function(){typeof globalThis!="object"&&(Object.prototype.__defineGetter__("__magic__",function(){return this}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__)})();var s=globalThis.Handlebars;p.noConflict=function(){return globalThis.Handlebars===p&&(globalThis.Handlebars=s),p}},g.exports=r.default},function(g,r){"use strict";r.__esModule=!0;var p={helpers:{helperExpression:function(s){return s.type==="SubExpression"||(s.type==="MustacheStatement"||s.type==="BlockStatement")&&!!(s.params&&s.params.length||s.hash)},scopedId:function(s){return/^\.|this\b/.test(s.original)},simpleId:function(s){return s.parts.length===1&&!p.helpers.scopedId(s)&&!s.depth}}};r.default=p,g.exports=r.default},function(g,r,p){"use strict";function s(T,y){if(T.type==="Program")return T;i.default.yy=h,h.locInfo=function(_){return new h.SourceLocation(y&&y.srcName,_)};var b=i.default.parse(T);return b}function n(T,y){var b=s(T,y),_=new m.default(y);return _.accept(b)}var c=p(1).default,d=p(3).default;r.__esModule=!0,r.parseWithoutProcessing=s,r.parse=n;var a=p(86),i=c(a),u=p(87),m=c(u),o=p(89),v=d(o),f=p(5);r.parser=i.default;var h={};f.extend(h,v)},function(g,r){"use strict";r.__esModule=!0;var p=function(){function s(){this.yy={}}var n={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,partialBlock:12,content:13,COMMENT:14,CONTENT:15,openRawBlock:16,rawBlock_repetition0:17,END_RAW_BLOCK:18,OPEN_RAW_BLOCK:19,helperName:20,openRawBlock_repetition0:21,openRawBlock_option0:22,CLOSE_RAW_BLOCK:23,openBlock:24,block_option0:25,closeBlock:26,openInverse:27,block_option1:28,OPEN_BLOCK:29,openBlock_repetition0:30,openBlock_option0:31,openBlock_option1:32,CLOSE:33,OPEN_INVERSE:34,openInverse_repetition0:35,openInverse_option0:36,openInverse_option1:37,openInverseChain:38,OPEN_INVERSE_CHAIN:39,openInverseChain_repetition0:40,openInverseChain_option0:41,openInverseChain_option1:42,inverseAndProgram:43,INVERSE:44,inverseChain:45,inverseChain_option0:46,OPEN_ENDBLOCK:47,OPEN:48,mustache_repetition0:49,mustache_option0:50,OPEN_UNESCAPED:51,mustache_repetition1:52,mustache_option1:53,CLOSE_UNESCAPED:54,OPEN_PARTIAL:55,partialName:56,partial_repetition0:57,partial_option0:58,openPartialBlock:59,OPEN_PARTIAL_BLOCK:60,openPartialBlock_repetition0:61,openPartialBlock_option0:62,param:63,sexpr:64,OPEN_SEXPR:65,sexpr_repetition0:66,sexpr_option0:67,CLOSE_SEXPR:68,hash:69,hash_repetition_plus0:70,hashSegment:71,ID:72,EQUALS:73,blockParams:74,OPEN_BLOCK_PARAMS:75,blockParams_repetition_plus0:76,CLOSE_BLOCK_PARAMS:77,path:78,dataName:79,STRING:80,NUMBER:81,BOOLEAN:82,UNDEFINED:83,NULL:84,DATA:85,pathSegments:86,SEP:87,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",14:"COMMENT",15:"CONTENT",18:"END_RAW_BLOCK",19:"OPEN_RAW_BLOCK",23:"CLOSE_RAW_BLOCK",29:"OPEN_BLOCK",33:"CLOSE",34:"OPEN_INVERSE",39:"OPEN_INVERSE_CHAIN",44:"INVERSE",47:"OPEN_ENDBLOCK",48:"OPEN",51:"OPEN_UNESCAPED",54:"CLOSE_UNESCAPED",55:"OPEN_PARTIAL",60:"OPEN_PARTIAL_BLOCK",65:"OPEN_SEXPR",68:"CLOSE_SEXPR",72:"ID",73:"EQUALS",75:"OPEN_BLOCK_PARAMS",77:"CLOSE_BLOCK_PARAMS",80:"STRING",81:"NUMBER",82:"BOOLEAN",83:"UNDEFINED",84:"NULL",85:"DATA",87:"SEP"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],performAction:function(d,a,i,u,m,o,v){var f=o.length-1;switch(m){case 1:return o[f-1];case 2:this.$=u.prepareProgram(o[f]);break;case 3:this.$=o[f];break;case 4:this.$=o[f];break;case 5:this.$=o[f];break;case 6:this.$=o[f];break;case 7:this.$=o[f];break;case 8:this.$=o[f];break;case 9:this.$={type:"CommentStatement",value:u.stripComment(o[f]),strip:u.stripFlags(o[f],o[f]),loc:u.locInfo(this._$)};break;case 10:this.$={type:"ContentStatement",original:o[f],value:o[f],loc:u.locInfo(this._$)};break;case 11:this.$=u.prepareRawBlock(o[f-2],o[f-1],o[f],this._$);break;case 12:this.$={path:o[f-3],params:o[f-2],hash:o[f-1]};break;case 13:this.$=u.prepareBlock(o[f-3],o[f-2],o[f-1],o[f],!1,this._$);break;case 14:this.$=u.prepareBlock(o[f-3],o[f-2],o[f-1],o[f],!0,this._$);break;case 15:this.$={open:o[f-5],path:o[f-4],params:o[f-3],hash:o[f-2],blockParams:o[f-1],strip:u.stripFlags(o[f-5],o[f])};break;case 16:this.$={path:o[f-4],params:o[f-3],hash:o[f-2],blockParams:o[f-1],strip:u.stripFlags(o[f-5],o[f])};break;case 17:this.$={path:o[f-4],params:o[f-3],hash:o[f-2],blockParams:o[f-1],strip:u.stripFlags(o[f-5],o[f])};break;case 18:this.$={strip:u.stripFlags(o[f-1],o[f-1]),program:o[f]};break;case 19:var h=u.prepareBlock(o[f-2],o[f-1],o[f],o[f],!1,this._$),T=u.prepareProgram([h],o[f-1].loc);T.chained=!0,this.$={strip:o[f-2].strip,program:T,chain:!0};break;case 20:this.$=o[f];break;case 21:this.$={path:o[f-1],strip:u.stripFlags(o[f-2],o[f])};break;case 22:this.$=u.prepareMustache(o[f-3],o[f-2],o[f-1],o[f-4],u.stripFlags(o[f-4],o[f]),this._$);break;case 23:this.$=u.prepareMustache(o[f-3],o[f-2],o[f-1],o[f-4],u.stripFlags(o[f-4],o[f]),this._$);break;case 24:this.$={type:"PartialStatement",name:o[f-3],params:o[f-2],hash:o[f-1],indent:"",strip:u.stripFlags(o[f-4],o[f]),loc:u.locInfo(this._$)};break;case 25:this.$=u.preparePartialBlock(o[f-2],o[f-1],o[f],this._$);break;case 26:this.$={path:o[f-3],params:o[f-2],hash:o[f-1],strip:u.stripFlags(o[f-4],o[f])};break;case 27:this.$=o[f];break;case 28:this.$=o[f];break;case 29:this.$={type:"SubExpression",path:o[f-3],params:o[f-2],hash:o[f-1],loc:u.locInfo(this._$)};break;case 30:this.$={type:"Hash",pairs:o[f],loc:u.locInfo(this._$)};break;case 31:this.$={type:"HashPair",key:u.id(o[f-2]),value:o[f],loc:u.locInfo(this._$)};break;case 32:this.$=u.id(o[f-1]);break;case 33:this.$=o[f];break;case 34:this.$=o[f];break;case 35:this.$={type:"StringLiteral",value:o[f],original:o[f],loc:u.locInfo(this._$)};break;case 36:this.$={type:"NumberLiteral",value:Number(o[f]),original:Number(o[f]),loc:u.locInfo(this._$)};break;case 37:this.$={type:"BooleanLiteral",value:o[f]==="true",original:o[f]==="true",loc:u.locInfo(this._$)};break;case 38:this.$={type:"UndefinedLiteral",original:void 0,value:void 0,loc:u.locInfo(this._$)};break;case 39:this.$={type:"NullLiteral",original:null,value:null,loc:u.locInfo(this._$)};break;case 40:this.$=o[f];break;case 41:this.$=o[f];break;case 42:this.$=u.preparePath(!0,o[f],this._$);break;case 43:this.$=u.preparePath(!1,o[f],this._$);break;case 44:o[f-2].push({part:u.id(o[f]),original:o[f],separator:o[f-1]}),this.$=o[f-2];break;case 45:this.$=[{part:u.id(o[f]),original:o[f]}];break;case 46:this.$=[];break;case 47:o[f-1].push(o[f]);break;case 48:this.$=[];break;case 49:o[f-1].push(o[f]);break;case 50:this.$=[];break;case 51:o[f-1].push(o[f]);break;case 58:this.$=[];break;case 59:o[f-1].push(o[f]);break;case 64:this.$=[];break;case 65:o[f-1].push(o[f]);break;case 70:this.$=[];break;case 71:o[f-1].push(o[f]);break;case 78:this.$=[];break;case 79:o[f-1].push(o[f]);break;case 82:this.$=[];break;case 83:o[f-1].push(o[f]);break;case 86:this.$=[];break;case 87:o[f-1].push(o[f]);break;case 90:this.$=[];break;case 91:o[f-1].push(o[f]);break;case 94:this.$=[];break;case 95:o[f-1].push(o[f]);break;case 98:this.$=[o[f]];break;case 99:o[f-1].push(o[f]);break;case 100:this.$=[o[f]];break;case 101:o[f-1].push(o[f])}},table:[{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],defaultActions:{4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},parseError:function(d,a){throw new Error(d)},parse:function(d){function a(){var W;return W=i.lexer.lex()||1,typeof W!="number"&&(W=i.symbols_[W]||W),W}var i=this,u=[0],m=[null],o=[],v=this.table,f="",h=0,T=0,y=0;this.lexer.setInput(d),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,typeof this.lexer.yylloc=="undefined"&&(this.lexer.yylloc={});var b=this.lexer.yylloc;o.push(b);var _=this.lexer.options&&this.lexer.options.ranges;typeof this.yy.parseError=="function"&&(this.parseError=this.yy.parseError);for(var D,O,S,A,k,I,E,x,P,F={};;){if(S=u[u.length-1],this.defaultActions[S]?A=this.defaultActions[S]:(D!==null&&typeof D!="undefined"||(D=a()),A=v[S]&&v[S][D]),typeof A=="undefined"||!A.length||!A[0]){var q="";if(!y){P=[];for(I in v[S])this.terminals_[I]&&I>2&&P.push("'"+this.terminals_[I]+"'");q=this.lexer.showPosition?"Parse error on line "+(h+1)+`:
`+this.lexer.showPosition()+`
Expecting `+P.join(", ")+", got '"+(this.terminals_[D]||D)+"'":"Parse error on line "+(h+1)+": Unexpected "+(D==1?"end of input":"'"+(this.terminals_[D]||D)+"'"),this.parseError(q,{text:this.lexer.match,token:this.terminals_[D]||D,line:this.lexer.yylineno,loc:b,expected:P})}}if(A[0]instanceof Array&&A.length>1)throw new Error("Parse Error: multiple actions possible at state: "+S+", token: "+D);switch(A[0]){case 1:u.push(D),m.push(this.lexer.yytext),o.push(this.lexer.yylloc),u.push(A[1]),D=null,O?(D=O,O=null):(T=this.lexer.yyleng,f=this.lexer.yytext,h=this.lexer.yylineno,b=this.lexer.yylloc,y>0&&y--);break;case 2:if(E=this.productions_[A[1]][1],F.$=m[m.length-E],F._$={first_line:o[o.length-(E||1)].first_line,last_line:o[o.length-1].last_line,first_column:o[o.length-(E||1)].first_column,last_column:o[o.length-1].last_column},_&&(F._$.range=[o[o.length-(E||1)].range[0],o[o.length-1].range[1]]),k=this.performAction.call(F,f,T,h,this.yy,A[1],m,o),typeof k!="undefined")return k;E&&(u=u.slice(0,-1*E*2),m=m.slice(0,-1*E),o=o.slice(0,-1*E)),u.push(this.productions_[A[1]][0]),m.push(F.$),o.push(F._$),x=v[u[u.length-2]][u[u.length-1]],u.push(x);break;case 3:return!0}}return!0}},c=function(){var d={EOF:1,parseError:function(a,i){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,i)},setInput:function(a){return this._input=a,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var i=a.match(/(?:\r\n?|\n).*/g);return i?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var i=a.length,u=a.split(/(?:\r\n?|\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-i-1),this.offset-=i;var m=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),u.length-1&&(this.yylineno-=u.length-1);var o=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:u?(u.length===m.length?this.yylloc.first_column:0)+m[m.length-u.length].length-u[0].length:this.yylloc.first_column-i},this.options.ranges&&(this.yylloc.range=[o[0],o[0]+this.yyleng-i]),this},more:function(){return this._more=!0,this},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?"...":"")+a.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var a=this.pastInput(),i=new Array(a.length+1).join("-");return a+this.upcomingInput()+`
`+i+"^"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,i,u,m,o;this._more||(this.yytext="",this.match="");for(var v=this._currentRules(),f=0;f<v.length&&(u=this._input.match(this.rules[v[f]]),!u||i&&!(u[0].length>i[0].length)||(i=u,m=f,this.options.flex));f++);return i?(o=i[0].match(/(?:\r\n?|\n).*/g),o&&(this.yylineno+=o.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:o?o[o.length-1].length-o[o.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+i[0].length},this.yytext+=i[0],this.match+=i[0],this.matches=i,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(i[0].length),this.matched+=i[0],a=this.performAction.call(this,this.yy,this,v[m],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a||void 0):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var a=this.next();return typeof a!="undefined"?a:this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(a){this.begin(a)}};return d.options={},d.performAction=function(a,i,u,m){function o(v,f){return i.yytext=i.yytext.substring(v,i.yyleng-f+v)}switch(u){case 0:if(i.yytext.slice(-2)==="\\\\"?(o(0,1),this.begin("mu")):i.yytext.slice(-1)==="\\"?(o(0,1),this.begin("emu")):this.begin("mu"),i.yytext)return 15;break;case 1:return 15;case 2:return this.popState(),15;case 3:return this.begin("raw"),15;case 4:return this.popState(),this.conditionStack[this.conditionStack.length-1]==="raw"?15:(o(5,9),"END_RAW_BLOCK");case 5:return 15;case 6:return this.popState(),14;case 7:return 65;case 8:return 68;case 9:return 19;case 10:return this.popState(),this.begin("raw"),23;case 11:return 55;case 12:return 60;case 13:return 29;case 14:return 47;case 15:return this.popState(),44;case 16:return this.popState(),44;case 17:return 34;case 18:return 39;case 19:return 51;case 20:return 48;case 21:this.unput(i.yytext),this.popState(),this.begin("com");break;case 22:return this.popState(),14;case 23:return 48;case 24:return 73;case 25:return 72;case 26:return 72;case 27:return 87;case 28:break;case 29:return this.popState(),54;case 30:return this.popState(),33;case 31:return i.yytext=o(1,2).replace(/\\"/g,'"'),80;case 32:return i.yytext=o(1,2).replace(/\\'/g,"'"),80;case 33:return 85;case 34:return 82;case 35:return 82;case 36:return 83;case 37:return 84;case 38:return 81;case 39:return 75;case 40:return 77;case 41:return 72;case 42:return i.yytext=i.yytext.replace(/\\([\\\]])/g,"$1"),72;case 43:return"INVALID";case 44:return 5}},d.rules=[/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,/^(?:\{\{\{\{(?=[^/]))/,/^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,/^(?:[^\x00]+?(?=(\{\{\{\{)))/,/^(?:[\s\S]*?--(~)?\}\})/,/^(?:\()/,/^(?:\))/,/^(?:\{\{\{\{)/,/^(?:\}\}\}\})/,/^(?:\{\{(~)?>)/,/^(?:\{\{(~)?#>)/,/^(?:\{\{(~)?#\*?)/,/^(?:\{\{(~)?\/)/,/^(?:\{\{(~)?\^\s*(~)?\}\})/,/^(?:\{\{(~)?\s*else\s*(~)?\}\})/,/^(?:\{\{(~)?\^)/,/^(?:\{\{(~)?\s*else\b)/,/^(?:\{\{(~)?\{)/,/^(?:\{\{(~)?&)/,/^(?:\{\{(~)?!--)/,/^(?:\{\{(~)?![\s\S]*?\}\})/,/^(?:\{\{(~)?\*?)/,/^(?:=)/,/^(?:\.\.)/,/^(?:\.(?=([=~}\s\/.)|])))/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}(~)?\}\})/,/^(?:(~)?\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\s)])))/,/^(?:false(?=([~}\s)])))/,/^(?:undefined(?=([~}\s)])))/,/^(?:null(?=([~}\s)])))/,/^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,/^(?:as\s+\|)/,/^(?:\|)/,/^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/,/^(?:\[(\\\]|[^\]])*\])/,/^(?:.)/,/^(?:$)/],d.conditions={mu:{rules:[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[6],inclusive:!1},raw:{rules:[3,4,5],inclusive:!1},INITIAL:{rules:[0,1,44],inclusive:!0}},d}();return n.lexer=c,s.prototype=n,n.Parser=s,new s}();r.default=p,g.exports=r.default},function(g,r,p){"use strict";function s(){var o=arguments.length<=0||arguments[0]===void 0?{}:arguments[0];this.options=o}function n(o,v,f){v===void 0&&(v=o.length);var h=o[v-1],T=o[v-2];return h?h.type==="ContentStatement"?(T||!f?/\r?\n\s*?$/:/(^|\r?\n)\s*?$/).test(h.original):void 0:f}function c(o,v,f){v===void 0&&(v=-1);var h=o[v+1],T=o[v+2];return h?h.type==="ContentStatement"?(T||!f?/^\s*?\r?\n/:/^\s*?(\r?\n|$)/).test(h.original):void 0:f}function d(o,v,f){var h=o[v==null?0:v+1];if(h&&h.type==="ContentStatement"&&(f||!h.rightStripped)){var T=h.value;h.value=h.value.replace(f?/^\s+/:/^[ \t]*\r?\n?/,""),h.rightStripped=h.value!==T}}function a(o,v,f){var h=o[v==null?o.length-1:v-1];if(h&&h.type==="ContentStatement"&&(f||!h.leftStripped)){var T=h.value;return h.value=h.value.replace(f?/\s+$/:/[ \t]+$/,""),h.leftStripped=h.value!==T,h.leftStripped}}var i=p(1).default;r.__esModule=!0;var u=p(88),m=i(u);s.prototype=new m.default,s.prototype.Program=function(o){var v=!this.options.ignoreStandalone,f=!this.isRootSeen;this.isRootSeen=!0;for(var h=o.body,T=0,y=h.length;T<y;T++){var b=h[T],_=this.accept(b);if(_){var D=n(h,T,f),O=c(h,T,f),S=_.openStandalone&&D,A=_.closeStandalone&&O,k=_.inlineStandalone&&D&&O;_.close&&d(h,T,!0),_.open&&a(h,T,!0),v&&k&&(d(h,T),a(h,T)&&b.type==="PartialStatement"&&(b.indent=/([ \t]+$)/.exec(h[T-1].original)[1])),v&&S&&(d((b.program||b.inverse).body),a(h,T)),v&&A&&(d(h,T),a((b.inverse||b.program).body))}}return o},s.prototype.BlockStatement=s.prototype.DecoratorBlock=s.prototype.PartialBlockStatement=function(o){this.accept(o.program),this.accept(o.inverse);var v=o.program||o.inverse,f=o.program&&o.inverse,h=f,T=f;if(f&&f.chained)for(h=f.body[0].program;T.chained;)T=T.body[T.body.length-1].program;var y={open:o.openStrip.open,close:o.closeStrip.close,openStandalone:c(v.body),closeStandalone:n((h||v).body)};if(o.openStrip.close&&d(v.body,null,!0),f){var b=o.inverseStrip;b.open&&a(v.body,null,!0),b.close&&d(h.body,null,!0),o.closeStrip.open&&a(T.body,null,!0),!this.options.ignoreStandalone&&n(v.body)&&c(h.body)&&(a(v.body),d(h.body))}else o.closeStrip.open&&a(v.body,null,!0);return y},s.prototype.Decorator=s.prototype.MustacheStatement=function(o){return o.strip},s.prototype.PartialStatement=s.prototype.CommentStatement=function(o){var v=o.strip||{};return{inlineStandalone:!0,open:v.open,close:v.close}},r.default=s,g.exports=r.default},function(g,r,p){"use strict";function s(){this.parents=[]}function n(m){this.acceptRequired(m,"path"),this.acceptArray(m.params),this.acceptKey(m,"hash")}function c(m){n.call(this,m),this.acceptKey(m,"program"),this.acceptKey(m,"inverse")}function d(m){this.acceptRequired(m,"name"),this.acceptArray(m.params),this.acceptKey(m,"hash")}var a=p(1).default;r.__esModule=!0;var i=p(6),u=a(i);s.prototype={constructor:s,mutating:!1,acceptKey:function(m,o){var v=this.accept(m[o]);if(this.mutating){if(v&&!s.prototype[v.type])throw new u.default('Unexpected node type "'+v.type+'" found when accepting '+o+" on "+m.type);m[o]=v}},acceptRequired:function(m,o){if(this.acceptKey(m,o),!m[o])throw new u.default(m.type+" requires "+o)},acceptArray:function(m){for(var o=0,v=m.length;o<v;o++)this.acceptKey(m,o),m[o]||(m.splice(o,1),o--,v--)},accept:function(m){if(m){if(!this[m.type])throw new u.default("Unknown type: "+m.type,m);this.current&&this.parents.unshift(this.current),this.current=m;var o=this[m.type](m);return this.current=this.parents.shift(),!this.mutating||o?o:o!==!1?m:void 0}},Program:function(m){this.acceptArray(m.body)},MustacheStatement:n,Decorator:n,BlockStatement:c,DecoratorBlock:c,PartialStatement:d,PartialBlockStatement:function(m){d.call(this,m),this.acceptKey(m,"program")},ContentStatement:function(){},CommentStatement:function(){},SubExpression:n,PathExpression:function(){},StringLiteral:function(){},NumberLiteral:function(){},BooleanLiteral:function(){},UndefinedLiteral:function(){},NullLiteral:function(){},Hash:function(m){this.acceptArray(m.pairs)},HashPair:function(m){this.acceptRequired(m,"value")}},r.default=s,g.exports=r.default},function(g,r,p){"use strict";function s(b,_){if(_=_.path?_.path.original:_,b.path.original!==_){var D={loc:b.path.loc};throw new y.default(b.path.original+" doesn't match "+_,D)}}function n(b,_){this.source=b,this.start={line:_.first_line,column:_.first_column},this.end={line:_.last_line,column:_.last_column}}function c(b){return/^\[.*\]$/.test(b)?b.substring(1,b.length-1):b}function d(b,_){return{open:b.charAt(2)==="~",close:_.charAt(_.length-3)==="~"}}function a(b){return b.replace(/^\{\{~?!-?-?/,"").replace(/-?-?~?\}\}$/,"")}function i(b,_,D){D=this.locInfo(D);for(var O=b?"@":"",S=[],A=0,k=0,I=_.length;k<I;k++){var E=_[k].part,x=_[k].original!==E;if(O+=(_[k].separator||"")+E,x||E!==".."&&E!=="."&&E!=="this")S.push(E);else{if(S.length>0)throw new y.default("Invalid path: "+O,{loc:D});E===".."&&A++}}return{type:"PathExpression",data:b,depth:A,parts:S,original:O,loc:D}}function u(b,_,D,O,S,A){var k=O.charAt(3)||O.charAt(2),I=k!=="{"&&k!=="&",E=/\*/.test(O);return{type:E?"Decorator":"MustacheStatement",path:b,params:_,hash:D,escaped:I,strip:S,loc:this.locInfo(A)}}function m(b,_,D,O){s(b,D),O=this.locInfo(O);var S={type:"Program",body:_,strip:{},loc:O};return{type:"BlockStatement",path:b.path,params:b.params,hash:b.hash,program:S,openStrip:{},inverseStrip:{},closeStrip:{},loc:O}}function o(b,_,D,O,S,A){O&&O.path&&s(b,O);var k=/\*/.test(b.open);_.blockParams=b.blockParams;var I=void 0,E=void 0;if(D){if(k)throw new y.default("Unexpected inverse block on decorator",D);D.chain&&(D.program.body[0].closeStrip=O.strip),E=D.strip,I=D.program}return S&&(S=I,I=_,_=S),{type:k?"DecoratorBlock":"BlockStatement",path:b.path,params:b.params,hash:b.hash,program:_,inverse:I,openStrip:b.strip,inverseStrip:E,closeStrip:O&&O.strip,loc:this.locInfo(A)}}function v(b,_){if(!_&&b.length){var D=b[0].loc,O=b[b.length-1].loc;D&&O&&(_={source:D.source,start:{line:D.start.line,column:D.start.column},end:{line:O.end.line,column:O.end.column}})}return{type:"Program",body:b,strip:{},loc:_}}function f(b,_,D,O){return s(b,D),{type:"PartialBlockStatement",name:b.path,params:b.params,hash:b.hash,program:_,openStrip:b.strip,closeStrip:D&&D.strip,loc:this.locInfo(O)}}var h=p(1).default;r.__esModule=!0,r.SourceLocation=n,r.id=c,r.stripFlags=d,r.stripComment=a,r.preparePath=i,r.prepareMustache=u,r.prepareRawBlock=m,r.prepareBlock=o,r.prepareProgram=v,r.preparePartialBlock=f;var T=p(6),y=h(T)},function(g,r,p){"use strict";function s(){}function n(y,b,_){if(y==null||typeof y!="string"&&y.type!=="Program")throw new o.default("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+y);b=b||{},"data"in b||(b.data=!0),b.compat&&(b.useDepths=!0);var D=_.parse(y,b),O=new _.Compiler().compile(D,b);return new _.JavaScriptCompiler().compile(O,b)}function c(y,b,_){function D(){var A=_.parse(y,b),k=new _.Compiler().compile(A,b),I=new _.JavaScriptCompiler().compile(k,b,void 0,!0);return _.template(I)}function O(A,k){return S||(S=D()),S.call(this,A,k)}if(b===void 0&&(b={}),y==null||typeof y!="string"&&y.type!=="Program")throw new o.default("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+y);b=v.extend({},b),"data"in b||(b.data=!0),b.compat&&(b.useDepths=!0);var S=void 0;return O._setup=function(A){return S||(S=D()),S._setup(A)},O._child=function(A,k,I,E){return S||(S=D()),S._child(A,k,I,E)},O}function d(y,b){if(y===b)return!0;if(v.isArray(y)&&v.isArray(b)&&y.length===b.length){for(var _=0;_<y.length;_++)if(!d(y[_],b[_]))return!1;return!0}}function a(y){if(!y.path.parts){var b=y.path;y.path={type:"PathExpression",data:!1,depth:0,parts:[b.original+""],original:b.original+"",loc:b.loc}}}var i=p(74).default,u=p(1).default;r.__esModule=!0,r.Compiler=s,r.precompile=n,r.compile=c;var m=p(6),o=u(m),v=p(5),f=p(84),h=u(f),T=[].slice;s.prototype={compiler:s,equals:function(y){var b=this.opcodes.length;if(y.opcodes.length!==b)return!1;for(var _=0;_<b;_++){var D=this.opcodes[_],O=y.opcodes[_];if(D.opcode!==O.opcode||!d(D.args,O.args))return!1}b=this.children.length;for(var _=0;_<b;_++)if(!this.children[_].equals(y.children[_]))return!1;return!0},guid:0,compile:function(y,b){return this.sourceNode=[],this.opcodes=[],this.children=[],this.options=b,this.stringParams=b.stringParams,this.trackIds=b.trackIds,b.blockParams=b.blockParams||[],b.knownHelpers=v.extend(i(null),{helperMissing:!0,blockHelperMissing:!0,each:!0,if:!0,unless:!0,with:!0,log:!0,lookup:!0},b.knownHelpers),this.accept(y)},compileProgram:function(y){var b=new this.compiler,_=b.compile(y,this.options),D=this.guid++;return this.usePartial=this.usePartial||_.usePartial,this.children[D]=_,this.useDepths=this.useDepths||_.useDepths,D},accept:function(y){if(!this[y.type])throw new o.default("Unknown type: "+y.type,y);this.sourceNode.unshift(y);var b=this[y.type](y);return this.sourceNode.shift(),b},Program:function(y){this.options.blockParams.unshift(y.blockParams);for(var b=y.body,_=b.length,D=0;D<_;D++)this.accept(b[D]);return this.options.blockParams.shift(),this.isSimple=_===1,this.blockParams=y.blockParams?y.blockParams.length:0,this},BlockStatement:function(y){a(y);var b=y.program,_=y.inverse;b=b&&this.compileProgram(b),_=_&&this.compileProgram(_);var D=this.classifySexpr(y);D==="helper"?this.helperSexpr(y,b,_):D==="simple"?(this.simpleSexpr(y),this.opcode("pushProgram",b),this.opcode("pushProgram",_),this.opcode("emptyHash"),this.opcode("blockValue",y.path.original)):(this.ambiguousSexpr(y,b,_),this.opcode("pushProgram",b),this.opcode("pushProgram",_),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},DecoratorBlock:function(y){var b=y.program&&this.compileProgram(y.program),_=this.setupFullMustacheParams(y,b,void 0),D=y.path;this.useDecorators=!0,this.opcode("registerDecorator",_.length,D.original)},PartialStatement:function(y){this.usePartial=!0;var b=y.program;b&&(b=this.compileProgram(y.program));var _=y.params;if(_.length>1)throw new o.default("Unsupported number of partial arguments: "+_.length,y);_.length||(this.options.explicitPartialContext?this.opcode("pushLiteral","undefined"):_.push({type:"PathExpression",parts:[],depth:0}));var D=y.name.original,O=y.name.type==="SubExpression";O&&this.accept(y.name),this.setupFullMustacheParams(y,b,void 0,!0);var S=y.indent||"";this.options.preventIndent&&S&&(this.opcode("appendContent",S),S=""),this.opcode("invokePartial",O,D,S),this.opcode("append")},PartialBlockStatement:function(y){this.PartialStatement(y)},MustacheStatement:function(y){this.SubExpression(y),y.escaped&&!this.options.noEscape?this.opcode("appendEscaped"):this.opcode("append")},Decorator:function(y){this.DecoratorBlock(y)},ContentStatement:function(y){y.value&&this.opcode("appendContent",y.value)},CommentStatement:function(){},SubExpression:function(y){a(y);var b=this.classifySexpr(y);b==="simple"?this.simpleSexpr(y):b==="helper"?this.helperSexpr(y):this.ambiguousSexpr(y)},ambiguousSexpr:function(y,b,_){var D=y.path,O=D.parts[0],S=b!=null||_!=null;this.opcode("getContext",D.depth),this.opcode("pushProgram",b),this.opcode("pushProgram",_),D.strict=!0,this.accept(D),this.opcode("invokeAmbiguous",O,S)},simpleSexpr:function(y){var b=y.path;b.strict=!0,this.accept(b),this.opcode("resolvePossibleLambda")},helperSexpr:function(y,b,_){var D=this.setupFullMustacheParams(y,b,_),O=y.path,S=O.parts[0];if(this.options.knownHelpers[S])this.opcode("invokeKnownHelper",D.length,S);else{if(this.options.knownHelpersOnly)throw new o.default("You specified knownHelpersOnly, but used the unknown helper "+S,y);O.strict=!0,O.falsy=!0,this.accept(O),this.opcode("invokeHelper",D.length,O.original,h.default.helpers.simpleId(O))}},PathExpression:function(y){this.addDepth(y.depth),this.opcode("getContext",y.depth);var b=y.parts[0],_=h.default.helpers.scopedId(y),D=!y.depth&&!_&&this.blockParamIndex(b);D?this.opcode("lookupBlockParam",D,y.parts):b?y.data?(this.options.data=!0,this.opcode("lookupData",y.depth,y.parts,y.strict)):this.opcode("lookupOnContext",y.parts,y.falsy,y.strict,_):this.opcode("pushContext")},StringLiteral:function(y){this.opcode("pushString",y.value)},NumberLiteral:function(y){this.opcode("pushLiteral",y.value)},BooleanLiteral:function(y){this.opcode("pushLiteral",y.value)},UndefinedLiteral:function(){this.opcode("pushLiteral","undefined")},NullLiteral:function(){this.opcode("pushLiteral","null")},Hash:function(y){var b=y.pairs,_=0,D=b.length;for(this.opcode("pushHash");_<D;_++)this.pushParam(b[_].value);for(;_--;)this.opcode("assignToHash",b[_].key);this.opcode("popHash")},opcode:function(y){this.opcodes.push({opcode:y,args:T.call(arguments,1),loc:this.sourceNode[0].loc})},addDepth:function(y){y&&(this.useDepths=!0)},classifySexpr:function(y){var b=h.default.helpers.simpleId(y.path),_=b&&!!this.blockParamIndex(y.path.parts[0]),D=!_&&h.default.helpers.helperExpression(y),O=!_&&(D||b);if(O&&!D){var S=y.path.parts[0],A=this.options;A.knownHelpers[S]?D=!0:A.knownHelpersOnly&&(O=!1)}return D?"helper":O?"ambiguous":"simple"},pushParams:function(y){for(var b=0,_=y.length;b<_;b++)this.pushParam(y[b])},pushParam:function(y){var b=y.value!=null?y.value:y.original||"";if(this.stringParams)b.replace&&(b=b.replace(/^(\.?\.\/)*/g,"").replace(/\//g,".")),y.depth&&this.addDepth(y.depth),this.opcode("getContext",y.depth||0),this.opcode("pushStringParam",b,y.type),y.type==="SubExpression"&&this.accept(y);else{if(this.trackIds){var _=void 0;if(!y.parts||h.default.helpers.scopedId(y)||y.depth||(_=this.blockParamIndex(y.parts[0])),_){var D=y.parts.slice(1).join(".");this.opcode("pushId","BlockParam",_,D)}else b=y.original||b,b.replace&&(b=b.replace(/^this(?:\.|$)/,"").replace(/^\.\//,"").replace(/^\.$/,"")),this.opcode("pushId",y.type,b)}this.accept(y)}},setupFullMustacheParams:function(y,b,_,D){var O=y.params;return this.pushParams(O),this.opcode("pushProgram",b),this.opcode("pushProgram",_),y.hash?this.accept(y.hash):this.opcode("emptyHash",D),O},blockParamIndex:function(y){for(var b=0,_=this.options.blockParams.length;b<_;b++){var D=this.options.blockParams[b],O=D&&v.indexOf(D,y);if(D&&O>=0)return[b,O]}}}},function(g,r,p){"use strict";function s(h){this.value=h}function n(){}function c(h,T,y,b,_){var D=T.popStack(),O=y.length;for(h&&O--;b<O;b++)D=T.nameLookup(D,y[b],_);return h?[T.aliasable("container.strict"),"(",D,", ",T.quotedString(y[b]),", ",JSON.stringify(T.source.currentLocation)," )"]:D}var d=p(60).default,a=p(1).default;r.__esModule=!0;var i=p(4),u=p(6),m=a(u),o=p(5),v=p(92),f=a(v);n.prototype={nameLookup:function(h,T){return this.internalNameLookup(h,T)},depthedLookup:function(h){return[this.aliasable("container.lookup"),"(depths, ",JSON.stringify(h),")"]},compilerInfo:function(){var h=i.COMPILER_REVISION,T=i.REVISION_CHANGES[h];return[h,T]},appendToBuffer:function(h,T,y){return o.isArray(h)||(h=[h]),h=this.source.wrap(h,T),this.environment.isSimple?["return ",h,";"]:y?["buffer += ",h,";"]:(h.appendToBuffer=!0,h)},initializeBuffer:function(){return this.quotedString("")},internalNameLookup:function(h,T){return this.lookupPropertyFunctionIsUsed=!0,["lookupProperty(",h,",",JSON.stringify(T),")"]},lookupPropertyFunctionIsUsed:!1,compile:function(h,T,y,b){this.environment=h,this.options=T,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!b,this.name=this.environment.name,this.isChild=!!y,this.context=y||{decorators:[],programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.blockParams=[],this.compileChildren(h,T),this.useDepths=this.useDepths||h.useDepths||h.useDecorators||this.options.compat,this.useBlockParams=this.useBlockParams||h.useBlockParams;var _=h.opcodes,D=void 0,O=void 0,S=void 0,A=void 0;for(S=0,A=_.length;S<A;S++)D=_[S],this.source.currentLocation=D.loc,O=O||D.loc,this[D.opcode].apply(this,D.args);if(this.source.currentLocation=O,this.pushSource(""),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new m.default("Compile completed with content left on stack");this.decorators.isEmpty()?this.decorators=void 0:(this.useDecorators=!0,this.decorators.prepend(["var decorators = container.decorators, ",this.lookupPropertyFunctionVarDeclaration(),`;
`]),this.decorators.push("return fn;"),b?this.decorators=Function.apply(this,["fn","props","container","depth0","data","blockParams","depths",this.decorators.merge()]):(this.decorators.prepend(`function(fn, props, container, depth0, data, blockParams, depths) {
`),this.decorators.push(`}
`),this.decorators=this.decorators.merge()));var k=this.createFunctionContext(b);if(this.isChild)return k;var I={compiler:this.compilerInfo(),main:k};this.decorators&&(I.main_d=this.decorators,I.useDecorators=!0);var E=this.context,x=E.programs,P=E.decorators;for(S=0,A=x.length;S<A;S++)x[S]&&(I[S]=x[S],P[S]&&(I[S+"_d"]=P[S],I.useDecorators=!0));return this.environment.usePartial&&(I.usePartial=!0),this.options.data&&(I.useData=!0),this.useDepths&&(I.useDepths=!0),this.useBlockParams&&(I.useBlockParams=!0),this.options.compat&&(I.compat=!0),b?I.compilerOptions=this.options:(I.compiler=JSON.stringify(I.compiler),this.source.currentLocation={start:{line:1,column:0}},I=this.objectLiteral(I),T.srcName?(I=I.toStringWithSourceMap({file:T.destName}),I.map=I.map&&I.map.toString()):I=I.toString()),I},preamble:function(){this.lastContext=0,this.source=new f.default(this.options.srcName),this.decorators=new f.default(this.options.srcName)},createFunctionContext:function(h){var T=this,y="",b=this.stackVars.concat(this.registers.list);b.length>0&&(y+=", "+b.join(", "));var _=0;d(this.aliases).forEach(function(S){var A=T.aliases[S];A.children&&A.referenceCount>1&&(y+=", alias"+ ++_+"="+S,A.children[0]="alias"+_)}),this.lookupPropertyFunctionIsUsed&&(y+=", "+this.lookupPropertyFunctionVarDeclaration());var D=["container","depth0","helpers","partials","data"];(this.useBlockParams||this.useDepths)&&D.push("blockParams"),this.useDepths&&D.push("depths");var O=this.mergeSource(y);return h?(D.push(O),Function.apply(this,D)):this.source.wrap(["function(",D.join(","),`) {
  `,O,"}"])},mergeSource:function(h){var T=this.environment.isSimple,y=!this.forceBuffer,b=void 0,_=void 0,D=void 0,O=void 0;return this.source.each(function(S){S.appendToBuffer?(D?S.prepend("  + "):D=S,O=S):(D&&(_?D.prepend("buffer += "):b=!0,O.add(";"),D=O=void 0),_=!0,T||(y=!1))}),y?D?(D.prepend("return "),O.add(";")):_||this.source.push('return "";'):(h+=", buffer = "+(b?"":this.initializeBuffer()),D?(D.prepend("return buffer + "),O.add(";")):this.source.push("return buffer;")),h&&this.source.prepend("var "+h.substring(2)+(b?"":`;
`)),this.source.merge()},lookupPropertyFunctionVarDeclaration:function(){return`
      lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    }
    `.trim()},blockValue:function(h){var T=this.aliasable("container.hooks.blockHelperMissing"),y=[this.contextName(0)];this.setupHelperArgs(h,0,y);var b=this.popStack();y.splice(1,0,b),this.push(this.source.functionCall(T,"call",y))},ambiguousBlockValue:function(){var h=this.aliasable("container.hooks.blockHelperMissing"),T=[this.contextName(0)];this.setupHelperArgs("",0,T,!0),this.flushInline();var y=this.topStack();T.splice(1,0,y),this.pushSource(["if (!",this.lastHelper,") { ",y," = ",this.source.functionCall(h,"call",T),"}"])},appendContent:function(h){this.pendingContent?h=this.pendingContent+h:this.pendingLocation=this.source.currentLocation,this.pendingContent=h},append:function(){if(this.isInline())this.replaceStack(function(T){return[" != null ? ",T,' : ""']}),this.pushSource(this.appendToBuffer(this.popStack()));else{var h=this.popStack();this.pushSource(["if (",h," != null) { ",this.appendToBuffer(h,void 0,!0)," }"]),this.environment.isSimple&&this.pushSource(["else { ",this.appendToBuffer("''",void 0,!0)," }"])}},appendEscaped:function(){this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"),"(",this.popStack(),")"]))},getContext:function(h){this.lastContext=h},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(h,T,y,b){var _=0;b||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(h[_++])),this.resolvePath("context",h,_,T,y)},lookupBlockParam:function(h,T){this.useBlockParams=!0,this.push(["blockParams[",h[0],"][",h[1],"]"]),this.resolvePath("context",T,1)},lookupData:function(h,T,y){h?this.pushStackLiteral("container.data(data, "+h+")"):this.pushStackLiteral("data"),this.resolvePath("data",T,0,!0,y)},resolvePath:function(h,T,y,b,_){var D=this;if(this.options.strict||this.options.assumeObjects)return void this.push(c(this.options.strict&&_,this,T,y,h));for(var O=T.length;y<O;y++)this.replaceStack(function(S){var A=D.nameLookup(S,T[y],h);return b?[" && ",A]:[" != null ? ",A," : ",S]})},resolvePossibleLambda:function(){this.push([this.aliasable("container.lambda"),"(",this.popStack(),", ",this.contextName(0),")"])},pushStringParam:function(h,T){this.pushContext(),this.pushString(T),T!=="SubExpression"&&(typeof h=="string"?this.pushString(h):this.pushStackLiteral(h))},emptyHash:function(h){this.trackIds&&this.push("{}"),this.stringParams&&(this.push("{}"),this.push("{}")),this.pushStackLiteral(h?"undefined":"{}")},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:{},types:[],contexts:[],ids:[]}},popHash:function(){var h=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push(this.objectLiteral(h.ids)),this.stringParams&&(this.push(this.objectLiteral(h.contexts)),this.push(this.objectLiteral(h.types))),this.push(this.objectLiteral(h.values))},pushString:function(h){this.pushStackLiteral(this.quotedString(h))},pushLiteral:function(h){this.pushStackLiteral(h)},pushProgram:function(h){h!=null?this.pushStackLiteral(this.programExpression(h)):this.pushStackLiteral(null)},registerDecorator:function(h,T){var y=this.nameLookup("decorators",T,"decorator"),b=this.setupHelperArgs(T,h);this.decorators.push(["fn = ",this.decorators.functionCall(y,"",["fn","props","container",b])," || fn;"])},invokeHelper:function(h,T,y){var b=this.popStack(),_=this.setupHelper(h,T),D=[];y&&D.push(_.name),D.push(b),this.options.strict||D.push(this.aliasable("container.hooks.helperMissing"));var O=["(",this.itemsSeparatedBy(D,"||"),")"],S=this.source.functionCall(O,"call",_.callParams);this.push(S)},itemsSeparatedBy:function(h,T){var y=[];y.push(h[0]);for(var b=1;b<h.length;b++)y.push(T,h[b]);return y},invokeKnownHelper:function(h,T){var y=this.setupHelper(h,T);this.push(this.source.functionCall(y.name,"call",y.callParams))},invokeAmbiguous:function(h,T){this.useRegister("helper");var y=this.popStack();this.emptyHash();var b=this.setupHelper(0,h,T),_=this.lastHelper=this.nameLookup("helpers",h,"helper"),D=["(","(helper = ",_," || ",y,")"];this.options.strict||(D[0]="(helper = ",D.push(" != null ? helper : ",this.aliasable("container.hooks.helperMissing"))),this.push(["(",D,b.paramsInit?["),(",b.paramsInit]:[],"),","(typeof helper === ",this.aliasable('"function"')," ? ",this.source.functionCall("helper","call",b.callParams)," : helper))"])},invokePartial:function(h,T,y){var b=[],_=this.setupParams(T,1,b);h&&(T=this.popStack(),delete _.name),y&&(_.indent=JSON.stringify(y)),_.helpers="helpers",_.partials="partials",_.decorators="container.decorators",h?b.unshift(T):b.unshift(this.nameLookup("partials",T,"partial")),this.options.compat&&(_.depths="depths"),_=this.objectLiteral(_),b.push(_),this.push(this.source.functionCall("container.invokePartial","",b))},assignToHash:function(h){var T=this.popStack(),y=void 0,b=void 0,_=void 0;this.trackIds&&(_=this.popStack()),this.stringParams&&(b=this.popStack(),y=this.popStack());var D=this.hash;y&&(D.contexts[h]=y),b&&(D.types[h]=b),_&&(D.ids[h]=_),D.values[h]=T},pushId:function(h,T,y){h==="BlockParam"?this.pushStackLiteral("blockParams["+T[0]+"].path["+T[1]+"]"+(y?" + "+JSON.stringify("."+y):"")):h==="PathExpression"?this.pushString(T):h==="SubExpression"?this.pushStackLiteral("true"):this.pushStackLiteral("null")},compiler:n,compileChildren:function(h,T){for(var y=h.children,b=void 0,_=void 0,D=0,O=y.length;D<O;D++){b=y[D],_=new this.compiler;var S=this.matchExistingProgram(b);if(S==null){this.context.programs.push("");var A=this.context.programs.length;b.index=A,b.name="program"+A,this.context.programs[A]=_.compile(b,T,this.context,!this.precompile),this.context.decorators[A]=_.decorators,this.context.environments[A]=b,this.useDepths=this.useDepths||_.useDepths,this.useBlockParams=this.useBlockParams||_.useBlockParams,b.useDepths=this.useDepths,b.useBlockParams=this.useBlockParams}else b.index=S.index,b.name="program"+S.index,this.useDepths=this.useDepths||S.useDepths,this.useBlockParams=this.useBlockParams||S.useBlockParams}},matchExistingProgram:function(h){for(var T=0,y=this.context.environments.length;T<y;T++){var b=this.context.environments[T];if(b&&b.equals(h))return b}},programExpression:function(h){var T=this.environment.children[h],y=[T.index,"data",T.blockParams];return(this.useBlockParams||this.useDepths)&&y.push("blockParams"),this.useDepths&&y.push("depths"),"container.program("+y.join(", ")+")"},useRegister:function(h){this.registers[h]||(this.registers[h]=!0,this.registers.list.push(h))},push:function(h){return h instanceof s||(h=this.source.wrap(h)),this.inlineStack.push(h),h},pushStackLiteral:function(h){this.push(new s(h))},pushSource:function(h){this.pendingContent&&(this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent),this.pendingLocation)),this.pendingContent=void 0),h&&this.source.push(h)},replaceStack:function(h){var T=["("],y=void 0,b=void 0,_=void 0;if(!this.isInline())throw new m.default("replaceStack on non-inline");var D=this.popStack(!0);if(D instanceof s)y=[D.value],T=["(",y],_=!0;else{b=!0;var O=this.incrStack();T=["((",this.push(O)," = ",D,")"],y=this.topStack()}var S=h.call(this,y);_||this.popStack(),b&&this.stackSlot--,this.push(T.concat(S,")"))},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var h=this.inlineStack;this.inlineStack=[];for(var T=0,y=h.length;T<y;T++){var b=h[T];if(b instanceof s)this.compileStack.push(b);else{var _=this.incrStack();this.pushSource([_," = ",b,";"]),this.compileStack.push(_)}}},isInline:function(){return this.inlineStack.length},popStack:function(h){var T=this.isInline(),y=(T?this.inlineStack:this.compileStack).pop();if(!h&&y instanceof s)return y.value;if(!T){if(!this.stackSlot)throw new m.default("Invalid stack pop");this.stackSlot--}return y},topStack:function(){var h=this.isInline()?this.inlineStack:this.compileStack,T=h[h.length-1];return T instanceof s?T.value:T},contextName:function(h){return this.useDepths&&h?"depths["+h+"]":"depth"+h},quotedString:function(h){return this.source.quotedString(h)},objectLiteral:function(h){return this.source.objectLiteral(h)},aliasable:function(h){var T=this.aliases[h];return T?(T.referenceCount++,T):(T=this.aliases[h]=this.source.wrap(h),T.aliasable=!0,T.referenceCount=1,T)},setupHelper:function(h,T,y){var b=[],_=this.setupHelperArgs(T,h,b,y),D=this.nameLookup("helpers",T,"helper"),O=this.aliasable(this.contextName(0)+" != null ? "+this.contextName(0)+" : (container.nullContext || {})");return{params:b,paramsInit:_,name:D,callParams:[O].concat(b)}},setupParams:function(h,T,y){var b={},_=[],D=[],O=[],S=!y,A=void 0;S&&(y=[]),b.name=this.quotedString(h),b.hash=this.popStack(),this.trackIds&&(b.hashIds=this.popStack()),this.stringParams&&(b.hashTypes=this.popStack(),b.hashContexts=this.popStack());var k=this.popStack(),I=this.popStack();(I||k)&&(b.fn=I||"container.noop",b.inverse=k||"container.noop");for(var E=T;E--;)A=this.popStack(),y[E]=A,this.trackIds&&(O[E]=this.popStack()),this.stringParams&&(D[E]=this.popStack(),_[E]=this.popStack());return S&&(b.args=this.source.generateArray(y)),this.trackIds&&(b.ids=this.source.generateArray(O)),this.stringParams&&(b.types=this.source.generateArray(D),b.contexts=this.source.generateArray(_)),this.options.data&&(b.data="data"),this.useBlockParams&&(b.blockParams="blockParams"),b},setupHelperArgs:function(h,T,y,b){var _=this.setupParams(h,T,y);return _.loc=JSON.stringify(this.source.currentLocation),_=this.objectLiteral(_),b?(this.useRegister("options"),y.push("options"),["options=",_]):y?(y.push(_),""):_}},function(){for(var h="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "),T=n.RESERVED_WORDS={},y=0,b=h.length;y<b;y++)T[h[y]]=!0}(),n.isValidJavaScriptVariableName=function(h){return!n.RESERVED_WORDS[h]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(h)},r.default=n,g.exports=r.default},function(g,r,p){"use strict";function s(i,u,m){if(d.isArray(i)){for(var o=[],v=0,f=i.length;v<f;v++)o.push(u.wrap(i[v],m));return o}return typeof i=="boolean"||typeof i=="number"?i+"":i}function n(i){this.srcFile=i,this.source=[]}var c=p(60).default;r.__esModule=!0;var d=p(5),a=void 0;try{}catch(i){}a||(a=function(i,u,m,o){this.src="",o&&this.add(o)},a.prototype={add:function(i){d.isArray(i)&&(i=i.join("")),this.src+=i},prepend:function(i){d.isArray(i)&&(i=i.join("")),this.src=i+this.src},toStringWithSourceMap:function(){return{code:this.toString()}},toString:function(){return this.src}}),n.prototype={isEmpty:function(){return!this.source.length},prepend:function(i,u){this.source.unshift(this.wrap(i,u))},push:function(i,u){this.source.push(this.wrap(i,u))},merge:function(){var i=this.empty();return this.each(function(u){i.add(["  ",u,`
`])}),i},each:function(i){for(var u=0,m=this.source.length;u<m;u++)i(this.source[u])},empty:function(){var i=this.currentLocation||{start:{}};return new a(i.start.line,i.start.column,this.srcFile)},wrap:function(i){var u=arguments.length<=1||arguments[1]===void 0?this.currentLocation||{start:{}}:arguments[1];return i instanceof a?i:(i=s(i,this,u),new a(u.start.line,u.start.column,this.srcFile,i))},functionCall:function(i,u,m){return m=this.generateList(m),this.wrap([i,u?"."+u+"(":"(",m,")"])},quotedString:function(i){return'"'+(i+"").replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},objectLiteral:function(i){var u=this,m=[];c(i).forEach(function(v){var f=s(i[v],u);f!=="undefined"&&m.push([u.quotedString(v),":",f])});var o=this.generateList(m);return o.prepend("{"),o.add("}"),o},generateList:function(i){for(var u=this.empty(),m=0,o=i.length;m<o;m++)m&&u.add(","),u.add(s(i[m],this));return u},generateArray:function(i){var u=this.generateList(i);return u.prepend("["),u.add("]"),u}},r.default=n,g.exports=r.default}])})},8377:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(5300),r(5134),r(5363),r(7501),r(4521),r(1848),r(3857),r(7847),r(1768),r(4181)],s=function(n,c,d,a,i,u,m){"use strict";var o=/%20/g,v=/#.*$/,f=/([?&])_=[^&]*/,h=/^(.*?):[ \t]*([^\r\n]*)$/mg,T=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,y=/^(?:GET|HEAD)$/,b=/^\/\//,_={},D={},O="*/".concat("*"),S=c.createElement("a");S.href=i.href;function A(P){return function(F,q){typeof F!="string"&&(q=F,F="*");var W,M=0,$=F.toLowerCase().match(a)||[];if(d(q))for(;W=$[M++];)W[0]==="+"?(W=W.slice(1)||"*",(P[W]=P[W]||[]).unshift(q)):(P[W]=P[W]||[]).push(q)}}function k(P,F,q,W){var M={},$=P===D;function H(Z){var G;return M[Z]=!0,n.each(P[Z]||[],function(tt,it){var lt=it(F,q,W);if(typeof lt=="string"&&!$&&!M[lt])return F.dataTypes.unshift(lt),H(lt),!1;if($)return!(G=lt)}),G}return H(F.dataTypes[0])||!M["*"]&&H("*")}function I(P,F){var q,W,M=n.ajaxSettings.flatOptions||{};for(q in F)F[q]!==void 0&&((M[q]?P:W||(W={}))[q]=F[q]);return W&&n.extend(!0,P,W),P}function E(P,F,q){for(var W,M,$,H,Z=P.contents,G=P.dataTypes;G[0]==="*";)G.shift(),W===void 0&&(W=P.mimeType||F.getResponseHeader("Content-Type"));if(W){for(M in Z)if(Z[M]&&Z[M].test(W)){G.unshift(M);break}}if(G[0]in q)$=G[0];else{for(M in q){if(!G[0]||P.converters[M+" "+G[0]]){$=M;break}H||(H=M)}$=$||H}if($)return $!==G[0]&&G.unshift($),q[$]}function x(P,F,q,W){var M,$,H,Z,G,tt={},it=P.dataTypes.slice();if(it[1])for(H in P.converters)tt[H.toLowerCase()]=P.converters[H];for($=it.shift();$;)if(P.responseFields[$]&&(q[P.responseFields[$]]=F),!G&&W&&P.dataFilter&&(F=P.dataFilter(F,P.dataType)),G=$,$=it.shift(),$){if($==="*")$=G;else if(G!=="*"&&G!==$){if(H=tt[G+" "+$]||tt["* "+$],!H){for(M in tt)if(Z=M.split(" "),Z[1]===$&&(H=tt[G+" "+Z[0]]||tt["* "+Z[0]],H)){H===!0?H=tt[M]:tt[M]!==!0&&($=Z[0],it.unshift(Z[1]));break}}if(H!==!0)if(H&&P.throws)F=H(F);else try{F=H(F)}catch(lt){return{state:"parsererror",error:H?lt:"No conversion from "+G+" to "+$}}}}return{state:"success",data:F}}return n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:i.href,type:"GET",isLocal:T.test(i.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":O,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(P,F){return F?I(I(P,n.ajaxSettings),F):I(n.ajaxSettings,P)},ajaxPrefilter:A(_),ajaxTransport:A(D),ajax:function(P,F){typeof P=="object"&&(F=P,P=void 0),F=F||{};var q,W,M,$,H,Z,G,tt,it,lt,Y=n.ajaxSetup({},F),bt=Y.context||Y,St=Y.context&&(bt.nodeType||bt.jquery)?n(bt):n.event,xt=n.Deferred(),oe=n.Callbacks("once memory"),De=Y.statusCode||{},_e={},we={},Me="canceled",ut={readyState:0,getResponseHeader:function(_t){var $t;if(G){if(!$)for($={};$t=h.exec(M);)$[$t[1].toLowerCase()+" "]=($[$t[1].toLowerCase()+" "]||[]).concat($t[2]);$t=$[_t.toLowerCase()+" "]}return $t==null?null:$t.join(", ")},getAllResponseHeaders:function(){return G?M:null},setRequestHeader:function(_t,$t){return G==null&&(_t=we[_t.toLowerCase()]=we[_t.toLowerCase()]||_t,_e[_t]=$t),this},overrideMimeType:function(_t){return G==null&&(Y.mimeType=_t),this},statusCode:function(_t){var $t;if(_t)if(G)ut.always(_t[ut.status]);else for($t in _t)De[$t]=[De[$t],_t[$t]];return this},abort:function(_t){var $t=_t||Me;return q&&q.abort($t),Pt(0,$t),this}};if(xt.promise(ut),Y.url=((P||Y.url||i.href)+"").replace(b,i.protocol+"//"),Y.type=F.method||F.type||Y.method||Y.type,Y.dataTypes=(Y.dataType||"*").toLowerCase().match(a)||[""],Y.crossDomain==null){Z=c.createElement("a");try{Z.href=Y.url,Z.href=Z.href,Y.crossDomain=S.protocol+"//"+S.host!=Z.protocol+"//"+Z.host}catch(_t){Y.crossDomain=!0}}if(Y.data&&Y.processData&&typeof Y.data!="string"&&(Y.data=n.param(Y.data,Y.traditional)),k(_,Y,F,ut),G)return ut;tt=n.event&&Y.global,tt&&n.active++===0&&n.event.trigger("ajaxStart"),Y.type=Y.type.toUpperCase(),Y.hasContent=!y.test(Y.type),W=Y.url.replace(v,""),Y.hasContent?Y.data&&Y.processData&&(Y.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&(Y.data=Y.data.replace(o,"+")):(lt=Y.url.slice(W.length),Y.data&&(Y.processData||typeof Y.data=="string")&&(W+=(m.test(W)?"&":"?")+Y.data,delete Y.data),Y.cache===!1&&(W=W.replace(f,"$1"),lt=(m.test(W)?"&":"?")+"_="+u.guid+++lt),Y.url=W+lt),Y.ifModified&&(n.lastModified[W]&&ut.setRequestHeader("If-Modified-Since",n.lastModified[W]),n.etag[W]&&ut.setRequestHeader("If-None-Match",n.etag[W])),(Y.data&&Y.hasContent&&Y.contentType!==!1||F.contentType)&&ut.setRequestHeader("Content-Type",Y.contentType),ut.setRequestHeader("Accept",Y.dataTypes[0]&&Y.accepts[Y.dataTypes[0]]?Y.accepts[Y.dataTypes[0]]+(Y.dataTypes[0]!=="*"?", "+O+"; q=0.01":""):Y.accepts["*"]);for(it in Y.headers)ut.setRequestHeader(it,Y.headers[it]);if(Y.beforeSend&&(Y.beforeSend.call(bt,ut,Y)===!1||G))return ut.abort();if(Me="abort",oe.add(Y.complete),ut.done(Y.success),ut.fail(Y.error),q=k(D,Y,F,ut),!q)Pt(-1,"No Transport");else{if(ut.readyState=1,tt&&St.trigger("ajaxSend",[ut,Y]),G)return ut;Y.async&&Y.timeout>0&&(H=window.setTimeout(function(){ut.abort("timeout")},Y.timeout));try{G=!1,q.send(_e,Pt)}catch(_t){if(G)throw _t;Pt(-1,_t)}}function Pt(_t,$t,de,Be){var ae,Te,mn,Ne,Le,zt=$t;G||(G=!0,H&&window.clearTimeout(H),q=void 0,M=Be||"",ut.readyState=_t>0?4:0,ae=_t>=200&&_t<300||_t===304,de&&(Ne=E(Y,ut,de)),!ae&&n.inArray("script",Y.dataTypes)>-1&&n.inArray("json",Y.dataTypes)<0&&(Y.converters["text script"]=function(){}),Ne=x(Y,Ne,ut,ae),ae?(Y.ifModified&&(Le=ut.getResponseHeader("Last-Modified"),Le&&(n.lastModified[W]=Le),Le=ut.getResponseHeader("etag"),Le&&(n.etag[W]=Le)),_t===204||Y.type==="HEAD"?zt="nocontent":_t===304?zt="notmodified":(zt=Ne.state,Te=Ne.data,mn=Ne.error,ae=!mn)):(mn=zt,(_t||!zt)&&(zt="error",_t<0&&(_t=0))),ut.status=_t,ut.statusText=($t||zt)+"",ae?xt.resolveWith(bt,[Te,zt,ut]):xt.rejectWith(bt,[ut,zt,mn]),ut.statusCode(De),De=void 0,tt&&St.trigger(ae?"ajaxSuccess":"ajaxError",[ut,Y,ae?Te:mn]),oe.fireWith(bt,[ut,zt]),tt&&(St.trigger("ajaxComplete",[ut,Y]),--n.active||n.event.trigger("ajaxStop")))}return ut},getJSON:function(P,F,q){return n.get(P,F,q,"json")},getScript:function(P,F){return n.get(P,void 0,F,"script")}}),n.each(["get","post"],function(P,F){n[F]=function(q,W,M,$){return d(W)&&($=$||M,M=W,W=void 0),n.ajax(n.extend({url:q,type:F,dataType:$,data:W,success:M},n.isPlainObject(q)&&q))}}),n.ajaxPrefilter(function(P){var F;for(F in P.headers)F.toLowerCase()==="content-type"&&(P.contentType=P.headers[F]||"")}),n}.apply(g,p),s!==void 0&&(w.exports=s)},7529:(w,g,r)=>{var p,s;p=[r(3663),r(5300),r(7501),r(4521),r(8377)],s=function(n,c,d,a){"use strict";var i=[],u=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var m=i.pop()||n.expando+"_"+d.guid++;return this[m]=!0,m}}),n.ajaxPrefilter("json jsonp",function(m,o,v){var f,h,T,y=m.jsonp!==!1&&(u.test(m.url)?"url":typeof m.data=="string"&&(m.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&u.test(m.data)&&"data");if(y||m.dataTypes[0]==="jsonp")return f=m.jsonpCallback=c(m.jsonpCallback)?m.jsonpCallback():m.jsonpCallback,y?m[y]=m[y].replace(u,"$1"+f):m.jsonp!==!1&&(m.url+=(a.test(m.url)?"&":"?")+m.jsonp+"="+f),m.converters["script json"]=function(){return T||n.error(f+" was not called"),T[0]},m.dataTypes[0]="json",h=window[f],window[f]=function(){T=arguments},v.always(function(){h===void 0?n(window).removeProp(f):window[f]=h,m[f]&&(m.jsonpCallback=o.jsonpCallback,i.push(f)),T&&c(h)&&h(T[0]),T=h=void 0}),"script"})}.apply(g,p),s!==void 0&&(w.exports=s)},3547:(w,g,r)=>{var p,s;p=[r(3663),r(5546),r(5300),r(8514),r(8377),r(5323),r(9199),r(3054)],s=function(n,c,d){"use strict";n.fn.load=function(a,i,u){var m,o,v,f=this,h=a.indexOf(" ");return h>-1&&(m=c(a.slice(h)),a=a.slice(0,h)),d(i)?(u=i,i=void 0):i&&typeof i=="object"&&(o="POST"),f.length>0&&n.ajax({url:a,type:o||"GET",dataType:"html",data:i}).done(function(T){v=arguments,f.html(m?n("<div>").append(n.parseHTML(T)).find(m):T)}).always(u&&function(T,y){f.each(function(){u.apply(this,v||[T.responseText,y,T])})}),this}}.apply(g,p),s!==void 0&&(w.exports=s)},2367:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(8377)],s=function(n,c){"use strict";n.ajaxPrefilter(function(d){d.crossDomain&&(d.contents.script=!1)}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(d){return n.globalEval(d),d}}}),n.ajaxPrefilter("script",function(d){d.cache===void 0&&(d.cache=!1),d.crossDomain&&(d.type="GET")}),n.ajaxTransport("script",function(d){if(d.crossDomain||d.scriptAttrs){var a,i;return{send:function(u,m){a=n("<script>").attr(d.scriptAttrs||{}).prop({charset:d.scriptCharset,src:d.url}).on("load error",i=function(o){a.remove(),i=null,o&&m(o.type==="error"?404:200,o.type)}),c.head.appendChild(a[0])},abort:function(){i&&i()}}}})}.apply(g,p),s!==void 0&&(w.exports=s)},5363:(w,g,r)=>{var p;p=function(){"use strict";return window.location}.call(g,r,g,w),p!==void 0&&(w.exports=p)},7501:(w,g,r)=>{var p;p=function(){"use strict";return{guid:Date.now()}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},4521:(w,g,r)=>{var p;p=function(){"use strict";return/\?/}.call(g,r,g,w),p!==void 0&&(w.exports=p)},5291:(w,g,r)=>{var p,s;p=[r(3663),r(6459),r(8377)],s=function(n,c){"use strict";n.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest}catch(i){}};var d={0:200,1223:204},a=n.ajaxSettings.xhr();c.cors=!!a&&"withCredentials"in a,c.ajax=a=!!a,n.ajaxTransport(function(i){var u,m;if(c.cors||a&&!i.crossDomain)return{send:function(o,v){var f,h=i.xhr();if(h.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(f in i.xhrFields)h[f]=i.xhrFields[f];i.mimeType&&h.overrideMimeType&&h.overrideMimeType(i.mimeType),!i.crossDomain&&!o["X-Requested-With"]&&(o["X-Requested-With"]="XMLHttpRequest");for(f in o)h.setRequestHeader(f,o[f]);u=function(T){return function(){u&&(u=m=h.onload=h.onerror=h.onabort=h.ontimeout=h.onreadystatechange=null,T==="abort"?h.abort():T==="error"?typeof h.status!="number"?v(0,"error"):v(h.status,h.statusText):v(d[h.status]||h.status,h.statusText,(h.responseType||"text")!=="text"||typeof h.responseText!="string"?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=u(),m=h.onerror=h.ontimeout=u("error"),h.onabort!==void 0?h.onabort=m:h.onreadystatechange=function(){h.readyState===4&&window.setTimeout(function(){u&&m()})},u=u("abort");try{h.send(i.hasContent&&i.data||null)}catch(T){if(u)throw T}},abort:function(){u&&u()}}})}.apply(g,p),s!==void 0&&(w.exports=s)},1434:(w,g,r)=>{var p,s;p=[r(3663),r(5194),r(7457),r(2363),r(1440)],s=function(n){"use strict";return n}.apply(g,p),s!==void 0&&(w.exports=s)},5194:(w,g,r)=>{var p,s;p=[r(3663),r(8074),r(4622),r(6929),r(5134),r(3054)],s=function(n,c,d,a,i){"use strict";var u,m=n.expr.attrHandle;n.fn.extend({attr:function(o,v){return c(this,n.attr,o,v,arguments.length>1)},removeAttr:function(o){return this.each(function(){n.removeAttr(this,o)})}}),n.extend({attr:function(o,v,f){var h,T,y=o.nodeType;if(!(y===3||y===8||y===2)){if(typeof o.getAttribute=="undefined")return n.prop(o,v,f);if((y!==1||!n.isXMLDoc(o))&&(T=n.attrHooks[v.toLowerCase()]||(n.expr.match.bool.test(v)?u:void 0)),f!==void 0){if(f===null){n.removeAttr(o,v);return}return T&&"set"in T&&(h=T.set(o,f,v))!==void 0?h:(o.setAttribute(v,f+""),f)}return T&&"get"in T&&(h=T.get(o,v))!==null?h:(h=n.find.attr(o,v),h==null?void 0:h)}},attrHooks:{type:{set:function(o,v){if(!a.radioValue&&v==="radio"&&d(o,"input")){var f=o.value;return o.setAttribute("type",v),f&&(o.value=f),v}}}},removeAttr:function(o,v){var f,h=0,T=v&&v.match(i);if(T&&o.nodeType===1)for(;f=T[h++];)o.removeAttribute(f)}}),u={set:function(o,v,f){return v===!1?n.removeAttr(o,f):o.setAttribute(f,f),f}},n.each(n.expr.match.bool.source.match(/\w+/g),function(o,v){var f=m[v]||n.find.attr;m[v]=function(h,T,y){var b,_,D=T.toLowerCase();return y||(_=m[D],m[D]=b,b=f(h,T,y)!=null?D:null,m[D]=_),b}})}.apply(g,p),s!==void 0&&(w.exports=s)},2363:(w,g,r)=>{var p,s;p=[r(3663),r(5546),r(5300),r(5134),r(8813),r(1848)],s=function(n,c,d,a,i){"use strict";function u(o){return o.getAttribute&&o.getAttribute("class")||""}function m(o){return Array.isArray(o)?o:typeof o=="string"?o.match(a)||[]:[]}n.fn.extend({addClass:function(o){var v,f,h,T,y,b;return d(o)?this.each(function(_){n(this).addClass(o.call(this,_,u(this)))}):(v=m(o),v.length?this.each(function(){if(h=u(this),f=this.nodeType===1&&" "+c(h)+" ",f){for(y=0;y<v.length;y++)T=v[y],f.indexOf(" "+T+" ")<0&&(f+=T+" ");b=c(f),h!==b&&this.setAttribute("class",b)}}):this)},removeClass:function(o){var v,f,h,T,y,b;return d(o)?this.each(function(_){n(this).removeClass(o.call(this,_,u(this)))}):arguments.length?(v=m(o),v.length?this.each(function(){if(h=u(this),f=this.nodeType===1&&" "+c(h)+" ",f){for(y=0;y<v.length;y++)for(T=v[y];f.indexOf(" "+T+" ")>-1;)f=f.replace(" "+T+" "," ");b=c(f),h!==b&&this.setAttribute("class",b)}}):this):this.attr("class","")},toggleClass:function(o,v){var f,h,T,y,b=typeof o,_=b==="string"||Array.isArray(o);return d(o)?this.each(function(D){n(this).toggleClass(o.call(this,D,u(this),v),v)}):typeof v=="boolean"&&_?v?this.addClass(o):this.removeClass(o):(f=m(o),this.each(function(){if(_)for(y=n(this),T=0;T<f.length;T++)h=f[T],y.hasClass(h)?y.removeClass(h):y.addClass(h);else(o===void 0||b==="boolean")&&(h=u(this),h&&i.set(this,"__className__",h),this.setAttribute&&this.setAttribute("class",h||o===!1?"":i.get(this,"__className__")||""))}))},hasClass:function(o){var v,f,h=0;for(v=" "+o+" ";f=this[h++];)if(f.nodeType===1&&(" "+c(u(f))+" ").indexOf(v)>-1)return!0;return!1}})}.apply(g,p),s!==void 0&&(w.exports=s)},7457:(w,g,r)=>{var p,s;p=[r(3663),r(8074),r(6929),r(3054)],s=function(n,c,d){"use strict";var a=/^(?:input|select|textarea|button)$/i,i=/^(?:a|area)$/i;n.fn.extend({prop:function(u,m){return c(this,n.prop,u,m,arguments.length>1)},removeProp:function(u){return this.each(function(){delete this[n.propFix[u]||u]})}}),n.extend({prop:function(u,m,o){var v,f,h=u.nodeType;if(!(h===3||h===8||h===2))return(h!==1||!n.isXMLDoc(u))&&(m=n.propFix[m]||m,f=n.propHooks[m]),o!==void 0?f&&"set"in f&&(v=f.set(u,o,m))!==void 0?v:u[m]=o:f&&"get"in f&&(v=f.get(u,m))!==null?v:u[m]},propHooks:{tabIndex:{get:function(u){var m=n.find.attr(u,"tabindex");return m?parseInt(m,10):a.test(u.nodeName)||i.test(u.nodeName)&&u.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),d.optSelected||(n.propHooks.selected={get:function(u){var m=u.parentNode;return m&&m.parentNode&&m.parentNode.selectedIndex,null},set:function(u){var m=u.parentNode;m&&(m.selectedIndex,m.parentNode&&m.parentNode.selectedIndex)}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this})}.apply(g,p),s!==void 0&&(w.exports=s)},6929:(w,g,r)=>{var p,s;p=[r(3993),r(6459)],s=function(n,c){"use strict";return function(){var d=n.createElement("input"),a=n.createElement("select"),i=a.appendChild(n.createElement("option"));d.type="checkbox",c.checkOn=d.value!=="",c.optSelected=i.selected,d=n.createElement("input"),d.value="t",d.type="radio",c.radioValue=d.value==="t"}(),c}.apply(g,p),s!==void 0&&(w.exports=s)},1440:(w,g,r)=>{var p,s;p=[r(3663),r(5546),r(6929),r(4622),r(5300),r(1848)],s=function(n,c,d,a,i){"use strict";var u=/\r/g;n.fn.extend({val:function(m){var o,v,f,h=this[0];return arguments.length?(f=i(m),this.each(function(T){var y;this.nodeType===1&&(f?y=m.call(this,T,n(this).val()):y=m,y==null?y="":typeof y=="number"?y+="":Array.isArray(y)&&(y=n.map(y,function(b){return b==null?"":b+""})),o=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],(!o||!("set"in o)||o.set(this,y,"value")===void 0)&&(this.value=y))})):h?(o=n.valHooks[h.type]||n.valHooks[h.nodeName.toLowerCase()],o&&"get"in o&&(v=o.get(h,"value"))!==void 0?v:(v=h.value,typeof v=="string"?v.replace(u,""):v==null?"":v)):void 0}}),n.extend({valHooks:{option:{get:function(m){var o=n.find.attr(m,"value");return o!=null?o:c(n.text(m))}},select:{get:function(m){var o,v,f,h=m.options,T=m.selectedIndex,y=m.type==="select-one",b=y?null:[],_=y?T+1:h.length;for(T<0?f=_:f=y?T:0;f<_;f++)if(v=h[f],(v.selected||f===T)&&!v.disabled&&(!v.parentNode.disabled||!a(v.parentNode,"optgroup"))){if(o=n(v).val(),y)return o;b.push(o)}return b},set:function(m,o){for(var v,f,h=m.options,T=n.makeArray(o),y=h.length;y--;)f=h[y],(f.selected=n.inArray(n.valHooks.option.get(f),T)>-1)&&(v=!0);return v||(m.selectedIndex=-1),T}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(m,o){if(Array.isArray(o))return m.checked=n.inArray(n(m).val(),o)>-1}},d.checkOn||(n.valHooks[this].get=function(m){return m.getAttribute("value")===null?"on":m.value})})}.apply(g,p),s!==void 0&&(w.exports=s)},4462:(w,g,r)=>{var p,s;p=[r(3663),r(3498),r(5300),r(5134)],s=function(n,c,d,a){"use strict";function i(u){var m={};return n.each(u.match(a)||[],function(o,v){m[v]=!0}),m}return n.Callbacks=function(u){u=typeof u=="string"?i(u):n.extend({},u);var m,o,v,f,h=[],T=[],y=-1,b=function(){for(f=f||u.once,v=m=!0;T.length;y=-1)for(o=T.shift();++y<h.length;)h[y].apply(o[0],o[1])===!1&&u.stopOnFalse&&(y=h.length,o=!1);u.memory||(o=!1),m=!1,f&&(o?h=[]:h="")},_={add:function(){return h&&(o&&!m&&(y=h.length-1,T.push(o)),function D(O){n.each(O,function(S,A){d(A)?(!u.unique||!_.has(A))&&h.push(A):A&&A.length&&c(A)!=="string"&&D(A)})}(arguments),o&&!m&&b()),this},remove:function(){return n.each(arguments,function(D,O){for(var S;(S=n.inArray(O,h,S))>-1;)h.splice(S,1),S<=y&&y--}),this},has:function(D){return D?n.inArray(D,h)>-1:h.length>0},empty:function(){return h&&(h=[]),this},disable:function(){return f=T=[],h=o="",this},disabled:function(){return!h},lock:function(){return f=T=[],!o&&!m&&(h=o=""),this},locked:function(){return!!f},fireWith:function(D,O){return f||(O=O||[],O=[D,O.slice?O.slice():O],T.push(O),m||b()),this},fire:function(){return _.fireWith(this,arguments),this},fired:function(){return!!v}};return _},n}.apply(g,p),s!==void 0&&(w.exports=s)},3663:(w,g,r)=>{var p,s;p=[r(420),r(9115),r(6397),r(2979),r(9360),r(7302),r(3278),r(6541),r(6046),r(4080),r(1784),r(6459),r(5300),r(7114),r(944),r(3498)],s=function(n,c,d,a,i,u,m,o,v,f,h,T,y,b,_,D){"use strict";var O="3.7.1",S=/HTML$/i,A=function(I,E){return new A.fn.init(I,E)};A.fn=A.prototype={jquery:O,constructor:A,length:0,toArray:function(){return d.call(this)},get:function(I){return I==null?d.call(this):I<0?this[I+this.length]:this[I]},pushStack:function(I){var E=A.merge(this.constructor(),I);return E.prevObject=this,E},each:function(I){return A.each(this,I)},map:function(I){return this.pushStack(A.map(this,function(E,x){return I.call(E,x,E)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(A.grep(this,function(I,E){return(E+1)%2}))},odd:function(){return this.pushStack(A.grep(this,function(I,E){return E%2}))},eq:function(I){var E=this.length,x=+I+(I<0?E:0);return this.pushStack(x>=0&&x<E?[this[x]]:[])},end:function(){return this.prevObject||this.constructor()},push:i,sort:n.sort,splice:n.splice},A.extend=A.fn.extend=function(){var I,E,x,P,F,q,W=arguments[0]||{},M=1,$=arguments.length,H=!1;for(typeof W=="boolean"&&(H=W,W=arguments[M]||{},M++),typeof W!="object"&&!y(W)&&(W={}),M===$&&(W=this,M--);M<$;M++)if((I=arguments[M])!=null)for(E in I)P=I[E],!(E==="__proto__"||W===P)&&(H&&P&&(A.isPlainObject(P)||(F=Array.isArray(P)))?(x=W[E],F&&!Array.isArray(x)?q=[]:!F&&!A.isPlainObject(x)?q={}:q=x,F=!1,W[E]=A.extend(H,q,P)):P!==void 0&&(W[E]=P));return W},A.extend({expando:"jQuery"+(O+Math.random()).replace(/\D/g,""),isReady:!0,error:function(I){throw new Error(I)},noop:function(){},isPlainObject:function(I){var E,x;return!I||o.call(I)!=="[object Object]"?!1:(E=c(I),E?(x=v.call(E,"constructor")&&E.constructor,typeof x=="function"&&f.call(x)===h):!0)},isEmptyObject:function(I){var E;for(E in I)return!1;return!0},globalEval:function(I,E,x){_(I,{nonce:E&&E.nonce},x)},each:function(I,E){var x,P=0;if(k(I))for(x=I.length;P<x&&E.call(I[P],P,I[P])!==!1;P++);else for(P in I)if(E.call(I[P],P,I[P])===!1)break;return I},text:function(I){var E,x="",P=0,F=I.nodeType;if(!F)for(;E=I[P++];)x+=A.text(E);return F===1||F===11?I.textContent:F===9?I.documentElement.textContent:F===3||F===4?I.nodeValue:x},makeArray:function(I,E){var x=E||[];return I!=null&&(k(Object(I))?A.merge(x,typeof I=="string"?[I]:I):i.call(x,I)),x},inArray:function(I,E,x){return E==null?-1:u.call(E,I,x)},isXMLDoc:function(I){var E=I&&I.namespaceURI,x=I&&(I.ownerDocument||I).documentElement;return!S.test(E||x&&x.nodeName||"HTML")},merge:function(I,E){for(var x=+E.length,P=0,F=I.length;P<x;P++)I[F++]=E[P];return I.length=F,I},grep:function(I,E,x){for(var P,F=[],q=0,W=I.length,M=!x;q<W;q++)P=!E(I[q],q),P!==M&&F.push(I[q]);return F},map:function(I,E,x){var P,F,q=0,W=[];if(k(I))for(P=I.length;q<P;q++)F=E(I[q],q,x),F!=null&&W.push(F);else for(q in I)F=E(I[q],q,x),F!=null&&W.push(F);return a(W)},guid:1,support:T}),typeof Symbol=="function"&&(A.fn[Symbol.iterator]=n[Symbol.iterator]),A.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(I,E){m["[object "+E+"]"]=E.toLowerCase()});function k(I){var E=!!I&&"length"in I&&I.length,x=D(I);return y(I)||b(I)?!1:x==="array"||E===0||typeof E=="number"&&E>0&&E-1 in I}return A}.apply(g,p),s!==void 0&&(w.exports=s)},944:(w,g,r)=>{var p,s;p=[r(3993)],s=function(n){"use strict";var c={type:!0,src:!0,nonce:!0,noModule:!0};function d(a,i,u){u=u||n;var m,o,v=u.createElement("script");if(v.text=a,i)for(m in c)o=i[m]||i.getAttribute&&i.getAttribute(m),o&&v.setAttribute(m,o);u.head.appendChild(v).parentNode.removeChild(v)}return d}.apply(g,p),s!==void 0&&(w.exports=s)},8074:(w,g,r)=>{var p,s;p=[r(3663),r(3498),r(5300)],s=function(n,c,d){"use strict";var a=function(i,u,m,o,v,f,h){var T=0,y=i.length,b=m==null;if(c(m)==="object"){v=!0;for(T in m)a(i,u,T,m[T],!0,f,h)}else if(o!==void 0&&(v=!0,d(o)||(h=!0),b&&(h?(u.call(i,o),u=null):(b=u,u=function(_,D,O){return b.call(n(_),O)})),u))for(;T<y;T++)u(i[T],m,h?o:o.call(i[T],T,u(i[T],m)));return v?i:b?u.call(i):y?u(i[0],m):f};return a}.apply(g,p),s!==void 0&&(w.exports=s)},8826:(w,g)=>{var r,p;r=[],p=function(){"use strict";var s=/^-ms-/,n=/-([a-z])/g;function c(a,i){return i.toUpperCase()}function d(a){return a.replace(s,"ms-").replace(n,c)}return d}.apply(g,r),p!==void 0&&(w.exports=p)},1848:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(5300),r(9834),r(7006)],s=function(n,c,d,a){"use strict";var i,u=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,m=n.fn.init=function(o,v,f){var h,T;if(!o)return this;if(f=f||i,typeof o=="string")if(o[0]==="<"&&o[o.length-1]===">"&&o.length>=3?h=[null,o,null]:h=u.exec(o),h&&(h[1]||!v))if(h[1]){if(v=v instanceof n?v[0]:v,n.merge(this,n.parseHTML(h[1],v&&v.nodeType?v.ownerDocument||v:c,!0)),a.test(h[1])&&n.isPlainObject(v))for(h in v)d(this[h])?this[h](v[h]):this.attr(h,v[h]);return this}else return T=c.getElementById(h[2]),T&&(this[0]=T,this.length=1),this;else return!v||v.jquery?(v||f).find(o):this.constructor(v).find(o);else{if(o.nodeType)return this[0]=o,this.length=1,this;if(d(o))return f.ready!==void 0?f.ready(o):o(n)}return n.makeArray(o,this)};return m.prototype=n.fn,i=n(c),m}.apply(g,p),s!==void 0&&(w.exports=s)},911:(w,g,r)=>{var p,s;p=[r(3663),r(8448),r(3616)],s=function(n,c){"use strict";var d=function(i){return n.contains(i.ownerDocument,i)},a={composed:!0};return c.getRootNode&&(d=function(i){return n.contains(i.ownerDocument,i)||i.getRootNode(a)===i.ownerDocument}),d}.apply(g,p),s!==void 0&&(w.exports=s)},4622:(w,g,r)=>{var p;p=function(){"use strict";function s(n,c){return n.nodeName&&n.nodeName.toLowerCase()===c.toLowerCase()}return s}.call(g,r,g,w),p!==void 0&&(w.exports=p)},8514:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(9834),r(5737),r(5141)],s=function(n,c,d,a,i){"use strict";return n.parseHTML=function(u,m,o){if(typeof u!="string")return[];typeof m=="boolean"&&(o=m,m=!1);var v,f,h;return m||(i.createHTMLDocument?(m=c.implementation.createHTMLDocument(""),v=m.createElement("base"),v.href=c.location.href,m.head.appendChild(v)):m=c),f=d.exec(u),h=!o&&[],f?[m.createElement(f[1])]:(f=a([u],m,h),h&&h.length&&n(h).remove(),n.merge([],f.childNodes))},n.parseHTML}.apply(g,p),s!==void 0&&(w.exports=s)},3857:(w,g,r)=>{var p,s;p=[r(3663)],s=function(n){"use strict";return n.parseXML=function(c){var d,a;if(!c||typeof c!="string")return null;try{d=new window.DOMParser().parseFromString(c,"text/xml")}catch(i){}return a=d&&d.getElementsByTagName("parsererror")[0],(!d||a)&&n.error("Invalid XML: "+(a?n.map(a.childNodes,function(i){return i.textContent}).join(`
`):c)),d},n.parseXML}.apply(g,p),s!==void 0&&(w.exports=s)},130:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(781),r(1768)],s=function(n,c){"use strict";var d=n.Deferred();n.fn.ready=function(i){return d.then(i).catch(function(u){n.readyException(u)}),this},n.extend({isReady:!1,readyWait:1,ready:function(i){(i===!0?--n.readyWait:n.isReady)||(n.isReady=!0,!(i!==!0&&--n.readyWait>0)&&d.resolveWith(c,[n]))}}),n.ready.then=d.then;function a(){c.removeEventListener("DOMContentLoaded",a),window.removeEventListener("load",a),n.ready()}c.readyState==="complete"||c.readyState!=="loading"&&!c.documentElement.doScroll?window.setTimeout(n.ready):(c.addEventListener("DOMContentLoaded",a),window.addEventListener("load",a))}.apply(g,p),s!==void 0&&(w.exports=s)},781:(w,g,r)=>{var p,s;p=[r(3663)],s=function(n){"use strict";n.readyException=function(c){window.setTimeout(function(){throw c})}}.apply(g,p),s!==void 0&&(w.exports=s)},5546:(w,g,r)=>{var p,s;p=[r(5134)],s=function(n){"use strict";function c(d){var a=d.match(n)||[];return a.join(" ")}return c}.apply(g,p),s!==void 0&&(w.exports=s)},5141:(w,g,r)=>{var p,s;p=[r(3993),r(6459)],s=function(n,c){"use strict";return c.createHTMLDocument=function(){var d=n.implementation.createHTMLDocument("").body;return d.innerHTML="<form></form><form></form>",d.childNodes.length===2}(),c}.apply(g,p),s!==void 0&&(w.exports=s)},3498:(w,g,r)=>{var p,s;p=[r(3278),r(6541)],s=function(n,c){"use strict";function d(a){return a==null?a+"":typeof a=="object"||typeof a=="function"?n[c.call(a)]||"object":typeof a}return d}.apply(g,p),s!==void 0&&(w.exports=s)},9834:(w,g,r)=>{var p;p=function(){"use strict";return/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i}.call(g,r,g,w),p!==void 0&&(w.exports=p)},1703:(w,g,r)=>{var p,s;p=[r(3663),r(8074),r(8826),r(4622),r(9482),r(9807),r(8809),r(1843),r(1819),r(7122),r(8930),r(2942),r(6491),r(5789),r(2465),r(1848),r(130),r(3054)],s=function(n,c,d,a,i,u,m,o,v,f,h,T,y,b,_){"use strict";var D=/^(none|table(?!-c[ea]).+)/,O={position:"absolute",visibility:"hidden",display:"block"},S={letterSpacing:"0",fontWeight:"400"};function A(E,x,P){var F=i.exec(x);return F?Math.max(0,F[2]-(P||0))+(F[3]||"px"):x}function k(E,x,P,F,q,W){var M=x==="width"?1:0,$=0,H=0,Z=0;if(P===(F?"border":"content"))return 0;for(;M<4;M+=2)P==="margin"&&(Z+=n.css(E,P+o[M],!0,q)),F?(P==="content"&&(H-=n.css(E,"padding"+o[M],!0,q)),P!=="margin"&&(H-=n.css(E,"border"+o[M]+"Width",!0,q))):(H+=n.css(E,"padding"+o[M],!0,q),P!=="padding"?H+=n.css(E,"border"+o[M]+"Width",!0,q):$+=n.css(E,"border"+o[M]+"Width",!0,q));return!F&&W>=0&&(H+=Math.max(0,Math.ceil(E["offset"+x[0].toUpperCase()+x.slice(1)]-W-H-$-.5))||0),H+Z}function I(E,x,P){var F=v(E),q=!b.boxSizingReliable()||P,W=q&&n.css(E,"boxSizing",!1,F)==="border-box",M=W,$=h(E,x,F),H="offset"+x[0].toUpperCase()+x.slice(1);if(u.test($)){if(!P)return $;$="auto"}return(!b.boxSizingReliable()&&W||!b.reliableTrDimensions()&&a(E,"tr")||$==="auto"||!parseFloat($)&&n.css(E,"display",!1,F)==="inline")&&E.getClientRects().length&&(W=n.css(E,"boxSizing",!1,F)==="border-box",M=H in E,M&&($=E[H])),$=parseFloat($)||0,$+k(E,x,P||(W?"border":"content"),M,F,$)+"px"}return n.extend({cssHooks:{opacity:{get:function(E,x){if(x){var P=h(E,"opacity");return P===""?"1":P}}}},cssNumber:{animationIterationCount:!0,aspectRatio:!0,borderImageSlice:!0,columnCount:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,scale:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeMiterlimit:!0,strokeOpacity:!0},cssProps:{},style:function(E,x,P,F){if(!(!E||E.nodeType===3||E.nodeType===8||!E.style)){var q,W,M,$=d(x),H=m.test(x),Z=E.style;if(H||(x=_($)),M=n.cssHooks[x]||n.cssHooks[$],P!==void 0){if(W=typeof P,W==="string"&&(q=i.exec(P))&&q[1]&&(P=T(E,x,q),W="number"),P==null||P!==P)return;W==="number"&&!H&&(P+=q&&q[3]||(n.cssNumber[$]?"":"px")),!b.clearCloneStyle&&P===""&&x.indexOf("background")===0&&(Z[x]="inherit"),(!M||!("set"in M)||(P=M.set(E,P,F))!==void 0)&&(H?Z.setProperty(x,P):Z[x]=P)}else return M&&"get"in M&&(q=M.get(E,!1,F))!==void 0?q:Z[x]}},css:function(E,x,P,F){var q,W,M,$=d(x),H=m.test(x);return H||(x=_($)),M=n.cssHooks[x]||n.cssHooks[$],M&&"get"in M&&(q=M.get(E,!0,P)),q===void 0&&(q=h(E,x,F)),q==="normal"&&x in S&&(q=S[x]),P===""||P?(W=parseFloat(q),P===!0||isFinite(W)?W||0:q):q}}),n.each(["height","width"],function(E,x){n.cssHooks[x]={get:function(P,F,q){if(F)return D.test(n.css(P,"display"))&&(!P.getClientRects().length||!P.getBoundingClientRect().width)?f(P,O,function(){return I(P,x,q)}):I(P,x,q)},set:function(P,F,q){var W,M=v(P),$=!b.scrollboxSize()&&M.position==="absolute",H=$||q,Z=H&&n.css(P,"boxSizing",!1,M)==="border-box",G=q?k(P,x,q,Z,M):0;return Z&&$&&(G-=Math.ceil(P["offset"+x[0].toUpperCase()+x.slice(1)]-parseFloat(M[x])-k(P,x,"border",!1,M)-.5)),G&&(W=i.exec(F))&&(W[3]||"px")!=="px"&&(P.style[x]=F,F=n.css(P,x)),A(P,F,G)}}}),n.cssHooks.marginLeft=y(b.reliableMarginLeft,function(E,x){if(x)return(parseFloat(h(E,"marginLeft"))||E.getBoundingClientRect().left-f(E,{marginLeft:0},function(){return E.getBoundingClientRect().left}))+"px"}),n.each({margin:"",padding:"",border:"Width"},function(E,x){n.cssHooks[E+x]={expand:function(P){for(var F=0,q={},W=typeof P=="string"?P.split(" "):[P];F<4;F++)q[E+o[F]+x]=W[F]||W[F-2]||W[0];return q}},E!=="margin"&&(n.cssHooks[E+x].set=A)}),n.fn.extend({css:function(E,x){return c(this,function(P,F,q){var W,M,$={},H=0;if(Array.isArray(F)){for(W=v(P),M=F.length;H<M;H++)$[F[H]]=n.css(P,F[H],!1,W);return $}return q!==void 0?n.style(P,F,q):n.css(P,F)},E,x,arguments.length>1)}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},6491:(w,g,r)=>{var p;p=function(){"use strict";function s(n,c){return{get:function(){if(n()){delete this.get;return}return(this.get=c).apply(this,arguments)}}}return s}.call(g,r,g,w),p!==void 0&&(w.exports=p)},2942:(w,g,r)=>{var p,s;p=[r(3663),r(9482)],s=function(n,c){"use strict";function d(a,i,u,m){var o,v,f=20,h=m?function(){return m.cur()}:function(){return n.css(a,i,"")},T=h(),y=u&&u[3]||(n.cssNumber[i]?"":"px"),b=a.nodeType&&(n.cssNumber[i]||y!=="px"&&+T)&&c.exec(n.css(a,i));if(b&&b[3]!==y){for(T=T/2,y=y||b[3],b=+T||1;f--;)n.style(a,i,b+y),(1-v)*(1-(v=h()/T||.5))<=0&&(f=0),b=b/v;b=b*2,n.style(a,i,b+y),u=u||[]}return u&&(b=+b||+T||0,o=u[1]?b+(u[1]+1)*u[2]:+u[2],m&&(m.unit=y,m.start=b,m.end=o)),o}return d}.apply(g,p),s!==void 0&&(w.exports=s)},8930:(w,g,r)=>{var p,s;p=[r(3663),r(911),r(8096),r(9807),r(1819),r(8809),r(3066),r(5789)],s=function(n,c,d,a,i,u,m,o){"use strict";function v(f,h,T){var y,b,_,D,O=u.test(h),S=f.style;return T=T||i(f),T&&(D=T.getPropertyValue(h)||T[h],O&&D&&(D=D.replace(m,"$1")||void 0),D===""&&!c(f)&&(D=n.style(f,h)),!o.pixelBoxStyles()&&a.test(D)&&d.test(h)&&(y=S.width,b=S.minWidth,_=S.maxWidth,S.minWidth=S.maxWidth=S.width=D,D=T.width,S.width=y,S.minWidth=b,S.maxWidth=_)),D!==void 0?D+"":D}return v}.apply(g,p),s!==void 0&&(w.exports=s)},2465:(w,g,r)=>{var p,s;p=[r(3993),r(3663)],s=function(n,c){"use strict";var d=["Webkit","Moz","ms"],a=n.createElement("div").style,i={};function u(o){for(var v=o[0].toUpperCase()+o.slice(1),f=d.length;f--;)if(o=d[f]+v,o in a)return o}function m(o){var v=c.cssProps[o]||i[o];return v||(o in a?o:i[o]=u(o)||o)}return m}.apply(g,p),s!==void 0&&(w.exports=s)},9304:(w,g,r)=>{var p,s;p=[r(3663),r(3054)],s=function(n){"use strict";n.expr.pseudos.hidden=function(c){return!n.expr.pseudos.visible(c)},n.expr.pseudos.visible=function(c){return!!(c.offsetWidth||c.offsetHeight||c.getClientRects().length)}}.apply(g,p),s!==void 0&&(w.exports=s)},7517:(w,g,r)=>{var p,s;p=[r(3663),r(8813),r(6455)],s=function(n,c,d){"use strict";var a={};function i(m){var o,v=m.ownerDocument,f=m.nodeName,h=a[f];return h||(o=v.body.appendChild(v.createElement(f)),h=n.css(o,"display"),o.parentNode.removeChild(o),h==="none"&&(h="block"),a[f]=h,h)}function u(m,o){for(var v,f,h=[],T=0,y=m.length;T<y;T++)f=m[T],f.style&&(v=f.style.display,o?(v==="none"&&(h[T]=c.get(f,"display")||null,h[T]||(f.style.display="")),f.style.display===""&&d(f)&&(h[T]=i(f))):v!=="none"&&(h[T]="none",c.set(f,"display",v)));for(T=0;T<y;T++)h[T]!=null&&(m[T].style.display=h[T]);return m}return n.fn.extend({show:function(){return u(this,!0)},hide:function(){return u(this)},toggle:function(m){return typeof m=="boolean"?m?this.show():this.hide():this.each(function(){d(this)?n(this).show():n(this).hide()})}}),u}.apply(g,p),s!==void 0&&(w.exports=s)},5789:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(8448),r(6459)],s=function(n,c,d,a){"use strict";return function(){function i(){if(b){y.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",b.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",d.appendChild(y).appendChild(b);var _=window.getComputedStyle(b);m=_.top!=="1%",T=u(_.marginLeft)===12,b.style.right="60%",f=u(_.right)===36,o=u(_.width)===36,b.style.position="absolute",v=u(b.offsetWidth/3)===12,d.removeChild(y),b=null}}function u(_){return Math.round(parseFloat(_))}var m,o,v,f,h,T,y=c.createElement("div"),b=c.createElement("div");b.style&&(b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",a.clearCloneStyle=b.style.backgroundClip==="content-box",n.extend(a,{boxSizingReliable:function(){return i(),o},pixelBoxStyles:function(){return i(),f},pixelPosition:function(){return i(),m},reliableMarginLeft:function(){return i(),T},scrollboxSize:function(){return i(),v},reliableTrDimensions:function(){var _,D,O,S;return h==null&&(_=c.createElement("table"),D=c.createElement("tr"),O=c.createElement("div"),_.style.cssText="position:absolute;left:-11111px;border-collapse:separate",D.style.cssText="box-sizing:content-box;border:1px solid",D.style.height="1px",O.style.height="9px",O.style.display="block",d.appendChild(_).appendChild(D).appendChild(O),S=window.getComputedStyle(D),h=parseInt(S.height,10)+parseInt(S.borderTopWidth,10)+parseInt(S.borderBottomWidth,10)===D.offsetHeight,d.removeChild(_)),h}}))}(),a}.apply(g,p),s!==void 0&&(w.exports=s)},1843:(w,g,r)=>{var p;p=function(){"use strict";return["Top","Right","Bottom","Left"]}.call(g,r,g,w),p!==void 0&&(w.exports=p)},1819:(w,g,r)=>{var p;p=function(){"use strict";return function(s){var n=s.ownerDocument.defaultView;return(!n||!n.opener)&&(n=window),n.getComputedStyle(s)}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},6455:(w,g,r)=>{var p,s;p=[r(3663),r(911)],s=function(n,c){"use strict";return function(d,a){return d=a||d,d.style.display==="none"||d.style.display===""&&c(d)&&n.css(d,"display")==="none"}}.apply(g,p),s!==void 0&&(w.exports=s)},8096:(w,g,r)=>{var p,s;p=[r(1843)],s=function(n){"use strict";return new RegExp(n.join("|"),"i")}.apply(g,p),s!==void 0&&(w.exports=s)},8809:(w,g,r)=>{var p;p=function(){"use strict";return/^--/}.call(g,r,g,w),p!==void 0&&(w.exports=p)},9807:(w,g,r)=>{var p,s;p=[r(7973)],s=function(n){"use strict";return new RegExp("^("+n+")(?!px)[a-z%]+$","i")}.apply(g,p),s!==void 0&&(w.exports=s)},7122:(w,g,r)=>{var p;p=function(){"use strict";return function(s,n,c){var d,a,i={};for(a in n)i[a]=s.style[a],s.style[a]=n[a];d=c.call(s);for(a in n)s.style[a]=i[a];return d}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},1040:(w,g,r)=>{var p,s;p=[r(3663),r(8074),r(8826),r(8813),r(5171)],s=function(n,c,d,a,i){"use strict";var u=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,m=/[A-Z]/g;function o(f){return f==="true"?!0:f==="false"?!1:f==="null"?null:f===+f+""?+f:u.test(f)?JSON.parse(f):f}function v(f,h,T){var y;if(T===void 0&&f.nodeType===1)if(y="data-"+h.replace(m,"-$&").toLowerCase(),T=f.getAttribute(y),typeof T=="string"){try{T=o(T)}catch(b){}i.set(f,h,T)}else T=void 0;return T}return n.extend({hasData:function(f){return i.hasData(f)||a.hasData(f)},data:function(f,h,T){return i.access(f,h,T)},removeData:function(f,h){i.remove(f,h)},_data:function(f,h,T){return a.access(f,h,T)},_removeData:function(f,h){a.remove(f,h)}}),n.fn.extend({data:function(f,h){var T,y,b,_=this[0],D=_&&_.attributes;if(f===void 0){if(this.length&&(b=i.get(_),_.nodeType===1&&!a.get(_,"hasDataAttrs"))){for(T=D.length;T--;)D[T]&&(y=D[T].name,y.indexOf("data-")===0&&(y=d(y.slice(5)),v(_,y,b[y])));a.set(_,"hasDataAttrs",!0)}return b}return typeof f=="object"?this.each(function(){i.set(this,f)}):c(this,function(O){var S;if(_&&O===void 0)return S=i.get(_,f),S!==void 0||(S=v(_,f),S!==void 0)?S:void 0;this.each(function(){i.set(this,f,O)})},null,h,arguments.length>1,null,!0)},removeData:function(f){return this.each(function(){i.remove(this,f)})}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},1760:(w,g,r)=>{var p,s;p=[r(3663),r(8826),r(5134),r(498)],s=function(n,c,d,a){"use strict";function i(){this.expando=n.expando+i.uid++}return i.uid=1,i.prototype={cache:function(u){var m=u[this.expando];return m||(m={},a(u)&&(u.nodeType?u[this.expando]=m:Object.defineProperty(u,this.expando,{value:m,configurable:!0}))),m},set:function(u,m,o){var v,f=this.cache(u);if(typeof m=="string")f[c(m)]=o;else for(v in m)f[c(v)]=m[v];return f},get:function(u,m){return m===void 0?this.cache(u):u[this.expando]&&u[this.expando][c(m)]},access:function(u,m,o){return m===void 0||m&&typeof m=="string"&&o===void 0?this.get(u,m):(this.set(u,m,o),o!==void 0?o:m)},remove:function(u,m){var o,v=u[this.expando];if(v!==void 0){if(m!==void 0)for(Array.isArray(m)?m=m.map(c):(m=c(m),m=m in v?[m]:m.match(d)||[]),o=m.length;o--;)delete v[m[o]];(m===void 0||n.isEmptyObject(v))&&(u.nodeType?u[this.expando]=void 0:delete u[this.expando])}},hasData:function(u){var m=u[this.expando];return m!==void 0&&!n.isEmptyObject(m)}},i}.apply(g,p),s!==void 0&&(w.exports=s)},498:(w,g,r)=>{var p;p=function(){"use strict";return function(s){return s.nodeType===1||s.nodeType===9||!+s.nodeType}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},8813:(w,g,r)=>{var p,s;p=[r(1760)],s=function(n){"use strict";return new n}.apply(g,p),s!==void 0&&(w.exports=s)},5171:(w,g,r)=>{var p,s;p=[r(1760)],s=function(n){"use strict";return new n}.apply(g,p),s!==void 0&&(w.exports=s)},1768:(w,g,r)=>{var p,s;p=[r(3663),r(5300),r(6397),r(4462)],s=function(n,c,d){"use strict";function a(m){return m}function i(m){throw m}function u(m,o,v,f){var h;try{m&&c(h=m.promise)?h.call(m).done(o).fail(v):m&&c(h=m.then)?h.call(m,o,v):o.apply(void 0,[m].slice(f))}catch(T){v.apply(void 0,[T])}}return n.extend({Deferred:function(m){var o=[["notify","progress",n.Callbacks("memory"),n.Callbacks("memory"),2],["resolve","done",n.Callbacks("once memory"),n.Callbacks("once memory"),0,"resolved"],["reject","fail",n.Callbacks("once memory"),n.Callbacks("once memory"),1,"rejected"]],v="pending",f={state:function(){return v},always:function(){return h.done(arguments).fail(arguments),this},catch:function(T){return f.then(null,T)},pipe:function(){var T=arguments;return n.Deferred(function(y){n.each(o,function(b,_){var D=c(T[_[4]])&&T[_[4]];h[_[1]](function(){var O=D&&D.apply(this,arguments);O&&c(O.promise)?O.promise().progress(y.notify).done(y.resolve).fail(y.reject):y[_[0]+"With"](this,D?[O]:arguments)})}),T=null}).promise()},then:function(T,y,b){var _=0;function D(O,S,A,k){return function(){var I=this,E=arguments,x=function(){var F,q;if(!(O<_)){if(F=A.apply(I,E),F===S.promise())throw new TypeError("Thenable self-resolution");q=F&&(typeof F=="object"||typeof F=="function")&&F.then,c(q)?k?q.call(F,D(_,S,a,k),D(_,S,i,k)):(_++,q.call(F,D(_,S,a,k),D(_,S,i,k),D(_,S,a,S.notifyWith))):(A!==a&&(I=void 0,E=[F]),(k||S.resolveWith)(I,E))}},P=k?x:function(){try{x()}catch(F){n.Deferred.exceptionHook&&n.Deferred.exceptionHook(F,P.error),O+1>=_&&(A!==i&&(I=void 0,E=[F]),S.rejectWith(I,E))}};O?P():(n.Deferred.getErrorHook?P.error=n.Deferred.getErrorHook():n.Deferred.getStackHook&&(P.error=n.Deferred.getStackHook()),window.setTimeout(P))}}return n.Deferred(function(O){o[0][3].add(D(0,O,c(b)?b:a,O.notifyWith)),o[1][3].add(D(0,O,c(T)?T:a)),o[2][3].add(D(0,O,c(y)?y:i))}).promise()},promise:function(T){return T!=null?n.extend(T,f):f}},h={};return n.each(o,function(T,y){var b=y[2],_=y[5];f[y[1]]=b.add,_&&b.add(function(){v=_},o[3-T][2].disable,o[3-T][3].disable,o[0][2].lock,o[0][3].lock),b.add(y[3].fire),h[y[0]]=function(){return h[y[0]+"With"](this===h?void 0:this,arguments),this},h[y[0]+"With"]=b.fireWith}),f.promise(h),m&&m.call(h,h),h},when:function(m){var o=arguments.length,v=o,f=Array(v),h=d.call(arguments),T=n.Deferred(),y=function(b){return function(_){f[b]=this,h[b]=arguments.length>1?d.call(arguments):_,--o||T.resolveWith(f,h)}};if(o<=1&&(u(m,T.done(y(v)).resolve,T.reject,!o),T.state()==="pending"||c(h[v]&&h[v].then)))return T.then();for(;v--;)u(h[v],y(v),T.reject);return T.promise()}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},8557:(w,g,r)=>{var p,s;p=[r(3663),r(1768)],s=function(n){"use strict";var c=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;n.Deferred.exceptionHook=function(d,a){window.console&&window.console.warn&&d&&c.test(d.name)&&window.console.warn("jQuery.Deferred exception: "+d.message,d.stack,a)}}.apply(g,p),s!==void 0&&(w.exports=s)},1098:(w,g,r)=>{var p,s;p=[r(3663),r(4622),r(8826),r(3498),r(5300),r(7114),r(6397),r(7604),r(8360)],s=function(n,c,d,a,i,u,m){"use strict";var o=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;n.proxy=function(v,f){var h,T,y;if(typeof f=="string"&&(h=v[f],f=v,v=h),!!i(v))return T=m.call(arguments,2),y=function(){return v.apply(f||this,T.concat(m.call(arguments)))},y.guid=v.guid=v.guid||n.guid++,y},n.holdReady=function(v){v?n.readyWait++:n.ready(!0)},n.isArray=Array.isArray,n.parseJSON=JSON.parse,n.nodeName=c,n.isFunction=i,n.isWindow=u,n.camelCase=d,n.type=a,n.now=Date.now,n.isNumeric=function(v){var f=n.type(v);return(f==="number"||f==="string")&&!isNaN(v-parseFloat(v))},n.trim=function(v){return v==null?"":(v+"").replace(o,"$1")}}.apply(g,p),s!==void 0&&(w.exports=s)},7604:(w,g,r)=>{var p,s;p=[r(3663),r(8377),r(3530)],s=function(n){"use strict";n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(c,d){n.fn[d]=function(a){return this.on(d,a)}})}.apply(g,p),s!==void 0&&(w.exports=s)},8360:(w,g,r)=>{var p,s;p=[r(3663),r(3530),r(7847)],s=function(n){"use strict";n.fn.extend({bind:function(c,d,a){return this.on(c,null,d,a)},unbind:function(c,d){return this.off(c,null,d)},delegate:function(c,d,a,i){return this.on(d,c,a,i)},undelegate:function(c,d,a){return arguments.length===1?this.off(c,"**"):this.off(d,c||"**",a)},hover:function(c,d){return this.on("mouseenter",c).on("mouseleave",d||c)}}),n.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(c,d){n.fn[d]=function(a,i){return arguments.length>0?this.on(d,null,a,i):this.trigger(d)}})}.apply(g,p),s!==void 0&&(w.exports=s)},2473:(w,g,r)=>{var p,s;p=[r(3663),r(8074),r(7114),r(1703)],s=function(n,c,d){"use strict";return n.each({Height:"height",Width:"width"},function(a,i){n.each({padding:"inner"+a,content:i,"":"outer"+a},function(u,m){n.fn[m]=function(o,v){var f=arguments.length&&(u||typeof o!="boolean"),h=u||(o===!0||v===!0?"margin":"border");return c(this,function(T,y,b){var _;return d(T)?m.indexOf("outer")===0?T["inner"+a]:T.document.documentElement["client"+a]:T.nodeType===9?(_=T.documentElement,Math.max(T.body["scroll"+a],_["scroll"+a],T.body["offset"+a],_["offset"+a],_["client"+a])):b===void 0?n.css(T,y,h):n.style(T,y,b,h)},i,f?o:void 0,f)}})}),n}.apply(g,p),s!==void 0&&(w.exports=s)},1474:(w,g,r)=>{var p,s;p=[r(3663),r(8826),r(3993),r(5300),r(9482),r(5134),r(1843),r(6455),r(2942),r(8813),r(7517),r(1848),r(6493),r(1768),r(5323),r(9199),r(1703),r(858)],s=function(n,c,d,a,i,u,m,o,v,f,h){"use strict";var T,y,b=/^(?:toggle|show|hide)$/,_=/queueHooks$/;function D(){y&&(d.hidden===!1&&window.requestAnimationFrame?window.requestAnimationFrame(D):window.setTimeout(D,n.fx.interval),n.fx.tick())}function O(){return window.setTimeout(function(){T=void 0}),T=Date.now()}function S(x,P){var F,q=0,W={height:x};for(P=P?1:0;q<4;q+=2-P)F=m[q],W["margin"+F]=W["padding"+F]=x;return P&&(W.opacity=W.width=x),W}function A(x,P,F){for(var q,W=(E.tweeners[P]||[]).concat(E.tweeners["*"]),M=0,$=W.length;M<$;M++)if(q=W[M].call(F,P,x))return q}function k(x,P,F){var q,W,M,$,H,Z,G,tt,it="width"in P||"height"in P,lt=this,Y={},bt=x.style,St=x.nodeType&&o(x),xt=f.get(x,"fxshow");F.queue||($=n._queueHooks(x,"fx"),$.unqueued==null&&($.unqueued=0,H=$.empty.fire,$.empty.fire=function(){$.unqueued||H()}),$.unqueued++,lt.always(function(){lt.always(function(){$.unqueued--,n.queue(x,"fx").length||$.empty.fire()})}));for(q in P)if(W=P[q],b.test(W)){if(delete P[q],M=M||W==="toggle",W===(St?"hide":"show"))if(W==="show"&&xt&&xt[q]!==void 0)St=!0;else continue;Y[q]=xt&&xt[q]||n.style(x,q)}if(Z=!n.isEmptyObject(P),!(!Z&&n.isEmptyObject(Y))){it&&x.nodeType===1&&(F.overflow=[bt.overflow,bt.overflowX,bt.overflowY],G=xt&&xt.display,G==null&&(G=f.get(x,"display")),tt=n.css(x,"display"),tt==="none"&&(G?tt=G:(h([x],!0),G=x.style.display||G,tt=n.css(x,"display"),h([x]))),(tt==="inline"||tt==="inline-block"&&G!=null)&&n.css(x,"float")==="none"&&(Z||(lt.done(function(){bt.display=G}),G==null&&(tt=bt.display,G=tt==="none"?"":tt)),bt.display="inline-block")),F.overflow&&(bt.overflow="hidden",lt.always(function(){bt.overflow=F.overflow[0],bt.overflowX=F.overflow[1],bt.overflowY=F.overflow[2]})),Z=!1;for(q in Y)Z||(xt?"hidden"in xt&&(St=xt.hidden):xt=f.access(x,"fxshow",{display:G}),M&&(xt.hidden=!St),St&&h([x],!0),lt.done(function(){St||h([x]),f.remove(x,"fxshow");for(q in Y)n.style(x,q,Y[q])})),Z=A(St?xt[q]:0,q,lt),q in xt||(xt[q]=Z.start,St&&(Z.end=Z.start,Z.start=0))}}function I(x,P){var F,q,W,M,$;for(F in x)if(q=c(F),W=P[q],M=x[F],Array.isArray(M)&&(W=M[1],M=x[F]=M[0]),F!==q&&(x[q]=M,delete x[F]),$=n.cssHooks[q],$&&"expand"in $){M=$.expand(M),delete x[q];for(F in M)F in x||(x[F]=M[F],P[F]=W)}else P[q]=W}function E(x,P,F){var q,W,M=0,$=E.prefilters.length,H=n.Deferred().always(function(){delete Z.elem}),Z=function(){if(W)return!1;for(var it=T||O(),lt=Math.max(0,G.startTime+G.duration-it),Y=lt/G.duration||0,bt=1-Y,St=0,xt=G.tweens.length;St<xt;St++)G.tweens[St].run(bt);return H.notifyWith(x,[G,bt,lt]),bt<1&&xt?lt:(xt||H.notifyWith(x,[G,1,0]),H.resolveWith(x,[G]),!1)},G=H.promise({elem:x,props:n.extend({},P),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},F),originalProperties:P,originalOptions:F,startTime:T||O(),duration:F.duration,tweens:[],createTween:function(it,lt){var Y=n.Tween(x,G.opts,it,lt,G.opts.specialEasing[it]||G.opts.easing);return G.tweens.push(Y),Y},stop:function(it){var lt=0,Y=it?G.tweens.length:0;if(W)return this;for(W=!0;lt<Y;lt++)G.tweens[lt].run(1);return it?(H.notifyWith(x,[G,1,0]),H.resolveWith(x,[G,it])):H.rejectWith(x,[G,it]),this}}),tt=G.props;for(I(tt,G.opts.specialEasing);M<$;M++)if(q=E.prefilters[M].call(G,x,tt,G.opts),q)return a(q.stop)&&(n._queueHooks(G.elem,G.opts.queue).stop=q.stop.bind(q)),q;return n.map(tt,A,G),a(G.opts.start)&&G.opts.start.call(x,G),G.progress(G.opts.progress).done(G.opts.done,G.opts.complete).fail(G.opts.fail).always(G.opts.always),n.fx.timer(n.extend(Z,{elem:x,anim:G,queue:G.opts.queue})),G}return n.Animation=n.extend(E,{tweeners:{"*":[function(x,P){var F=this.createTween(x,P);return v(F.elem,x,i.exec(P),F),F}]},tweener:function(x,P){a(x)?(P=x,x=["*"]):x=x.match(u);for(var F,q=0,W=x.length;q<W;q++)F=x[q],E.tweeners[F]=E.tweeners[F]||[],E.tweeners[F].unshift(P)},prefilters:[k],prefilter:function(x,P){P?E.prefilters.unshift(x):E.prefilters.push(x)}}),n.speed=function(x,P,F){var q=x&&typeof x=="object"?n.extend({},x):{complete:F||!F&&P||a(x)&&x,duration:x,easing:F&&P||P&&!a(P)&&P};return n.fx.off?q.duration=0:typeof q.duration!="number"&&(q.duration in n.fx.speeds?q.duration=n.fx.speeds[q.duration]:q.duration=n.fx.speeds._default),(q.queue==null||q.queue===!0)&&(q.queue="fx"),q.old=q.complete,q.complete=function(){a(q.old)&&q.old.call(this),q.queue&&n.dequeue(this,q.queue)},q},n.fn.extend({fadeTo:function(x,P,F,q){return this.filter(o).css("opacity",0).show().end().animate({opacity:P},x,F,q)},animate:function(x,P,F,q){var W=n.isEmptyObject(x),M=n.speed(P,F,q),$=function(){var H=E(this,n.extend({},x),M);(W||f.get(this,"finish"))&&H.stop(!0)};return $.finish=$,W||M.queue===!1?this.each($):this.queue(M.queue,$)},stop:function(x,P,F){var q=function(W){var M=W.stop;delete W.stop,M(F)};return typeof x!="string"&&(F=P,P=x,x=void 0),P&&this.queue(x||"fx",[]),this.each(function(){var W=!0,M=x!=null&&x+"queueHooks",$=n.timers,H=f.get(this);if(M)H[M]&&H[M].stop&&q(H[M]);else for(M in H)H[M]&&H[M].stop&&_.test(M)&&q(H[M]);for(M=$.length;M--;)$[M].elem===this&&(x==null||$[M].queue===x)&&($[M].anim.stop(F),W=!1,$.splice(M,1));(W||!F)&&n.dequeue(this,x)})},finish:function(x){return x!==!1&&(x=x||"fx"),this.each(function(){var P,F=f.get(this),q=F[x+"queue"],W=F[x+"queueHooks"],M=n.timers,$=q?q.length:0;for(F.finish=!0,n.queue(this,x,[]),W&&W.stop&&W.stop.call(this,!0),P=M.length;P--;)M[P].elem===this&&M[P].queue===x&&(M[P].anim.stop(!0),M.splice(P,1));for(P=0;P<$;P++)q[P]&&q[P].finish&&q[P].finish.call(this);delete F.finish})}}),n.each(["toggle","show","hide"],function(x,P){var F=n.fn[P];n.fn[P]=function(q,W,M){return q==null||typeof q=="boolean"?F.apply(this,arguments):this.animate(S(P,!0),q,W,M)}}),n.each({slideDown:S("show"),slideUp:S("hide"),slideToggle:S("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(x,P){n.fn[x]=function(F,q,W){return this.animate(P,F,q,W)}}),n.timers=[],n.fx.tick=function(){var x,P=0,F=n.timers;for(T=Date.now();P<F.length;P++)x=F[P],!x()&&F[P]===x&&F.splice(P--,1);F.length||n.fx.stop(),T=void 0},n.fx.timer=function(x){n.timers.push(x),n.fx.start()},n.fx.interval=13,n.fx.start=function(){y||(y=!0,D())},n.fx.stop=function(){y=null},n.fx.speeds={slow:600,fast:200,_default:400},n}.apply(g,p),s!==void 0&&(w.exports=s)},858:(w,g,r)=>{var p,s;p=[r(3663),r(2465),r(1703)],s=function(n,c){"use strict";function d(a,i,u,m,o){return new d.prototype.init(a,i,u,m,o)}n.Tween=d,d.prototype={constructor:d,init:function(a,i,u,m,o,v){this.elem=a,this.prop=u,this.easing=o||n.easing._default,this.options=i,this.start=this.now=this.cur(),this.end=m,this.unit=v||(n.cssNumber[u]?"":"px")},cur:function(){var a=d.propHooks[this.prop];return a&&a.get?a.get(this):d.propHooks._default.get(this)},run:function(a){var i,u=d.propHooks[this.prop];return this.options.duration?this.pos=i=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=i=a,this.now=(this.end-this.start)*i+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),u&&u.set?u.set(this):d.propHooks._default.set(this),this}},d.prototype.init.prototype=d.prototype,d.propHooks={_default:{get:function(a){var i;return a.elem.nodeType!==1||a.elem[a.prop]!=null&&a.elem.style[a.prop]==null?a.elem[a.prop]:(i=n.css(a.elem,a.prop,""),!i||i==="auto"?0:i)},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.nodeType===1&&(n.cssHooks[a.prop]||a.elem.style[c(a.prop)]!=null)?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},d.propHooks.scrollTop=d.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return .5-Math.cos(a*Math.PI)/2},_default:"swing"},n.fx=d.prototype.init,n.fx.step={}}.apply(g,p),s!==void 0&&(w.exports=s)},3316:(w,g,r)=>{var p,s;p=[r(3663),r(3054),r(1474)],s=function(n){"use strict";n.expr.pseudos.animated=function(c){return n.grep(n.timers,function(d){return c===d.elem}).length}}.apply(g,p),s!==void 0&&(w.exports=s)},3530:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(8448),r(5300),r(5134),r(3306),r(6397),r(498),r(8813),r(4622),r(1848),r(3054)],s=function(n,c,d,a,i,u,m,o,v,f){"use strict";var h=/^([^.]*)(?:\.(.+)|)/;function T(){return!0}function y(){return!1}function b(D,O,S,A,k,I){var E,x;if(typeof O=="object"){typeof S!="string"&&(A=A||S,S=void 0);for(x in O)b(D,x,S,A,O[x],I);return D}if(A==null&&k==null?(k=S,A=S=void 0):k==null&&(typeof S=="string"?(k=A,A=void 0):(k=A,A=S,S=void 0)),k===!1)k=y;else if(!k)return D;return I===1&&(E=k,k=function(P){return n().off(P),E.apply(this,arguments)},k.guid=E.guid||(E.guid=n.guid++)),D.each(function(){n.event.add(this,O,k,A,S)})}n.event={global:{},add:function(D,O,S,A,k){var I,E,x,P,F,q,W,M,$,H,Z,G=v.get(D);if(o(D))for(S.handler&&(I=S,S=I.handler,k=I.selector),k&&n.find.matchesSelector(d,k),S.guid||(S.guid=n.guid++),(P=G.events)||(P=G.events=Object.create(null)),(E=G.handle)||(E=G.handle=function(tt){return typeof n!="undefined"&&n.event.triggered!==tt.type?n.event.dispatch.apply(D,arguments):void 0}),O=(O||"").match(i)||[""],F=O.length;F--;)x=h.exec(O[F])||[],$=Z=x[1],H=(x[2]||"").split(".").sort(),$&&(W=n.event.special[$]||{},$=(k?W.delegateType:W.bindType)||$,W=n.event.special[$]||{},q=n.extend({type:$,origType:Z,data:A,handler:S,guid:S.guid,selector:k,needsContext:k&&n.expr.match.needsContext.test(k),namespace:H.join(".")},I),(M=P[$])||(M=P[$]=[],M.delegateCount=0,(!W.setup||W.setup.call(D,A,H,E)===!1)&&D.addEventListener&&D.addEventListener($,E)),W.add&&(W.add.call(D,q),q.handler.guid||(q.handler.guid=S.guid)),k?M.splice(M.delegateCount++,0,q):M.push(q),n.event.global[$]=!0)},remove:function(D,O,S,A,k){var I,E,x,P,F,q,W,M,$,H,Z,G=v.hasData(D)&&v.get(D);if(!(!G||!(P=G.events))){for(O=(O||"").match(i)||[""],F=O.length;F--;){if(x=h.exec(O[F])||[],$=Z=x[1],H=(x[2]||"").split(".").sort(),!$){for($ in P)n.event.remove(D,$+O[F],S,A,!0);continue}for(W=n.event.special[$]||{},$=(A?W.delegateType:W.bindType)||$,M=P[$]||[],x=x[2]&&new RegExp("(^|\\.)"+H.join("\\.(?:.*\\.|)")+"(\\.|$)"),E=I=M.length;I--;)q=M[I],(k||Z===q.origType)&&(!S||S.guid===q.guid)&&(!x||x.test(q.namespace))&&(!A||A===q.selector||A==="**"&&q.selector)&&(M.splice(I,1),q.selector&&M.delegateCount--,W.remove&&W.remove.call(D,q));E&&!M.length&&((!W.teardown||W.teardown.call(D,H,G.handle)===!1)&&n.removeEvent(D,$,G.handle),delete P[$])}n.isEmptyObject(P)&&v.remove(D,"handle events")}},dispatch:function(D){var O,S,A,k,I,E,x=new Array(arguments.length),P=n.event.fix(D),F=(v.get(this,"events")||Object.create(null))[P.type]||[],q=n.event.special[P.type]||{};for(x[0]=P,O=1;O<arguments.length;O++)x[O]=arguments[O];if(P.delegateTarget=this,!(q.preDispatch&&q.preDispatch.call(this,P)===!1)){for(E=n.event.handlers.call(this,P,F),O=0;(k=E[O++])&&!P.isPropagationStopped();)for(P.currentTarget=k.elem,S=0;(I=k.handlers[S++])&&!P.isImmediatePropagationStopped();)(!P.rnamespace||I.namespace===!1||P.rnamespace.test(I.namespace))&&(P.handleObj=I,P.data=I.data,A=((n.event.special[I.origType]||{}).handle||I.handler).apply(k.elem,x),A!==void 0&&(P.result=A)===!1&&(P.preventDefault(),P.stopPropagation()));return q.postDispatch&&q.postDispatch.call(this,P),P.result}},handlers:function(D,O){var S,A,k,I,E,x=[],P=O.delegateCount,F=D.target;if(P&&F.nodeType&&!(D.type==="click"&&D.button>=1)){for(;F!==this;F=F.parentNode||this)if(F.nodeType===1&&!(D.type==="click"&&F.disabled===!0)){for(I=[],E={},S=0;S<P;S++)A=O[S],k=A.selector+" ",E[k]===void 0&&(E[k]=A.needsContext?n(k,this).index(F)>-1:n.find(k,this,null,[F]).length),E[k]&&I.push(A);I.length&&x.push({elem:F,handlers:I})}}return F=this,P<O.length&&x.push({elem:F,handlers:O.slice(P)}),x},addProp:function(D,O){Object.defineProperty(n.Event.prototype,D,{enumerable:!0,configurable:!0,get:a(O)?function(){if(this.originalEvent)return O(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[D]},set:function(S){Object.defineProperty(this,D,{enumerable:!0,configurable:!0,writable:!0,value:S})}})},fix:function(D){return D[n.expando]?D:new n.Event(D)},special:{load:{noBubble:!0},click:{setup:function(D){var O=this||D;return u.test(O.type)&&O.click&&f(O,"input")&&_(O,"click",!0),!1},trigger:function(D){var O=this||D;return u.test(O.type)&&O.click&&f(O,"input")&&_(O,"click"),!0},_default:function(D){var O=D.target;return u.test(O.type)&&O.click&&f(O,"input")&&v.get(O,"click")||f(O,"a")}},beforeunload:{postDispatch:function(D){D.result!==void 0&&D.originalEvent&&(D.originalEvent.returnValue=D.result)}}}};function _(D,O,S){if(!S){v.get(D,O)===void 0&&n.event.add(D,O,T);return}v.set(D,O,!1),n.event.add(D,O,{namespace:!1,handler:function(A){var k,I=v.get(this,O);if(A.isTrigger&1&&this[O]){if(I)(n.event.special[O]||{}).delegateType&&A.stopPropagation();else if(I=m.call(arguments),v.set(this,O,I),this[O](),k=v.get(this,O),v.set(this,O,!1),I!==k)return A.stopImmediatePropagation(),A.preventDefault(),k}else I&&(v.set(this,O,n.event.trigger(I[0],I.slice(1),this)),A.stopPropagation(),A.isImmediatePropagationStopped=T)}})}return n.removeEvent=function(D,O,S){D.removeEventListener&&D.removeEventListener(O,S)},n.Event=function(D,O){if(!(this instanceof n.Event))return new n.Event(D,O);D&&D.type?(this.originalEvent=D,this.type=D.type,this.isDefaultPrevented=D.defaultPrevented||D.defaultPrevented===void 0&&D.returnValue===!1?T:y,this.target=D.target&&D.target.nodeType===3?D.target.parentNode:D.target,this.currentTarget=D.currentTarget,this.relatedTarget=D.relatedTarget):this.type=D,O&&n.extend(this,O),this.timeStamp=D&&D.timeStamp||Date.now(),this[n.expando]=!0},n.Event.prototype={constructor:n.Event,isDefaultPrevented:y,isPropagationStopped:y,isImmediatePropagationStopped:y,isSimulated:!1,preventDefault:function(){var D=this.originalEvent;this.isDefaultPrevented=T,D&&!this.isSimulated&&D.preventDefault()},stopPropagation:function(){var D=this.originalEvent;this.isPropagationStopped=T,D&&!this.isSimulated&&D.stopPropagation()},stopImmediatePropagation:function(){var D=this.originalEvent;this.isImmediatePropagationStopped=T,D&&!this.isSimulated&&D.stopImmediatePropagation(),this.stopPropagation()}},n.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},n.event.addProp),n.each({focus:"focusin",blur:"focusout"},function(D,O){function S(A){if(c.documentMode){var k=v.get(this,"handle"),I=n.event.fix(A);I.type=A.type==="focusin"?"focus":"blur",I.isSimulated=!0,k(A),I.target===I.currentTarget&&k(I)}else n.event.simulate(O,A.target,n.event.fix(A))}n.event.special[D]={setup:function(){var A;if(_(this,D,!0),c.documentMode)A=v.get(this,O),A||this.addEventListener(O,S),v.set(this,O,(A||0)+1);else return!1},trigger:function(){return _(this,D),!0},teardown:function(){var A;if(c.documentMode)A=v.get(this,O)-1,A?v.set(this,O,A):(this.removeEventListener(O,S),v.remove(this,O));else return!1},_default:function(A){return v.get(A.target,D)},delegateType:O},n.event.special[O]={setup:function(){var A=this.ownerDocument||this.document||this,k=c.documentMode?this:A,I=v.get(k,O);I||(c.documentMode?this.addEventListener(O,S):A.addEventListener(D,S,!0)),v.set(k,O,(I||0)+1)},teardown:function(){var A=this.ownerDocument||this.document||this,k=c.documentMode?this:A,I=v.get(k,O)-1;I?v.set(k,O,I):(c.documentMode?this.removeEventListener(O,S):A.removeEventListener(D,S,!0),v.remove(k,O))}}}),n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(D,O){n.event.special[D]={delegateType:O,bindType:O,handle:function(S){var A,k=this,I=S.relatedTarget,E=S.handleObj;return(!I||I!==k&&!n.contains(k,I))&&(S.type=E.origType,A=E.handler.apply(this,arguments),S.type=O),A}}}),n.fn.extend({on:function(D,O,S,A){return b(this,D,O,S,A)},one:function(D,O,S,A){return b(this,D,O,S,A,1)},off:function(D,O,S){var A,k;if(D&&D.preventDefault&&D.handleObj)return A=D.handleObj,n(D.delegateTarget).off(A.namespace?A.origType+"."+A.namespace:A.origType,A.selector,A.handler),this;if(typeof D=="object"){for(k in D)this.off(k,O,D[k]);return this}return(O===!1||typeof O=="function")&&(S=O,O=void 0),S===!1&&(S=y),this.each(function(){n.event.remove(this,D,S,O)})}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},7847:(w,g,r)=>{var p,s;p=[r(3663),r(3993),r(8813),r(498),r(6046),r(5300),r(7114),r(3530)],s=function(n,c,d,a,i,u,m){"use strict";var o=/^(?:focusinfocus|focusoutblur)$/,v=function(f){f.stopPropagation()};return n.extend(n.event,{trigger:function(f,h,T,y){var b,_,D,O,S,A,k,I,E=[T||c],x=i.call(f,"type")?f.type:f,P=i.call(f,"namespace")?f.namespace.split("."):[];if(_=I=D=T=T||c,!(T.nodeType===3||T.nodeType===8)&&!o.test(x+n.event.triggered)&&(x.indexOf(".")>-1&&(P=x.split("."),x=P.shift(),P.sort()),S=x.indexOf(":")<0&&"on"+x,f=f[n.expando]?f:new n.Event(x,typeof f=="object"&&f),f.isTrigger=y?2:3,f.namespace=P.join("."),f.rnamespace=f.namespace?new RegExp("(^|\\.)"+P.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,f.result=void 0,f.target||(f.target=T),h=h==null?[f]:n.makeArray(h,[f]),k=n.event.special[x]||{},!(!y&&k.trigger&&k.trigger.apply(T,h)===!1))){if(!y&&!k.noBubble&&!m(T)){for(O=k.delegateType||x,o.test(O+x)||(_=_.parentNode);_;_=_.parentNode)E.push(_),D=_;D===(T.ownerDocument||c)&&E.push(D.defaultView||D.parentWindow||window)}for(b=0;(_=E[b++])&&!f.isPropagationStopped();)I=_,f.type=b>1?O:k.bindType||x,A=(d.get(_,"events")||Object.create(null))[f.type]&&d.get(_,"handle"),A&&A.apply(_,h),A=S&&_[S],A&&A.apply&&a(_)&&(f.result=A.apply(_,h),f.result===!1&&f.preventDefault());return f.type=x,!y&&!f.isDefaultPrevented()&&(!k._default||k._default.apply(E.pop(),h)===!1)&&a(T)&&S&&u(T[x])&&!m(T)&&(D=T[S],D&&(T[S]=null),n.event.triggered=x,f.isPropagationStopped()&&I.addEventListener(x,v),T[x](),f.isPropagationStopped()&&I.removeEventListener(x,v),n.event.triggered=void 0,D&&(T[S]=D)),f.result}},simulate:function(f,h,T){var y=n.extend(new n.Event,T,{type:f,isSimulated:!0});n.event.trigger(y,null,h)}}),n.fn.extend({trigger:function(f,h){return this.each(function(){n.event.trigger(f,h,this)})},triggerHandler:function(f,h){var T=this[0];if(T)return n.event.trigger(f,h,T,!0)}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},4862:(w,g,r)=>{var p,s,p,s;p=[r(3663)],s=function(n){"use strict";p=[],s=function(){return n}.apply(g,p),s!==void 0&&(w.exports=s)}.apply(g,p),s!==void 0&&(w.exports=s)},6200:(w,g,r)=>{var p,s;p=[r(3663)],s=function(n){"use strict";var c=window.jQuery,d=window.$;n.noConflict=function(a){return window.$===n&&(window.$=d),a&&window.jQuery===n&&(window.jQuery=c),n},typeof noGlobal=="undefined"&&(window.jQuery=window.$=n)}.apply(g,p),s!==void 0&&(w.exports=s)},4910:(w,g,r)=>{var p,s;p=[r(3663),r(3054),r(5323),r(4462),r(1768),r(8557),r(130),r(1040),r(6493),r(8307),r(1434),r(3530),r(9199),r(5764),r(5238),r(1703),r(9304),r(4181),r(8377),r(5291),r(2367),r(7529),r(3547),r(3857),r(8514),r(1474),r(3316),r(7014),r(2473),r(1098),r(4862),r(6200)],s=function(n){"use strict";return n}.apply(g,p),s!==void 0&&(w.exports=s)},9199:(w,g,r)=>{var p,s;p=[r(3663),r(911),r(2979),r(5300),r(9360),r(3306),r(8074),r(8318),r(3674),r(8576),r(5987),r(147),r(5737),r(2281),r(8813),r(5171),r(498),r(944),r(4622),r(1848),r(5323),r(3054),r(3530)],s=function(n,c,d,a,i,u,m,o,v,f,h,T,y,b,_,D,O,S,A){"use strict";var k=/<script|<style|<link/i,I=/checked\s*(?:[^=]|=\s*.checked.)/i,E=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function x(H,Z){return A(H,"table")&&A(Z.nodeType!==11?Z:Z.firstChild,"tr")&&n(H).children("tbody")[0]||H}function P(H){return H.type=(H.getAttribute("type")!==null)+"/"+H.type,H}function F(H){return(H.type||"").slice(0,5)==="true/"?H.type=H.type.slice(5):H.removeAttribute("type"),H}function q(H,Z){var G,tt,it,lt,Y,bt,St;if(Z.nodeType===1){if(_.hasData(H)&&(lt=_.get(H),St=lt.events,St)){_.remove(Z,"handle events");for(it in St)for(G=0,tt=St[it].length;G<tt;G++)n.event.add(Z,it,St[it][G])}D.hasData(H)&&(Y=D.access(H),bt=n.extend({},Y),D.set(Z,bt))}}function W(H,Z){var G=Z.nodeName.toLowerCase();G==="input"&&u.test(H.type)?Z.checked=H.checked:(G==="input"||G==="textarea")&&(Z.defaultValue=H.defaultValue)}function M(H,Z,G,tt){Z=d(Z);var it,lt,Y,bt,St,xt,oe=0,De=H.length,_e=De-1,we=Z[0],Me=a(we);if(Me||De>1&&typeof we=="string"&&!b.checkClone&&I.test(we))return H.each(function(ut){var Pt=H.eq(ut);Me&&(Z[0]=we.call(this,ut,Pt.html())),M(Pt,Z,G,tt)});if(De&&(it=y(Z,H[0].ownerDocument,!1,H,tt),lt=it.firstChild,it.childNodes.length===1&&(it=lt),lt||tt)){for(Y=n.map(h(it,"script"),P),bt=Y.length;oe<De;oe++)St=it,oe!==_e&&(St=n.clone(St,!0,!0),bt&&n.merge(Y,h(St,"script"))),G.call(H[oe],St,oe);if(bt)for(xt=Y[Y.length-1].ownerDocument,n.map(Y,F),oe=0;oe<bt;oe++)St=Y[oe],v.test(St.type||"")&&!_.access(St,"globalEval")&&n.contains(xt,St)&&(St.src&&(St.type||"").toLowerCase()!=="module"?n._evalUrl&&!St.noModule&&n._evalUrl(St.src,{nonce:St.nonce||St.getAttribute("nonce")},xt):S(St.textContent.replace(E,""),St,xt))}return H}function $(H,Z,G){for(var tt,it=Z?n.filter(Z,H):H,lt=0;(tt=it[lt])!=null;lt++)!G&&tt.nodeType===1&&n.cleanData(h(tt)),tt.parentNode&&(G&&c(tt)&&T(h(tt,"script")),tt.parentNode.removeChild(tt));return H}return n.extend({htmlPrefilter:function(H){return H},clone:function(H,Z,G){var tt,it,lt,Y,bt=H.cloneNode(!0),St=c(H);if(!b.noCloneChecked&&(H.nodeType===1||H.nodeType===11)&&!n.isXMLDoc(H))for(Y=h(bt),lt=h(H),tt=0,it=lt.length;tt<it;tt++)W(lt[tt],Y[tt]);if(Z)if(G)for(lt=lt||h(H),Y=Y||h(bt),tt=0,it=lt.length;tt<it;tt++)q(lt[tt],Y[tt]);else q(H,bt);return Y=h(bt,"script"),Y.length>0&&T(Y,!St&&h(H,"script")),bt},cleanData:function(H){for(var Z,G,tt,it=n.event.special,lt=0;(G=H[lt])!==void 0;lt++)if(O(G)){if(Z=G[_.expando]){if(Z.events)for(tt in Z.events)it[tt]?n.event.remove(G,tt):n.removeEvent(G,tt,Z.handle);G[_.expando]=void 0}G[D.expando]&&(G[D.expando]=void 0)}}}),n.fn.extend({detach:function(H){return $(this,H,!0)},remove:function(H){return $(this,H)},text:function(H){return m(this,function(Z){return Z===void 0?n.text(this):this.empty().each(function(){(this.nodeType===1||this.nodeType===11||this.nodeType===9)&&(this.textContent=Z)})},null,H,arguments.length)},append:function(){return M(this,arguments,function(H){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var Z=x(this,H);Z.appendChild(H)}})},prepend:function(){return M(this,arguments,function(H){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var Z=x(this,H);Z.insertBefore(H,Z.firstChild)}})},before:function(){return M(this,arguments,function(H){this.parentNode&&this.parentNode.insertBefore(H,this)})},after:function(){return M(this,arguments,function(H){this.parentNode&&this.parentNode.insertBefore(H,this.nextSibling)})},empty:function(){for(var H,Z=0;(H=this[Z])!=null;Z++)H.nodeType===1&&(n.cleanData(h(H,!1)),H.textContent="");return this},clone:function(H,Z){return H=H==null?!1:H,Z=Z==null?H:Z,this.map(function(){return n.clone(this,H,Z)})},html:function(H){return m(this,function(Z){var G=this[0]||{},tt=0,it=this.length;if(Z===void 0&&G.nodeType===1)return G.innerHTML;if(typeof Z=="string"&&!k.test(Z)&&!f[(o.exec(Z)||["",""])[1].toLowerCase()]){Z=n.htmlPrefilter(Z);try{for(;tt<it;tt++)G=this[tt]||{},G.nodeType===1&&(n.cleanData(h(G,!1)),G.innerHTML=Z);G=0}catch(lt){}}G&&this.empty().append(Z)},null,H,arguments.length)},replaceWith:function(){var H=[];return M(this,arguments,function(Z){var G=this.parentNode;n.inArray(this,H)<0&&(n.cleanData(h(this)),G&&G.replaceChild(Z,this))},H)}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(H,Z){n.fn[H]=function(G){for(var tt,it=[],lt=n(G),Y=lt.length-1,bt=0;bt<=Y;bt++)tt=bt===Y?this:this.clone(!0),n(lt[bt])[Z](tt),i.apply(it,tt.get());return this.pushStack(it)}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},5764:(w,g,r)=>{var p,s;p=[r(8377)],s=function(n){"use strict";return n._evalUrl=function(c,d,a){return n.ajax({url:c,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(i){n.globalEval(i,d,a)}})},n._evalUrl}.apply(g,p),s!==void 0&&(w.exports=s)},5737:(w,g,r)=>{var p,s;p=[r(3663),r(3498),r(911),r(8318),r(3674),r(8576),r(5987),r(147)],s=function(n,c,d,a,i,u,m,o){"use strict";var v=/<|&#?\w+;/;function f(h,T,y,b,_){for(var D,O,S,A,k,I,E=T.createDocumentFragment(),x=[],P=0,F=h.length;P<F;P++)if(D=h[P],D||D===0)if(c(D)==="object")n.merge(x,D.nodeType?[D]:D);else if(!v.test(D))x.push(T.createTextNode(D));else{for(O=O||E.appendChild(T.createElement("div")),S=(a.exec(D)||["",""])[1].toLowerCase(),A=u[S]||u._default,O.innerHTML=A[1]+n.htmlPrefilter(D)+A[2],I=A[0];I--;)O=O.lastChild;n.merge(x,O.childNodes),O=E.firstChild,O.textContent=""}for(E.textContent="",P=0;D=x[P++];){if(b&&n.inArray(D,b)>-1){_&&_.push(D);continue}if(k=d(D),O=m(E.appendChild(D),"script"),k&&o(O),y)for(I=0;D=O[I++];)i.test(D.type||"")&&y.push(D)}return E}return f}.apply(g,p),s!==void 0&&(w.exports=s)},5987:(w,g,r)=>{var p,s;p=[r(3663),r(4622)],s=function(n,c){"use strict";function d(a,i){var u;return typeof a.getElementsByTagName!="undefined"?u=a.getElementsByTagName(i||"*"):typeof a.querySelectorAll!="undefined"?u=a.querySelectorAll(i||"*"):u=[],i===void 0||i&&c(a,i)?n.merge([a],u):u}return d}.apply(g,p),s!==void 0&&(w.exports=s)},147:(w,g,r)=>{var p,s;p=[r(8813)],s=function(n){"use strict";function c(d,a){for(var i=0,u=d.length;i<u;i++)n.set(d[i],"globalEval",!a||n.get(a[i],"globalEval"))}return c}.apply(g,p),s!==void 0&&(w.exports=s)},2281:(w,g,r)=>{var p,s;p=[r(3993),r(6459)],s=function(n,c){"use strict";return function(){var d=n.createDocumentFragment(),a=d.appendChild(n.createElement("div")),i=n.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),a.appendChild(i),c.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="<textarea>x</textarea>",c.noCloneChecked=!!a.cloneNode(!0).lastChild.defaultValue,a.innerHTML="<option></option>",c.option=!!a.lastChild}(),c}.apply(g,p),s!==void 0&&(w.exports=s)},3674:(w,g,r)=>{var p;p=function(){"use strict";return/^$|^module$|\/(?:java|ecma)script/i}.call(g,r,g,w),p!==void 0&&(w.exports=p)},8318:(w,g,r)=>{var p;p=function(){"use strict";return/<([a-z][^\/\0>\x20\t\r\n\f]*)/i}.call(g,r,g,w),p!==void 0&&(w.exports=p)},8576:(w,g,r)=>{var p,s;p=[r(2281)],s=function(n){"use strict";var c={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};return c.tbody=c.tfoot=c.colgroup=c.caption=c.thead,c.th=c.td,n.option||(c.optgroup=c.option=[1,"<select multiple='multiple'>","</select>"]),c}.apply(g,p),s!==void 0&&(w.exports=s)},7014:(w,g,r)=>{var p,s;p=[r(3663),r(8074),r(8448),r(5300),r(9807),r(8930),r(6491),r(5789),r(7114),r(1848),r(1703),r(3054)],s=function(n,c,d,a,i,u,m,o,v){"use strict";return n.offset={setOffset:function(f,h,T){var y,b,_,D,O,S,A,k=n.css(f,"position"),I=n(f),E={};k==="static"&&(f.style.position="relative"),O=I.offset(),_=n.css(f,"top"),S=n.css(f,"left"),A=(k==="absolute"||k==="fixed")&&(_+S).indexOf("auto")>-1,A?(y=I.position(),D=y.top,b=y.left):(D=parseFloat(_)||0,b=parseFloat(S)||0),a(h)&&(h=h.call(f,T,n.extend({},O))),h.top!=null&&(E.top=h.top-O.top+D),h.left!=null&&(E.left=h.left-O.left+b),"using"in h?h.using.call(f,E):I.css(E)}},n.fn.extend({offset:function(f){if(arguments.length)return f===void 0?this:this.each(function(b){n.offset.setOffset(this,f,b)});var h,T,y=this[0];if(y)return y.getClientRects().length?(h=y.getBoundingClientRect(),T=y.ownerDocument.defaultView,{top:h.top+T.pageYOffset,left:h.left+T.pageXOffset}):{top:0,left:0}},position:function(){if(this[0]){var f,h,T,y=this[0],b={top:0,left:0};if(n.css(y,"position")==="fixed")h=y.getBoundingClientRect();else{for(h=this.offset(),T=y.ownerDocument,f=y.offsetParent||T.documentElement;f&&(f===T.body||f===T.documentElement)&&n.css(f,"position")==="static";)f=f.parentNode;f&&f!==y&&f.nodeType===1&&(b=n(f).offset(),b.top+=n.css(f,"borderTopWidth",!0),b.left+=n.css(f,"borderLeftWidth",!0))}return{top:h.top-b.top-n.css(y,"marginTop",!0),left:h.left-b.left-n.css(y,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var f=this.offsetParent;f&&n.css(f,"position")==="static";)f=f.offsetParent;return f||d})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(f,h){var T=h==="pageYOffset";n.fn[f]=function(y){return c(this,function(b,_,D){var O;if(v(b)?O=b:b.nodeType===9&&(O=b.defaultView),D===void 0)return O?O[h]:b[_];O?O.scrollTo(T?O.pageXOffset:D,T?D:O.pageYOffset):b[_]=D},f,y,arguments.length)}}),n.each(["top","left"],function(f,h){n.cssHooks[h]=m(o.pixelPosition,function(T,y){if(y)return y=u(T,h),i.test(y)?n(T).position()[h]+"px":y})}),n}.apply(g,p),s!==void 0&&(w.exports=s)},6493:(w,g,r)=>{var p,s;p=[r(3663),r(8813),r(1768),r(4462)],s=function(n,c){"use strict";return n.extend({queue:function(d,a,i){var u;if(d)return a=(a||"fx")+"queue",u=c.get(d,a),i&&(!u||Array.isArray(i)?u=c.access(d,a,n.makeArray(i)):u.push(i)),u||[]},dequeue:function(d,a){a=a||"fx";var i=n.queue(d,a),u=i.length,m=i.shift(),o=n._queueHooks(d,a),v=function(){n.dequeue(d,a)};m==="inprogress"&&(m=i.shift(),u--),m&&(a==="fx"&&i.unshift("inprogress"),delete o.stop,m.call(d,v,o)),!u&&o&&o.empty.fire()},_queueHooks:function(d,a){var i=a+"queueHooks";return c.get(d,i)||c.access(d,i,{empty:n.Callbacks("once memory").add(function(){c.remove(d,[a+"queue",i])})})}}),n.fn.extend({queue:function(d,a){var i=2;return typeof d!="string"&&(a=d,d="fx",i--),arguments.length<i?n.queue(this[0],d):a===void 0?this:this.each(function(){var u=n.queue(this,d,a);n._queueHooks(this,d),d==="fx"&&u[0]!=="inprogress"&&n.dequeue(this,d)})},dequeue:function(d){return this.each(function(){n.dequeue(this,d)})},clearQueue:function(d){return this.queue(d||"fx",[])},promise:function(d,a){var i,u=1,m=n.Deferred(),o=this,v=this.length,f=function(){--u||m.resolveWith(o,[o])};for(typeof d!="string"&&(a=d,d=void 0),d=d||"fx";v--;)i=c.get(o[v],d+"queueHooks"),i&&i.empty&&(u++,i.empty.add(f));return f(),m.promise(a)}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},8307:(w,g,r)=>{var p,s;p=[r(3663),r(6493),r(1474)],s=function(n){"use strict";return n.fn.delay=function(c,d){return c=n.fx&&n.fx.speeds[c]||c,d=d||"fx",this.queue(d,function(a,i){var u=window.setTimeout(a,c);i.stop=function(){window.clearTimeout(u)}})},n.fn.delay}.apply(g,p),s!==void 0&&(w.exports=s)},3054:(w,g,r)=>{var p,s;p=[r(3663),r(4622),r(420),r(3993),r(7302),r(6046),r(8825),r(9360),r(6397),r(6093),r(6790),r(4335),r(3066),r(6459),r(3616),r(3303)],s=function(n,c,d,a,i,u,m,o,v,f,h,T,y,b){"use strict";var _=a,D=o;(function(){var O,S,A,k,I,E=D,x,P,F,q,W,M=n.expando,$=0,H=0,Z=vn(),G=vn(),tt=vn(),it=vn(),lt=function(N,U){return N===U&&(I=!0),0},Y="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",bt="(?:\\\\[\\da-fA-F]{1,6}"+T+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",St="\\["+T+"*("+bt+")(?:"+T+"*([*^$|!~]?=)"+T+`*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(`+bt+"))|)"+T+"*\\]",xt=":("+bt+`)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|`+St+")*)|.*)\\)|)",oe=new RegExp(T+"+","g"),De=new RegExp("^"+T+"*,"+T+"*"),_e=new RegExp("^"+T+"*([>+~]|"+T+")"+T+"*"),we=new RegExp(T+"|>"),Me=new RegExp(xt),ut=new RegExp("^"+bt+"$"),Pt={ID:new RegExp("^#("+bt+")"),CLASS:new RegExp("^\\.("+bt+")"),TAG:new RegExp("^("+bt+"|[*])"),ATTR:new RegExp("^"+St),PSEUDO:new RegExp("^"+xt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+T+"*(even|odd|(([+-]|)(\\d*)n|)"+T+"*(?:([+-]|)"+T+"*(\\d+)|))"+T+"*\\)|)","i"),bool:new RegExp("^(?:"+Y+")$","i"),needsContext:new RegExp("^"+T+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+T+"*((?:-\\d)?\\d*)"+T+"*\\)|)(?=[^-]|$)","i")},_t=/^(?:input|select|textarea|button)$/i,$t=/^h\d$/i,de=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Be=/[+~]/,ae=new RegExp("\\\\[\\da-fA-F]{1,6}"+T+"?|\\\\([^\\r\\n\\f])","g"),Te=function(N,U){var K="0x"+N.slice(1)-65536;return U||(K<0?String.fromCharCode(K+65536):String.fromCharCode(K>>10|55296,K&1023|56320))},mn=function(){Q()},Ne=mt(function(N){return N.disabled===!0&&c(N,"fieldset")},{dir:"parentNode",next:"legend"});function Le(){try{return x.activeElement}catch(N){}}try{E.apply(d=v.call(_.childNodes),_.childNodes),d[_.childNodes.length].nodeType}catch(N){E={apply:function(U,K){D.apply(U,v.call(K))},call:function(U){D.apply(U,v.call(arguments,1))}}}function zt(N,U,K,X){var st,vt,gt,Dt,yt,kt,Mt,Ht=U&&U.ownerDocument,Kt=U?U.nodeType:9;if(K=K||[],typeof N!="string"||!N||Kt!==1&&Kt!==9&&Kt!==11)return K;if(!X&&(Q(U),U=U||x,F)){if(Kt!==11&&(yt=de.exec(N)))if(st=yt[1]){if(Kt===9)if(gt=U.getElementById(st)){if(gt.id===st)return E.call(K,gt),K}else return K;else if(Ht&&(gt=Ht.getElementById(st))&&zt.contains(U,gt)&&gt.id===st)return E.call(K,gt),K}else{if(yt[2])return E.apply(K,U.getElementsByTagName(N)),K;if((st=yt[3])&&U.getElementsByClassName)return E.apply(K,U.getElementsByClassName(st)),K}if(!it[N+" "]&&(!q||!q.test(N))){if(Mt=N,Ht=U,Kt===1&&(we.test(N)||_e.test(N))){for(Ht=Be.test(N)&&ft(U.parentNode)||U,(Ht!=U||!b.scope)&&((Dt=U.getAttribute("id"))?Dt=n.escapeSelector(Dt):U.setAttribute("id",Dt=M)),kt=Lt(N),vt=kt.length;vt--;)kt[vt]=(Dt?"#"+Dt:":scope")+" "+nt(kt[vt]);Mt=kt.join(",")}try{return E.apply(K,Ht.querySelectorAll(Mt)),K}catch(Nt){it(N,!0)}finally{Dt===M&&U.removeAttribute("id")}}}return Jt(N.replace(y,"$1"),U,K,X)}function vn(){var N=[];function U(K,X){return N.push(K+" ")>S.cacheLength&&delete U[N.shift()],U[K+" "]=X}return U}function Ue(N){return N[M]=!0,N}function je(N){var U=x.createElement("fieldset");try{return!!N(U)}catch(K){return!1}finally{U.parentNode&&U.parentNode.removeChild(U),U=null}}function gs(N){return function(U){return c(U,"input")&&U.type===N}}function xn(N){return function(U){return(c(U,"input")||c(U,"button"))&&U.type===N}}function yn(N){return function(U){return"form"in U?U.parentNode&&U.disabled===!1?"label"in U?"label"in U.parentNode?U.parentNode.disabled===N:U.disabled===N:U.isDisabled===N||U.isDisabled!==!N&&Ne(U)===N:U.disabled===N:"label"in U?U.disabled===N:!1}}function Je(N){return Ue(function(U){return U=+U,Ue(function(K,X){for(var st,vt=N([],K.length,U),gt=vt.length;gt--;)K[st=vt[gt]]&&(K[st]=!(X[st]=K[st]))})})}function ft(N){return N&&typeof N.getElementsByTagName!="undefined"&&N}function Q(N){var U,K=N?N.ownerDocument||N:_;return K==x||K.nodeType!==9||!K.documentElement||(x=K,P=x.documentElement,F=!n.isXMLDoc(x),W=P.matches||P.webkitMatchesSelector||P.msMatchesSelector,P.msMatchesSelector&&_!=x&&(U=x.defaultView)&&U.top!==U&&U.addEventListener("unload",mn),b.getById=je(function(X){return P.appendChild(X).id=n.expando,!x.getElementsByName||!x.getElementsByName(n.expando).length}),b.disconnectedMatch=je(function(X){return W.call(X,"*")}),b.scope=je(function(){return x.querySelectorAll(":scope")}),b.cssHas=je(function(){try{return x.querySelector(":has(*,:jqfake)"),!1}catch(X){return!0}}),b.getById?(S.filter.ID=function(X){var st=X.replace(ae,Te);return function(vt){return vt.getAttribute("id")===st}},S.find.ID=function(X,st){if(typeof st.getElementById!="undefined"&&F){var vt=st.getElementById(X);return vt?[vt]:[]}}):(S.filter.ID=function(X){var st=X.replace(ae,Te);return function(vt){var gt=typeof vt.getAttributeNode!="undefined"&&vt.getAttributeNode("id");return gt&&gt.value===st}},S.find.ID=function(X,st){if(typeof st.getElementById!="undefined"&&F){var vt,gt,Dt,yt=st.getElementById(X);if(yt){if(vt=yt.getAttributeNode("id"),vt&&vt.value===X)return[yt];for(Dt=st.getElementsByName(X),gt=0;yt=Dt[gt++];)if(vt=yt.getAttributeNode("id"),vt&&vt.value===X)return[yt]}return[]}}),S.find.TAG=function(X,st){return typeof st.getElementsByTagName!="undefined"?st.getElementsByTagName(X):st.querySelectorAll(X)},S.find.CLASS=function(X,st){if(typeof st.getElementsByClassName!="undefined"&&F)return st.getElementsByClassName(X)},q=[],je(function(X){var st;P.appendChild(X).innerHTML="<a id='"+M+"' href='' disabled='disabled'></a><select id='"+M+"-\r\\' disabled='disabled'><option selected=''></option></select>",X.querySelectorAll("[selected]").length||q.push("\\["+T+"*(?:value|"+Y+")"),X.querySelectorAll("[id~="+M+"-]").length||q.push("~="),X.querySelectorAll("a#"+M+"+*").length||q.push(".#.+[+~]"),X.querySelectorAll(":checked").length||q.push(":checked"),st=x.createElement("input"),st.setAttribute("type","hidden"),X.appendChild(st).setAttribute("name","D"),P.appendChild(X).disabled=!0,X.querySelectorAll(":disabled").length!==2&&q.push(":enabled",":disabled"),st=x.createElement("input"),st.setAttribute("name",""),X.appendChild(st),X.querySelectorAll("[name='']").length||q.push("\\["+T+"*name"+T+"*="+T+`*(?:''|"")`)}),b.cssHas||q.push(":has"),q=q.length&&new RegExp(q.join("|")),lt=function(X,st){if(X===st)return I=!0,0;var vt=!X.compareDocumentPosition-!st.compareDocumentPosition;return vt||(vt=(X.ownerDocument||X)==(st.ownerDocument||st)?X.compareDocumentPosition(st):1,vt&1||!b.sortDetached&&st.compareDocumentPosition(X)===vt?X===x||X.ownerDocument==_&&zt.contains(_,X)?-1:st===x||st.ownerDocument==_&&zt.contains(_,st)?1:k?i.call(k,X)-i.call(k,st):0:vt&4?-1:1)}),x}zt.matches=function(N,U){return zt(N,null,null,U)},zt.matchesSelector=function(N,U){if(Q(N),F&&!it[U+" "]&&(!q||!q.test(U)))try{var K=W.call(N,U);if(K||b.disconnectedMatch||N.document&&N.document.nodeType!==11)return K}catch(X){it(U,!0)}return zt(U,x,null,[N]).length>0},zt.contains=function(N,U){return(N.ownerDocument||N)!=x&&Q(N),n.contains(N,U)},zt.attr=function(N,U){(N.ownerDocument||N)!=x&&Q(N);var K=S.attrHandle[U.toLowerCase()],X=K&&u.call(S.attrHandle,U.toLowerCase())?K(N,U,!F):void 0;return X!==void 0?X:N.getAttribute(U)},zt.error=function(N){throw new Error("Syntax error, unrecognized expression: "+N)},n.uniqueSort=function(N){var U,K=[],X=0,st=0;if(I=!b.sortStable,k=!b.sortStable&&v.call(N,0),f.call(N,lt),I){for(;U=N[st++];)U===N[st]&&(X=K.push(st));for(;X--;)h.call(N,K[X],1)}return k=null,N},n.fn.uniqueSort=function(){return this.pushStack(n.uniqueSort(v.apply(this)))},S=n.expr={cacheLength:50,createPseudo:Ue,match:Pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(N){return N[1]=N[1].replace(ae,Te),N[3]=(N[3]||N[4]||N[5]||"").replace(ae,Te),N[2]==="~="&&(N[3]=" "+N[3]+" "),N.slice(0,4)},CHILD:function(N){return N[1]=N[1].toLowerCase(),N[1].slice(0,3)==="nth"?(N[3]||zt.error(N[0]),N[4]=+(N[4]?N[5]+(N[6]||1):2*(N[3]==="even"||N[3]==="odd")),N[5]=+(N[7]+N[8]||N[3]==="odd")):N[3]&&zt.error(N[0]),N},PSEUDO:function(N){var U,K=!N[6]&&N[2];return Pt.CHILD.test(N[0])?null:(N[3]?N[2]=N[4]||N[5]||"":K&&Me.test(K)&&(U=Lt(K,!0))&&(U=K.indexOf(")",K.length-U)-K.length)&&(N[0]=N[0].slice(0,U),N[2]=K.slice(0,U)),N.slice(0,3))}},filter:{TAG:function(N){var U=N.replace(ae,Te).toLowerCase();return N==="*"?function(){return!0}:function(K){return c(K,U)}},CLASS:function(N){var U=Z[N+" "];return U||(U=new RegExp("(^|"+T+")"+N+"("+T+"|$)"))&&Z(N,function(K){return U.test(typeof K.className=="string"&&K.className||typeof K.getAttribute!="undefined"&&K.getAttribute("class")||"")})},ATTR:function(N,U,K){return function(X){var st=zt.attr(X,N);return st==null?U==="!=":U?(st+="",U==="="?st===K:U==="!="?st!==K:U==="^="?K&&st.indexOf(K)===0:U==="*="?K&&st.indexOf(K)>-1:U==="$="?K&&st.slice(-K.length)===K:U==="~="?(" "+st.replace(oe," ")+" ").indexOf(K)>-1:U==="|="?st===K||st.slice(0,K.length+1)===K+"-":!1):!0}},CHILD:function(N,U,K,X,st){var vt=N.slice(0,3)!=="nth",gt=N.slice(-4)!=="last",Dt=U==="of-type";return X===1&&st===0?function(yt){return!!yt.parentNode}:function(yt,kt,Mt){var Ht,Kt,Nt,le,Ce,Ee=vt!==gt?"nextSibling":"previousSibling",He=yt.parentNode,We=Dt&&yt.nodeName.toLowerCase(),Tt=!Mt&&!Dt,ht=!1;if(He){if(vt){for(;Ee;){for(Nt=yt;Nt=Nt[Ee];)if(Dt?c(Nt,We):Nt.nodeType===1)return!1;Ce=Ee=N==="only"&&!Ce&&"nextSibling"}return!0}if(Ce=[gt?He.firstChild:He.lastChild],gt&&Tt){for(Kt=He[M]||(He[M]={}),Ht=Kt[N]||[],le=Ht[0]===$&&Ht[1],ht=le&&Ht[2],Nt=le&&He.childNodes[le];Nt=++le&&Nt&&Nt[Ee]||(ht=le=0)||Ce.pop();)if(Nt.nodeType===1&&++ht&&Nt===yt){Kt[N]=[$,le,ht];break}}else if(Tt&&(Kt=yt[M]||(yt[M]={}),Ht=Kt[N]||[],le=Ht[0]===$&&Ht[1],ht=le),ht===!1)for(;(Nt=++le&&Nt&&Nt[Ee]||(ht=le=0)||Ce.pop())&&!((Dt?c(Nt,We):Nt.nodeType===1)&&++ht&&(Tt&&(Kt=Nt[M]||(Nt[M]={}),Kt[N]=[$,ht]),Nt===yt)););return ht-=st,ht===X||ht%X===0&&ht/X>=0}}},PSEUDO:function(N,U){var K,X=S.pseudos[N]||S.setFilters[N.toLowerCase()]||zt.error("unsupported pseudo: "+N);return X[M]?X(U):X.length>1?(K=[N,N,"",U],S.setFilters.hasOwnProperty(N.toLowerCase())?Ue(function(st,vt){for(var gt,Dt=X(st,U),yt=Dt.length;yt--;)gt=i.call(st,Dt[yt]),st[gt]=!(vt[gt]=Dt[yt])}):function(st){return X(st,0,K)}):X}},pseudos:{not:Ue(function(N){var U=[],K=[],X=Zt(N.replace(y,"$1"));return X[M]?Ue(function(st,vt,gt,Dt){for(var yt,kt=X(st,null,Dt,[]),Mt=st.length;Mt--;)(yt=kt[Mt])&&(st[Mt]=!(vt[Mt]=yt))}):function(st,vt,gt){return U[0]=st,X(U,null,gt,K),U[0]=null,!K.pop()}}),has:Ue(function(N){return function(U){return zt(N,U).length>0}}),contains:Ue(function(N){return N=N.replace(ae,Te),function(U){return(U.textContent||n.text(U)).indexOf(N)>-1}}),lang:Ue(function(N){return ut.test(N||"")||zt.error("unsupported lang: "+N),N=N.replace(ae,Te).toLowerCase(),function(U){var K;do if(K=F?U.lang:U.getAttribute("xml:lang")||U.getAttribute("lang"))return K=K.toLowerCase(),K===N||K.indexOf(N+"-")===0;while((U=U.parentNode)&&U.nodeType===1);return!1}}),target:function(N){var U=window.location&&window.location.hash;return U&&U.slice(1)===N.id},root:function(N){return N===P},focus:function(N){return N===Le()&&x.hasFocus()&&!!(N.type||N.href||~N.tabIndex)},enabled:yn(!1),disabled:yn(!0),checked:function(N){return c(N,"input")&&!!N.checked||c(N,"option")&&!!N.selected},selected:function(N){return N.parentNode&&N.parentNode.selectedIndex,N.selected===!0},empty:function(N){for(N=N.firstChild;N;N=N.nextSibling)if(N.nodeType<6)return!1;return!0},parent:function(N){return!S.pseudos.empty(N)},header:function(N){return $t.test(N.nodeName)},input:function(N){return _t.test(N.nodeName)},button:function(N){return c(N,"input")&&N.type==="button"||c(N,"button")},text:function(N){var U;return c(N,"input")&&N.type==="text"&&((U=N.getAttribute("type"))==null||U.toLowerCase()==="text")},first:Je(function(){return[0]}),last:Je(function(N,U){return[U-1]}),eq:Je(function(N,U,K){return[K<0?K+U:K]}),even:Je(function(N,U){for(var K=0;K<U;K+=2)N.push(K);return N}),odd:Je(function(N,U){for(var K=1;K<U;K+=2)N.push(K);return N}),lt:Je(function(N,U,K){var X;for(K<0?X=K+U:K>U?X=U:X=K;--X>=0;)N.push(X);return N}),gt:Je(function(N,U,K){for(var X=K<0?K+U:K;++X<U;)N.push(X);return N})}},S.pseudos.nth=S.pseudos.eq;for(O in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})S.pseudos[O]=gs(O);for(O in{submit:!0,reset:!0})S.pseudos[O]=xn(O);function pt(){}pt.prototype=S.filters=S.pseudos,S.setFilters=new pt;function Lt(N,U){var K,X,st,vt,gt,Dt,yt,kt=G[N+" "];if(kt)return U?0:kt.slice(0);for(gt=N,Dt=[],yt=S.preFilter;gt;){(!K||(X=De.exec(gt)))&&(X&&(gt=gt.slice(X[0].length)||gt),Dt.push(st=[])),K=!1,(X=_e.exec(gt))&&(K=X.shift(),st.push({value:K,type:X[0].replace(y," ")}),gt=gt.slice(K.length));for(vt in S.filter)(X=Pt[vt].exec(gt))&&(!yt[vt]||(X=yt[vt](X)))&&(K=X.shift(),st.push({value:K,type:vt,matches:X}),gt=gt.slice(K.length));if(!K)break}return U?gt.length:gt?zt.error(N):G(N,Dt).slice(0)}function nt(N){for(var U=0,K=N.length,X="";U<K;U++)X+=N[U].value;return X}function mt(N,U,K){var X=U.dir,st=U.next,vt=st||X,gt=K&&vt==="parentNode",Dt=H++;return U.first?function(yt,kt,Mt){for(;yt=yt[X];)if(yt.nodeType===1||gt)return N(yt,kt,Mt);return!1}:function(yt,kt,Mt){var Ht,Kt,Nt=[$,Dt];if(Mt){for(;yt=yt[X];)if((yt.nodeType===1||gt)&&N(yt,kt,Mt))return!0}else for(;yt=yt[X];)if(yt.nodeType===1||gt)if(Kt=yt[M]||(yt[M]={}),st&&c(yt,st))yt=yt[X]||yt;else{if((Ht=Kt[vt])&&Ht[0]===$&&Ht[1]===Dt)return Nt[2]=Ht[2];if(Kt[vt]=Nt,Nt[2]=N(yt,kt,Mt))return!0}return!1}}function ct(N){return N.length>1?function(U,K,X){for(var st=N.length;st--;)if(!N[st](U,K,X))return!1;return!0}:N[0]}function Ot(N,U,K){for(var X=0,st=U.length;X<st;X++)zt(N,U[X],K);return K}function Rt(N,U,K,X,st){for(var vt,gt=[],Dt=0,yt=N.length,kt=U!=null;Dt<yt;Dt++)(vt=N[Dt])&&(!K||K(vt,X,st))&&(gt.push(vt),kt&&U.push(Dt));return gt}function qt(N,U,K,X,st,vt){return X&&!X[M]&&(X=qt(X)),st&&!st[M]&&(st=qt(st,vt)),Ue(function(gt,Dt,yt,kt){var Mt,Ht,Kt,Nt,le=[],Ce=[],Ee=Dt.length,He=gt||Ot(U||"*",yt.nodeType?[yt]:yt,[]),We=N&&(gt||!U)?Rt(He,le,N,yt,kt):He;if(K?(Nt=st||(gt?N:Ee||X)?[]:Dt,K(We,Nt,yt,kt)):Nt=We,X)for(Mt=Rt(Nt,Ce),X(Mt,[],yt,kt),Ht=Mt.length;Ht--;)(Kt=Mt[Ht])&&(Nt[Ce[Ht]]=!(We[Ce[Ht]]=Kt));if(gt){if(st||N){if(st){for(Mt=[],Ht=Nt.length;Ht--;)(Kt=Nt[Ht])&&Mt.push(We[Ht]=Kt);st(null,Nt=[],Mt,kt)}for(Ht=Nt.length;Ht--;)(Kt=Nt[Ht])&&(Mt=st?i.call(gt,Kt):le[Ht])>-1&&(gt[Mt]=!(Dt[Mt]=Kt))}}else Nt=Rt(Nt===Dt?Nt.splice(Ee,Nt.length):Nt),st?st(null,Dt,Nt,kt):E.apply(Dt,Nt)})}function Ft(N){for(var U,K,X,st=N.length,vt=S.relative[N[0].type],gt=vt||S.relative[" "],Dt=vt?1:0,yt=mt(function(Ht){return Ht===U},gt,!0),kt=mt(function(Ht){return i.call(U,Ht)>-1},gt,!0),Mt=[function(Ht,Kt,Nt){var le=!vt&&(Nt||Kt!=A)||((U=Kt).nodeType?yt(Ht,Kt,Nt):kt(Ht,Kt,Nt));return U=null,le}];Dt<st;Dt++)if(K=S.relative[N[Dt].type])Mt=[mt(ct(Mt),K)];else{if(K=S.filter[N[Dt].type].apply(null,N[Dt].matches),K[M]){for(X=++Dt;X<st&&!S.relative[N[X].type];X++);return qt(Dt>1&&ct(Mt),Dt>1&&nt(N.slice(0,Dt-1).concat({value:N[Dt-2].type===" "?"*":""})).replace(y,"$1"),K,Dt<X&&Ft(N.slice(Dt,X)),X<st&&Ft(N=N.slice(X)),X<st&&nt(N))}Mt.push(K)}return ct(Mt)}function Ct(N,U){var K=U.length>0,X=N.length>0,st=function(vt,gt,Dt,yt,kt){var Mt,Ht,Kt,Nt=0,le="0",Ce=vt&&[],Ee=[],He=A,We=vt||X&&S.find.TAG("*",kt),Tt=$+=He==null?1:Math.random()||.1,ht=We.length;for(kt&&(A=gt==x||gt||kt);le!==ht&&(Mt=We[le])!=null;le++){if(X&&Mt){for(Ht=0,!gt&&Mt.ownerDocument!=x&&(Q(Mt),Dt=!F);Kt=N[Ht++];)if(Kt(Mt,gt||x,Dt)){E.call(yt,Mt);break}kt&&($=Tt)}K&&((Mt=!Kt&&Mt)&&Nt--,vt&&Ce.push(Mt))}if(Nt+=le,K&&le!==Nt){for(Ht=0;Kt=U[Ht++];)Kt(Ce,Ee,gt,Dt);if(vt){if(Nt>0)for(;le--;)Ce[le]||Ee[le]||(Ee[le]=m.call(yt));Ee=Rt(Ee)}E.apply(yt,Ee),kt&&!vt&&Ee.length>0&&Nt+U.length>1&&n.uniqueSort(yt)}return kt&&($=Tt,A=He),Ce};return K?Ue(st):st}function Zt(N,U){var K,X=[],st=[],vt=tt[N+" "];if(!vt){for(U||(U=Lt(N)),K=U.length;K--;)vt=Ft(U[K]),vt[M]?X.push(vt):st.push(vt);vt=tt(N,Ct(st,X)),vt.selector=N}return vt}function Jt(N,U,K,X){var st,vt,gt,Dt,yt,kt=typeof N=="function"&&N,Mt=!X&&Lt(N=kt.selector||N);if(K=K||[],Mt.length===1){if(vt=Mt[0]=Mt[0].slice(0),vt.length>2&&(gt=vt[0]).type==="ID"&&U.nodeType===9&&F&&S.relative[vt[1].type]){if(U=(S.find.ID(gt.matches[0].replace(ae,Te),U)||[])[0],U)kt&&(U=U.parentNode);else return K;N=N.slice(vt.shift().value.length)}for(st=Pt.needsContext.test(N)?0:vt.length;st--&&(gt=vt[st],!S.relative[Dt=gt.type]);)if((yt=S.find[Dt])&&(X=yt(gt.matches[0].replace(ae,Te),Be.test(vt[0].type)&&ft(U.parentNode)||U))){if(vt.splice(st,1),N=X.length&&nt(vt),!N)return E.apply(K,X),K;break}}return(kt||Zt(N,Mt))(X,U,!F,K,!U||Be.test(N)&&ft(U.parentNode)||U),K}b.sortStable=M.split("").sort(lt).join("")===M,Q(),b.sortDetached=je(function(N){return N.compareDocumentPosition(x.createElement("fieldset"))&1}),n.find=zt,n.expr[":"]=n.expr.pseudos,n.unique=n.uniqueSort,zt.compile=Zt,zt.select=Jt,zt.setDocument=Q,zt.tokenize=Lt,zt.escape=n.escapeSelector,zt.getText=n.text,zt.isXML=n.isXMLDoc,zt.selectors=n.expr,zt.support=n.support,zt.uniqueSort=n.uniqueSort})()}.apply(g,p),s!==void 0&&(w.exports=s)},3616:(w,g,r)=>{var p,s;p=[r(3663)],s=function(n){"use strict";n.contains=function(c,d){var a=d&&d.parentNode;return c===a||!!(a&&a.nodeType===1&&(c.contains?c.contains(a):c.compareDocumentPosition&&c.compareDocumentPosition(a)&16))}}.apply(g,p),s!==void 0&&(w.exports=s)},3303:(w,g,r)=>{var p,s;p=[r(3663)],s=function(n){"use strict";var c=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function d(a,i){return i?a==="\0"?"\uFFFD":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a}n.escapeSelector=function(a){return(a+"").replace(c,d)}}.apply(g,p),s!==void 0&&(w.exports=s)},4181:(w,g,r)=>{var p,s;p=[r(3663),r(3498),r(3306),r(5300),r(1848),r(5323),r(7457)],s=function(n,c,d,a){"use strict";var i=/\[\]$/,u=/\r?\n/g,m=/^(?:submit|button|image|reset|file)$/i,o=/^(?:input|select|textarea|keygen)/i;function v(f,h,T,y){var b;if(Array.isArray(h))n.each(h,function(_,D){T||i.test(f)?y(f,D):v(f+"["+(typeof D=="object"&&D!=null?_:"")+"]",D,T,y)});else if(!T&&c(h)==="object")for(b in h)v(f+"["+b+"]",h[b],T,y);else y(f,h)}return n.param=function(f,h){var T,y=[],b=function(_,D){var O=a(D)?D():D;y[y.length]=encodeURIComponent(_)+"="+encodeURIComponent(O==null?"":O)};if(f==null)return"";if(Array.isArray(f)||f.jquery&&!n.isPlainObject(f))n.each(f,function(){b(this.name,this.value)});else for(T in f)v(T,f[T],h,b);return y.join("&")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var f=n.prop(this,"elements");return f?n.makeArray(f):this}).filter(function(){var f=this.type;return this.name&&!n(this).is(":disabled")&&o.test(this.nodeName)&&!m.test(f)&&(this.checked||!d.test(f))}).map(function(f,h){var T=n(this).val();return T==null?null:Array.isArray(T)?n.map(T,function(y){return{name:h.name,value:y.replace(u,`\r
`)}}):{name:h.name,value:T.replace(u,`\r
`)}}).get()}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},5323:(w,g,r)=>{var p,s;p=[r(3663),r(9115),r(7302),r(3346),r(3246),r(652),r(4622),r(1848),r(7006),r(3054)],s=function(n,c,d,a,i,u,m){"use strict";var o=/^(?:parents|prev(?:Until|All))/,v={children:!0,contents:!0,next:!0,prev:!0};n.fn.extend({has:function(h){var T=n(h,this),y=T.length;return this.filter(function(){for(var b=0;b<y;b++)if(n.contains(this,T[b]))return!0})},closest:function(h,T){var y,b=0,_=this.length,D=[],O=typeof h!="string"&&n(h);if(!u.test(h)){for(;b<_;b++)for(y=this[b];y&&y!==T;y=y.parentNode)if(y.nodeType<11&&(O?O.index(y)>-1:y.nodeType===1&&n.find.matchesSelector(y,h))){D.push(y);break}}return this.pushStack(D.length>1?n.uniqueSort(D):D)},index:function(h){return h?typeof h=="string"?d.call(n(h),this[0]):d.call(this,h.jquery?h[0]:h):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(h,T){return this.pushStack(n.uniqueSort(n.merge(this.get(),n(h,T))))},addBack:function(h){return this.add(h==null?this.prevObject:this.prevObject.filter(h))}});function f(h,T){for(;(h=h[T])&&h.nodeType!==1;);return h}return n.each({parent:function(h){var T=h.parentNode;return T&&T.nodeType!==11?T:null},parents:function(h){return a(h,"parentNode")},parentsUntil:function(h,T,y){return a(h,"parentNode",y)},next:function(h){return f(h,"nextSibling")},prev:function(h){return f(h,"previousSibling")},nextAll:function(h){return a(h,"nextSibling")},prevAll:function(h){return a(h,"previousSibling")},nextUntil:function(h,T,y){return a(h,"nextSibling",y)},prevUntil:function(h,T,y){return a(h,"previousSibling",y)},siblings:function(h){return i((h.parentNode||{}).firstChild,h)},children:function(h){return i(h.firstChild)},contents:function(h){return h.contentDocument!=null&&c(h.contentDocument)?h.contentDocument:(m(h,"template")&&(h=h.content||h),n.merge([],h.childNodes))}},function(h,T){n.fn[h]=function(y,b){var _=n.map(this,T,y);return h.slice(-5)!=="Until"&&(b=y),b&&typeof b=="string"&&(_=n.filter(b,_)),this.length>1&&(v[h]||n.uniqueSort(_),o.test(h)&&_.reverse()),this.pushStack(_)}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},7006:(w,g,r)=>{var p,s;p=[r(3663),r(7302),r(5300),r(652),r(3054)],s=function(n,c,d,a){"use strict";function i(u,m,o){return d(m)?n.grep(u,function(v,f){return!!m.call(v,f,v)!==o}):m.nodeType?n.grep(u,function(v){return v===m!==o}):typeof m!="string"?n.grep(u,function(v){return c.call(m,v)>-1!==o}):n.filter(m,u,o)}n.filter=function(u,m,o){var v=m[0];return o&&(u=":not("+u+")"),m.length===1&&v.nodeType===1?n.find.matchesSelector(v,u)?[v]:[]:n.find.matches(u,n.grep(m,function(f){return f.nodeType===1}))},n.fn.extend({find:function(u){var m,o,v=this.length,f=this;if(typeof u!="string")return this.pushStack(n(u).filter(function(){for(m=0;m<v;m++)if(n.contains(f[m],this))return!0}));for(o=this.pushStack([]),m=0;m<v;m++)n.find(u,f[m],o);return v>1?n.uniqueSort(o):o},filter:function(u){return this.pushStack(i(this,u||[],!1))},not:function(u){return this.pushStack(i(this,u||[],!0))},is:function(u){return!!i(this,typeof u=="string"&&a.test(u)?n(u):u||[],!1).length}})}.apply(g,p),s!==void 0&&(w.exports=s)},3346:(w,g,r)=>{var p,s;p=[r(3663)],s=function(n){"use strict";return function(c,d,a){for(var i=[],u=a!==void 0;(c=c[d])&&c.nodeType!==9;)if(c.nodeType===1){if(u&&n(c).is(a))break;i.push(c)}return i}}.apply(g,p),s!==void 0&&(w.exports=s)},652:(w,g,r)=>{var p,s;p=[r(3663),r(3054)],s=function(n){"use strict";return n.expr.match.needsContext}.apply(g,p),s!==void 0&&(w.exports=s)},3246:(w,g,r)=>{var p;p=function(){"use strict";return function(s,n){for(var c=[];s;s=s.nextSibling)s.nodeType===1&&s!==n&&c.push(s);return c}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},1784:(w,g,r)=>{var p,s;p=[r(4080)],s=function(n){"use strict";return n.call(Object)}.apply(g,p),s!==void 0&&(w.exports=s)},420:(w,g,r)=>{var p;p=function(){"use strict";return[]}.call(g,r,g,w),p!==void 0&&(w.exports=p)},3278:(w,g,r)=>{var p;p=function(){"use strict";return{}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},3993:(w,g,r)=>{var p;p=function(){"use strict";return window.document}.call(g,r,g,w),p!==void 0&&(w.exports=p)},8448:(w,g,r)=>{var p,s;p=[r(3993)],s=function(n){"use strict";return n.documentElement}.apply(g,p),s!==void 0&&(w.exports=s)},2979:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.flat?function(c){return n.flat.call(c)}:function(c){return n.concat.apply([],c)}}.apply(g,p),s!==void 0&&(w.exports=s)},4080:(w,g,r)=>{var p,s;p=[r(6046)],s=function(n){"use strict";return n.toString}.apply(g,p),s!==void 0&&(w.exports=s)},9115:(w,g,r)=>{var p;p=function(){"use strict";return Object.getPrototypeOf}.call(g,r,g,w),p!==void 0&&(w.exports=p)},6046:(w,g,r)=>{var p,s;p=[r(3278)],s=function(n){"use strict";return n.hasOwnProperty}.apply(g,p),s!==void 0&&(w.exports=s)},7302:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.indexOf}.apply(g,p),s!==void 0&&(w.exports=s)},5300:(w,g,r)=>{var p;p=function(){"use strict";return function(n){return typeof n=="function"&&typeof n.nodeType!="number"&&typeof n.item!="function"}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},7114:(w,g,r)=>{var p;p=function(){"use strict";return function(n){return n!=null&&n===n.window}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},7973:(w,g,r)=>{var p;p=function(){"use strict";return/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source}.call(g,r,g,w),p!==void 0&&(w.exports=p)},8825:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.pop}.apply(g,p),s!==void 0&&(w.exports=s)},9360:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.push}.apply(g,p),s!==void 0&&(w.exports=s)},3306:(w,g,r)=>{var p;p=function(){"use strict";return/^(?:checkbox|radio)$/i}.call(g,r,g,w),p!==void 0&&(w.exports=p)},9482:(w,g,r)=>{var p,s;p=[r(7973)],s=function(n){"use strict";return new RegExp("^(?:([+-])=|)("+n+")([a-z%]*)$","i")}.apply(g,p),s!==void 0&&(w.exports=s)},5134:(w,g,r)=>{var p;p=function(){"use strict";return/[^\x20\t\r\n\f]+/g}.call(g,r,g,w),p!==void 0&&(w.exports=p)},3066:(w,g,r)=>{var p,s;p=[r(4335)],s=function(n){"use strict";return new RegExp("^"+n+"+|((?:^|[^\\\\])(?:\\\\.)*)"+n+"+$","g")}.apply(g,p),s!==void 0&&(w.exports=s)},6397:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.slice}.apply(g,p),s!==void 0&&(w.exports=s)},6093:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.sort}.apply(g,p),s!==void 0&&(w.exports=s)},6790:(w,g,r)=>{var p,s;p=[r(420)],s=function(n){"use strict";return n.splice}.apply(g,p),s!==void 0&&(w.exports=s)},6459:(w,g,r)=>{var p;p=function(){"use strict";return{}}.call(g,r,g,w),p!==void 0&&(w.exports=p)},6541:(w,g,r)=>{var p,s;p=[r(3278)],s=function(n){"use strict";return n.toString}.apply(g,p),s!==void 0&&(w.exports=s)},4335:(w,g,r)=>{var p;p=function(){"use strict";return"[\\x20\\t\\r\\n\\f]"}.call(g,r,g,w),p!==void 0&&(w.exports=p)},5238:(w,g,r)=>{var p,s;p=[r(3663),r(5300),r(1848),r(9199),r(5323)],s=function(n,c){"use strict";return n.fn.extend({wrapAll:function(d){var a;return this[0]&&(c(d)&&(d=d.call(this[0])),a=n(d,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&a.insertBefore(this[0]),a.map(function(){for(var i=this;i.firstElementChild;)i=i.firstElementChild;return i}).append(this)),this},wrapInner:function(d){return c(d)?this.each(function(a){n(this).wrapInner(d.call(this,a))}):this.each(function(){var a=n(this),i=a.contents();i.length?i.wrapAll(d):a.append(d)})},wrap:function(d){var a=c(d);return this.each(function(i){n(this).wrapAll(a?d.call(this,i):d)})},unwrap:function(d){return this.parent(d).not("body").each(function(){n(this).replaceWith(this.childNodes)}),this}}),n}.apply(g,p),s!==void 0&&(w.exports=s)},8689:function(w,g,r){w=r.nmd(w);var p;/**
* @license
* Lodash <https://lodash.com/>
* Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
* Released under MIT license <https://lodash.com/license>
* Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
* Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
*/(function(){var s,n="4.17.21",c=200,d="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",a="Expected a function",i="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",m=500,o="__lodash_placeholder__",v=1,f=2,h=4,T=1,y=2,b=1,_=2,D=4,O=8,S=16,A=32,k=64,I=128,E=256,x=512,P=30,F="...",q=800,W=16,M=1,$=2,H=3,Z=1/0,G=9007199254740991,tt=17976931348623157e292,it=0/0,lt=4294967295,Y=lt-1,bt=lt>>>1,St=[["ary",I],["bind",b],["bindKey",_],["curry",O],["curryRight",S],["flip",x],["partial",A],["partialRight",k],["rearg",E]],xt="[object Arguments]",oe="[object Array]",De="[object AsyncFunction]",_e="[object Boolean]",we="[object Date]",Me="[object DOMException]",ut="[object Error]",Pt="[object Function]",_t="[object GeneratorFunction]",$t="[object Map]",de="[object Number]",Be="[object Null]",ae="[object Object]",Te="[object Promise]",mn="[object Proxy]",Ne="[object RegExp]",Le="[object Set]",zt="[object String]",vn="[object Symbol]",Ue="[object Undefined]",je="[object WeakMap]",gs="[object WeakSet]",xn="[object ArrayBuffer]",yn="[object DataView]",Je="[object Float32Array]",ft="[object Float64Array]",Q="[object Int8Array]",pt="[object Int16Array]",Lt="[object Int32Array]",nt="[object Uint8Array]",mt="[object Uint8ClampedArray]",ct="[object Uint16Array]",Ot="[object Uint32Array]",Rt=/\b__p \+= '';/g,qt=/\b(__p \+=) '' \+/g,Ft=/(__e\(.*?\)|\b__t\)) \+\n'';/g,Ct=/&(?:amp|lt|gt|quot|#39);/g,Zt=/[&<>"']/g,Jt=RegExp(Ct.source),N=RegExp(Zt.source),U=/<%-([\s\S]+?)%>/g,K=/<%([\s\S]+?)%>/g,X=/<%=([\s\S]+?)%>/g,st=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,vt=/^\w*$/,gt=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Dt=/[\\^$.*+?()[\]{}|]/g,yt=RegExp(Dt.source),kt=/^\s+/,Mt=/\s/,Ht=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Kt=/\{\n\/\* \[wrapped with (.+)\] \*/,Nt=/,? & /,le=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Ce=/[()=,{}\[\]\/\s]/,Ee=/\\(\\)?/g,He=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,We=/\w*$/,Tt=/^[-+]0x[0-9a-f]+$/i,ht=/^0b[01]+$/i,wt=/^\[object .+?Constructor\]$/,Et=/^0o[0-7]+$/i,Xt=/^(?:0|[1-9]\d*)$/,ie=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Gt=/($^)/,$e=/['\n\r\u2028\u2029\\]/g,tn="\\ud800-\\udfff",Ln="\\u0300-\\u036f",Fn="\\ufe20-\\ufe2f",ge="\\u20d0-\\u20ff",fe=Ln+Fn+ge,Cs="\\u2700-\\u27bf",bi="a-z\\xdf-\\xf6\\xf8-\\xff",Pr="\\xac\\xb1\\xd7\\xf7",es="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",sl="\\u2000-\\u206f",il=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Cr="A-Z\\xc0-\\xd6\\xd8-\\xde",kr="\\ufe0e\\ufe0f",Mr=Pr+es+sl+il,Di="['\u2019]",rl="["+tn+"]",jr="["+Mr+"]",ks="["+fe+"]",Rr="\\d+",ol="["+Cs+"]",Fr="["+bi+"]",Nr="[^"+tn+Mr+Rr+Cs+bi+Cr+"]",Oi="\\ud83c[\\udffb-\\udfff]",al="(?:"+ks+"|"+Oi+")",Hr="[^"+tn+"]",Li="(?:\\ud83c[\\udde6-\\uddff]){2}",Si="[\\ud800-\\udbff][\\udc00-\\udfff]",ns="["+Cr+"]",$r="\\u200d",qr="(?:"+Fr+"|"+Nr+")",ll="(?:"+ns+"|"+Nr+")",Gr="(?:"+Di+"(?:d|ll|m|re|s|t|ve))?",Br="(?:"+Di+"(?:D|LL|M|RE|S|T|VE))?",Ur=al+"?",Wr="["+kr+"]?",pl="(?:"+$r+"(?:"+[Hr,Li,Si].join("|")+")"+Wr+Ur+")*",ul="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",cl="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",Zr=Wr+Ur+pl,hl="(?:"+[ol,Li,Si].join("|")+")"+Zr,fl="(?:"+[Hr+ks+"?",ks,Li,Si,rl].join("|")+")",dl=RegExp(Di,"g"),gl=RegExp(ks,"g"),wi=RegExp(Oi+"(?="+Oi+")|"+fl+Zr,"g"),ml=RegExp([ns+"?"+Fr+"+"+Gr+"(?="+[jr,ns,"$"].join("|")+")",ll+"+"+Br+"(?="+[jr,ns+qr,"$"].join("|")+")",ns+"?"+qr+"+"+Gr,ns+"+"+Br,cl,ul,Rr,hl].join("|"),"g"),vl=RegExp("["+$r+tn+fe+kr+"]"),yl=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Tl=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],bl=-1,ye={};ye[Je]=ye[ft]=ye[Q]=ye[pt]=ye[Lt]=ye[nt]=ye[mt]=ye[ct]=ye[Ot]=!0,ye[xt]=ye[oe]=ye[xn]=ye[_e]=ye[yn]=ye[we]=ye[ut]=ye[Pt]=ye[$t]=ye[de]=ye[ae]=ye[Ne]=ye[Le]=ye[zt]=ye[je]=!1;var ve={};ve[xt]=ve[oe]=ve[xn]=ve[yn]=ve[_e]=ve[we]=ve[Je]=ve[ft]=ve[Q]=ve[pt]=ve[Lt]=ve[$t]=ve[de]=ve[ae]=ve[Ne]=ve[Le]=ve[zt]=ve[vn]=ve[nt]=ve[mt]=ve[ct]=ve[Ot]=!0,ve[ut]=ve[Pt]=ve[je]=!1;var Dl={\u00C0:"A",\u00C1:"A",\u00C2:"A",\u00C3:"A",\u00C4:"A",\u00C5:"A",\u00E0:"a",\u00E1:"a",\u00E2:"a",\u00E3:"a",\u00E4:"a",\u00E5:"a",\u00C7:"C",\u00E7:"c",\u00D0:"D",\u00F0:"d",\u00C8:"E",\u00C9:"E",\u00CA:"E",\u00CB:"E",\u00E8:"e",\u00E9:"e",\u00EA:"e",\u00EB:"e",\u00CC:"I",\u00CD:"I",\u00CE:"I",\u00CF:"I",\u00EC:"i",\u00ED:"i",\u00EE:"i",\u00EF:"i",\u00D1:"N",\u00F1:"n",\u00D2:"O",\u00D3:"O",\u00D4:"O",\u00D5:"O",\u00D6:"O",\u00D8:"O",\u00F2:"o",\u00F3:"o",\u00F4:"o",\u00F5:"o",\u00F6:"o",\u00F8:"o",\u00D9:"U",\u00DA:"U",\u00DB:"U",\u00DC:"U",\u00F9:"u",\u00FA:"u",\u00FB:"u",\u00FC:"u",\u00DD:"Y",\u00FD:"y",\u00FF:"y",\u00C6:"Ae",\u00E6:"ae",\u00DE:"Th",\u00FE:"th",\u00DF:"ss",\u0100:"A",\u0102:"A",\u0104:"A",\u0101:"a",\u0103:"a",\u0105:"a",\u0106:"C",\u0108:"C",\u010A:"C",\u010C:"C",\u0107:"c",\u0109:"c",\u010B:"c",\u010D:"c",\u010E:"D",\u0110:"D",\u010F:"d",\u0111:"d",\u0112:"E",\u0114:"E",\u0116:"E",\u0118:"E",\u011A:"E",\u0113:"e",\u0115:"e",\u0117:"e",\u0119:"e",\u011B:"e",\u011C:"G",\u011E:"G",\u0120:"G",\u0122:"G",\u011D:"g",\u011F:"g",\u0121:"g",\u0123:"g",\u0124:"H",\u0126:"H",\u0125:"h",\u0127:"h",\u0128:"I",\u012A:"I",\u012C:"I",\u012E:"I",\u0130:"I",\u0129:"i",\u012B:"i",\u012D:"i",\u012F:"i",\u0131:"i",\u0134:"J",\u0135:"j",\u0136:"K",\u0137:"k",\u0138:"k",\u0139:"L",\u013B:"L",\u013D:"L",\u013F:"L",\u0141:"L",\u013A:"l",\u013C:"l",\u013E:"l",\u0140:"l",\u0142:"l",\u0143:"N",\u0145:"N",\u0147:"N",\u014A:"N",\u0144:"n",\u0146:"n",\u0148:"n",\u014B:"n",\u014C:"O",\u014E:"O",\u0150:"O",\u014D:"o",\u014F:"o",\u0151:"o",\u0154:"R",\u0156:"R",\u0158:"R",\u0155:"r",\u0157:"r",\u0159:"r",\u015A:"S",\u015C:"S",\u015E:"S",\u0160:"S",\u015B:"s",\u015D:"s",\u015F:"s",\u0161:"s",\u0162:"T",\u0164:"T",\u0166:"T",\u0163:"t",\u0165:"t",\u0167:"t",\u0168:"U",\u016A:"U",\u016C:"U",\u016E:"U",\u0170:"U",\u0172:"U",\u0169:"u",\u016B:"u",\u016D:"u",\u016F:"u",\u0171:"u",\u0173:"u",\u0174:"W",\u0175:"w",\u0176:"Y",\u0177:"y",\u0178:"Y",\u0179:"Z",\u017B:"Z",\u017D:"Z",\u017A:"z",\u017C:"z",\u017E:"z",\u0132:"IJ",\u0133:"ij",\u0152:"Oe",\u0153:"oe",\u0149:"'n",\u017F:"s"},Ol={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Ll={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Sl={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},wl=parseFloat,Al=parseInt,zr=typeof r.g=="object"&&r.g&&r.g.Object===Object&&r.g,xl=typeof self=="object"&&self&&self.Object===Object&&self,Re=zr||xl||Function("return this")(),Kr=g&&!g.nodeType&&g,ms=Kr&&!0&&w&&!w.nodeType&&w,Jr=ms&&ms.exports===Kr,Ai=Jr&&zr.process,ln=function(){try{var J=ms&&ms.require&&ms.require("util").types;return J||Ai&&Ai.binding&&Ai.binding("util")}catch(rt){}}(),Vr=ln&&ln.isArrayBuffer,Yr=ln&&ln.isDate,Xr=ln&&ln.isMap,Qr=ln&&ln.isRegExp,to=ln&&ln.isSet,eo=ln&&ln.isTypedArray;function en(J,rt,et){switch(et.length){case 0:return J.call(rt);case 1:return J.call(rt,et[0]);case 2:return J.call(rt,et[0],et[1]);case 3:return J.call(rt,et[0],et[1],et[2])}return J.apply(rt,et)}function _l(J,rt,et,It){for(var Vt=-1,pe=J==null?0:J.length;++Vt<pe;){var Ie=J[Vt];rt(It,Ie,et(Ie),J)}return It}function pn(J,rt){for(var et=-1,It=J==null?0:J.length;++et<It&&rt(J[et],et,J)!==!1;);return J}function El(J,rt){for(var et=J==null?0:J.length;et--&&rt(J[et],et,J)!==!1;);return J}function no(J,rt){for(var et=-1,It=J==null?0:J.length;++et<It;)if(!rt(J[et],et,J))return!1;return!0}function Nn(J,rt){for(var et=-1,It=J==null?0:J.length,Vt=0,pe=[];++et<It;){var Ie=J[et];rt(Ie,et,J)&&(pe[Vt++]=Ie)}return pe}function Ms(J,rt){var et=J==null?0:J.length;return!!et&&ss(J,rt,0)>-1}function xi(J,rt,et){for(var It=-1,Vt=J==null?0:J.length;++It<Vt;)if(et(rt,J[It]))return!0;return!1}function be(J,rt){for(var et=-1,It=J==null?0:J.length,Vt=Array(It);++et<It;)Vt[et]=rt(J[et],et,J);return Vt}function Hn(J,rt){for(var et=-1,It=rt.length,Vt=J.length;++et<It;)J[Vt+et]=rt[et];return J}function _i(J,rt,et,It){var Vt=-1,pe=J==null?0:J.length;for(It&&pe&&(et=J[++Vt]);++Vt<pe;)et=rt(et,J[Vt],Vt,J);return et}function Il(J,rt,et,It){var Vt=J==null?0:J.length;for(It&&Vt&&(et=J[--Vt]);Vt--;)et=rt(et,J[Vt],Vt,J);return et}function Ei(J,rt){for(var et=-1,It=J==null?0:J.length;++et<It;)if(rt(J[et],et,J))return!0;return!1}var Pl=Ii("length");function Cl(J){return J.split("")}function kl(J){return J.match(le)||[]}function so(J,rt,et){var It;return et(J,function(Vt,pe,Ie){if(rt(Vt,pe,Ie))return It=pe,!1}),It}function js(J,rt,et,It){for(var Vt=J.length,pe=et+(It?1:-1);It?pe--:++pe<Vt;)if(rt(J[pe],pe,J))return pe;return-1}function ss(J,rt,et){return rt===rt?Wl(J,rt,et):js(J,io,et)}function Ml(J,rt,et,It){for(var Vt=et-1,pe=J.length;++Vt<pe;)if(It(J[Vt],rt))return Vt;return-1}function io(J){return J!==J}function ro(J,rt){var et=J==null?0:J.length;return et?Ci(J,rt)/et:it}function Ii(J){return function(rt){return rt==null?s:rt[J]}}function Pi(J){return function(rt){return J==null?s:J[rt]}}function oo(J,rt,et,It,Vt){return Vt(J,function(pe,Ie,me){et=It?(It=!1,pe):rt(et,pe,Ie,me)}),et}function jl(J,rt){var et=J.length;for(J.sort(rt);et--;)J[et]=J[et].value;return J}function Ci(J,rt){for(var et,It=-1,Vt=J.length;++It<Vt;){var pe=rt(J[It]);pe!==s&&(et=et===s?pe:et+pe)}return et}function ki(J,rt){for(var et=-1,It=Array(J);++et<J;)It[et]=rt(et);return It}function Rl(J,rt){return be(rt,function(et){return[et,J[et]]})}function ao(J){return J&&J.slice(0,co(J)+1).replace(kt,"")}function nn(J){return function(rt){return J(rt)}}function Mi(J,rt){return be(rt,function(et){return J[et]})}function vs(J,rt){return J.has(rt)}function lo(J,rt){for(var et=-1,It=J.length;++et<It&&ss(rt,J[et],0)>-1;);return et}function po(J,rt){for(var et=J.length;et--&&ss(rt,J[et],0)>-1;);return et}function Fl(J,rt){for(var et=J.length,It=0;et--;)J[et]===rt&&++It;return It}var Nl=Pi(Dl),Hl=Pi(Ol);function $l(J){return"\\"+Sl[J]}function ql(J,rt){return J==null?s:J[rt]}function is(J){return vl.test(J)}function Gl(J){return yl.test(J)}function Bl(J){for(var rt,et=[];!(rt=J.next()).done;)et.push(rt.value);return et}function ji(J){var rt=-1,et=Array(J.size);return J.forEach(function(It,Vt){et[++rt]=[Vt,It]}),et}function uo(J,rt){return function(et){return J(rt(et))}}function $n(J,rt){for(var et=-1,It=J.length,Vt=0,pe=[];++et<It;){var Ie=J[et];(Ie===rt||Ie===o)&&(J[et]=o,pe[Vt++]=et)}return pe}function Rs(J){var rt=-1,et=Array(J.size);return J.forEach(function(It){et[++rt]=It}),et}function Ul(J){var rt=-1,et=Array(J.size);return J.forEach(function(It){et[++rt]=[It,It]}),et}function Wl(J,rt,et){for(var It=et-1,Vt=J.length;++It<Vt;)if(J[It]===rt)return It;return-1}function Zl(J,rt,et){for(var It=et+1;It--;)if(J[It]===rt)return It;return It}function rs(J){return is(J)?Kl(J):Pl(J)}function Tn(J){return is(J)?Jl(J):Cl(J)}function co(J){for(var rt=J.length;rt--&&Mt.test(J.charAt(rt)););return rt}var zl=Pi(Ll);function Kl(J){for(var rt=wi.lastIndex=0;wi.test(J);)++rt;return rt}function Jl(J){return J.match(wi)||[]}function Vl(J){return J.match(ml)||[]}var Yl=function J(rt){rt=rt==null?Re:Fs.defaults(Re.Object(),rt,Fs.pick(Re,Tl));var et=rt.Array,It=rt.Date,Vt=rt.Error,pe=rt.Function,Ie=rt.Math,me=rt.Object,Ri=rt.RegExp,Xl=rt.String,un=rt.TypeError,Ns=et.prototype,Ql=pe.prototype,os=me.prototype,Hs=rt["__core-js_shared__"],$s=Ql.toString,he=os.hasOwnProperty,tp=0,ho=function(){var t=/[^.]+$/.exec(Hs&&Hs.keys&&Hs.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),qs=os.toString,ep=$s.call(me),np=Re._,sp=Ri("^"+$s.call(he).replace(Dt,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Gs=Jr?rt.Buffer:s,qn=rt.Symbol,Bs=rt.Uint8Array,fo=Gs?Gs.allocUnsafe:s,Us=uo(me.getPrototypeOf,me),go=me.create,mo=os.propertyIsEnumerable,Ws=Ns.splice,vo=qn?qn.isConcatSpreadable:s,ys=qn?qn.iterator:s,zn=qn?qn.toStringTag:s,Zs=function(){try{var t=Xn(me,"defineProperty");return t({},"",{}),t}catch(e){}}(),ip=rt.clearTimeout!==Re.clearTimeout&&rt.clearTimeout,rp=It&&It.now!==Re.Date.now&&It.now,op=rt.setTimeout!==Re.setTimeout&&rt.setTimeout,zs=Ie.ceil,Ks=Ie.floor,Fi=me.getOwnPropertySymbols,ap=Gs?Gs.isBuffer:s,yo=rt.isFinite,lp=Ns.join,pp=uo(me.keys,me),Pe=Ie.max,qe=Ie.min,up=It.now,cp=rt.parseInt,To=Ie.random,hp=Ns.reverse,Ni=Xn(rt,"DataView"),Ts=Xn(rt,"Map"),Hi=Xn(rt,"Promise"),as=Xn(rt,"Set"),bs=Xn(rt,"WeakMap"),Ds=Xn(me,"create"),Js=bs&&new bs,ls={},fp=Qn(Ni),dp=Qn(Ts),gp=Qn(Hi),mp=Qn(as),vp=Qn(bs),Vs=qn?qn.prototype:s,Os=Vs?Vs.valueOf:s,bo=Vs?Vs.toString:s;function j(t){if(Se(t)&&!Yt(t)&&!(t instanceof se)){if(t instanceof cn)return t;if(he.call(t,"__wrapped__"))return Da(t)}return new cn(t)}var ps=function(){function t(){}return function(e){if(!Oe(e))return{};if(go)return go(e);t.prototype=e;var l=new t;return t.prototype=s,l}}();function Ys(){}function cn(t,e){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=s}j.templateSettings={escape:U,evaluate:K,interpolate:X,variable:"",imports:{_:j}},j.prototype=Ys.prototype,j.prototype.constructor=j,cn.prototype=ps(Ys.prototype),cn.prototype.constructor=cn;function se(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=lt,this.__views__=[]}function yp(){var t=new se(this.__wrapped__);return t.__actions__=Ve(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Ve(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Ve(this.__views__),t}function Tp(){if(this.__filtered__){var t=new se(this);t.__dir__=-1,t.__filtered__=!0}else t=this.clone(),t.__dir__*=-1;return t}function bp(){var t=this.__wrapped__.value(),e=this.__dir__,l=Yt(t),L=e<0,C=l?t.length:0,R=Cu(0,C,this.__views__),B=R.start,z=R.end,V=z-B,ot=L?z:B-1,at=this.__iteratees__,dt=at.length,At=0,jt=qe(V,this.__takeCount__);if(!l||!L&&C==V&&jt==V)return Uo(t,this.__actions__);var Ut=[];t:for(;V--&&At<jt;){ot+=e;for(var te=-1,Wt=t[ot];++te<dt;){var ne=at[te],re=ne.iteratee,on=ne.type,Ke=re(Wt);if(on==$)Wt=Ke;else if(!Ke){if(on==M)continue t;break t}}Ut[At++]=Wt}return Ut}se.prototype=ps(Ys.prototype),se.prototype.constructor=se;function Kn(t){var e=-1,l=t==null?0:t.length;for(this.clear();++e<l;){var L=t[e];this.set(L[0],L[1])}}function Dp(){this.__data__=Ds?Ds(null):{},this.size=0}function Op(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}function Lp(t){var e=this.__data__;if(Ds){var l=e[t];return l===u?s:l}return he.call(e,t)?e[t]:s}function Sp(t){var e=this.__data__;return Ds?e[t]!==s:he.call(e,t)}function wp(t,e){var l=this.__data__;return this.size+=this.has(t)?0:1,l[t]=Ds&&e===s?u:e,this}Kn.prototype.clear=Dp,Kn.prototype.delete=Op,Kn.prototype.get=Lp,Kn.prototype.has=Sp,Kn.prototype.set=wp;function _n(t){var e=-1,l=t==null?0:t.length;for(this.clear();++e<l;){var L=t[e];this.set(L[0],L[1])}}function Ap(){this.__data__=[],this.size=0}function xp(t){var e=this.__data__,l=Xs(e,t);if(l<0)return!1;var L=e.length-1;return l==L?e.pop():Ws.call(e,l,1),--this.size,!0}function _p(t){var e=this.__data__,l=Xs(e,t);return l<0?s:e[l][1]}function Ep(t){return Xs(this.__data__,t)>-1}function Ip(t,e){var l=this.__data__,L=Xs(l,t);return L<0?(++this.size,l.push([t,e])):l[L][1]=e,this}_n.prototype.clear=Ap,_n.prototype.delete=xp,_n.prototype.get=_p,_n.prototype.has=Ep,_n.prototype.set=Ip;function En(t){var e=-1,l=t==null?0:t.length;for(this.clear();++e<l;){var L=t[e];this.set(L[0],L[1])}}function Pp(){this.size=0,this.__data__={hash:new Kn,map:new(Ts||_n),string:new Kn}}function Cp(t){var e=ui(this,t).delete(t);return this.size-=e?1:0,e}function kp(t){return ui(this,t).get(t)}function Mp(t){return ui(this,t).has(t)}function jp(t,e){var l=ui(this,t),L=l.size;return l.set(t,e),this.size+=l.size==L?0:1,this}En.prototype.clear=Pp,En.prototype.delete=Cp,En.prototype.get=kp,En.prototype.has=Mp,En.prototype.set=jp;function Jn(t){var e=-1,l=t==null?0:t.length;for(this.__data__=new En;++e<l;)this.add(t[e])}function Rp(t){return this.__data__.set(t,u),this}function Fp(t){return this.__data__.has(t)}Jn.prototype.add=Jn.prototype.push=Rp,Jn.prototype.has=Fp;function bn(t){var e=this.__data__=new _n(t);this.size=e.size}function Np(){this.__data__=new _n,this.size=0}function Hp(t){var e=this.__data__,l=e.delete(t);return this.size=e.size,l}function $p(t){return this.__data__.get(t)}function qp(t){return this.__data__.has(t)}function Gp(t,e){var l=this.__data__;if(l instanceof _n){var L=l.__data__;if(!Ts||L.length<c-1)return L.push([t,e]),this.size=++l.size,this;l=this.__data__=new En(L)}return l.set(t,e),this.size=l.size,this}bn.prototype.clear=Np,bn.prototype.delete=Hp,bn.prototype.get=$p,bn.prototype.has=qp,bn.prototype.set=Gp;function Do(t,e){var l=Yt(t),L=!l&&ts(t),C=!l&&!L&&Zn(t),R=!l&&!L&&!C&&fs(t),B=l||L||C||R,z=B?ki(t.length,Xl):[],V=z.length;for(var ot in t)(e||he.call(t,ot))&&!(B&&(ot=="length"||C&&(ot=="offset"||ot=="parent")||R&&(ot=="buffer"||ot=="byteLength"||ot=="byteOffset")||kn(ot,V)))&&z.push(ot);return z}function Oo(t){var e=t.length;return e?t[Vi(0,e-1)]:s}function Bp(t,e){return ci(Ve(t),Vn(e,0,t.length))}function Up(t){return ci(Ve(t))}function $i(t,e,l){(l!==s&&!Dn(t[e],l)||l===s&&!(e in t))&&In(t,e,l)}function Ls(t,e,l){var L=t[e];(!(he.call(t,e)&&Dn(L,l))||l===s&&!(e in t))&&In(t,e,l)}function Xs(t,e){for(var l=t.length;l--;)if(Dn(t[l][0],e))return l;return-1}function Wp(t,e,l,L){return Gn(t,function(C,R,B){e(L,C,l(C),B)}),L}function Lo(t,e){return t&&wn(e,ke(e),t)}function Zp(t,e){return t&&wn(e,Xe(e),t)}function In(t,e,l){e=="__proto__"&&Zs?Zs(t,e,{configurable:!0,enumerable:!0,value:l,writable:!0}):t[e]=l}function qi(t,e){for(var l=-1,L=e.length,C=et(L),R=t==null;++l<L;)C[l]=R?s:Dr(t,e[l]);return C}function Vn(t,e,l){return t===t&&(l!==s&&(t=t<=l?t:l),e!==s&&(t=t>=e?t:e)),t}function hn(t,e,l,L,C,R){var B,z=e&v,V=e&f,ot=e&h;if(l&&(B=C?l(t,L,C,R):l(t)),B!==s)return B;if(!Oe(t))return t;var at=Yt(t);if(at){if(B=Mu(t),!z)return Ve(t,B)}else{var dt=Ge(t),At=dt==Pt||dt==_t;if(Zn(t))return zo(t,z);if(dt==ae||dt==xt||At&&!C){if(B=V||At?{}:ha(t),!z)return V?Lu(t,Zp(B,t)):Ou(t,Lo(B,t))}else{if(!ve[dt])return C?t:{};B=ju(t,dt,z)}}R||(R=new bn);var jt=R.get(t);if(jt)return jt;R.set(t,B),qa(t)?t.forEach(function(Wt){B.add(hn(Wt,e,l,Wt,t,R))}):Ha(t)&&t.forEach(function(Wt,ne){B.set(ne,hn(Wt,e,l,ne,t,R))});var Ut=ot?V?ar:or:V?Xe:ke,te=at?s:Ut(t);return pn(te||t,function(Wt,ne){te&&(ne=Wt,Wt=t[ne]),Ls(B,ne,hn(Wt,e,l,ne,t,R))}),B}function zp(t){var e=ke(t);return function(l){return So(l,t,e)}}function So(t,e,l){var L=l.length;if(t==null)return!L;for(t=me(t);L--;){var C=l[L],R=e[C],B=t[C];if(B===s&&!(C in t)||!R(B))return!1}return!0}function wo(t,e,l){if(typeof t!="function")throw new un(a);return Is(function(){t.apply(s,l)},e)}function Ss(t,e,l,L){var C=-1,R=Ms,B=!0,z=t.length,V=[],ot=e.length;if(!z)return V;l&&(e=be(e,nn(l))),L?(R=xi,B=!1):e.length>=c&&(R=vs,B=!1,e=new Jn(e));t:for(;++C<z;){var at=t[C],dt=l==null?at:l(at);if(at=L||at!==0?at:0,B&&dt===dt){for(var At=ot;At--;)if(e[At]===dt)continue t;V.push(at)}else R(e,dt,L)||V.push(at)}return V}var Gn=Xo(Sn),Ao=Xo(Bi,!0);function Kp(t,e){var l=!0;return Gn(t,function(L,C,R){return l=!!e(L,C,R),l}),l}function Qs(t,e,l){for(var L=-1,C=t.length;++L<C;){var R=t[L],B=e(R);if(B!=null&&(z===s?B===B&&!rn(B):l(B,z)))var z=B,V=R}return V}function Jp(t,e,l,L){var C=t.length;for(l=Qt(l),l<0&&(l=-l>C?0:C+l),L=L===s||L>C?C:Qt(L),L<0&&(L+=C),L=l>L?0:Ba(L);l<L;)t[l++]=e;return t}function xo(t,e){var l=[];return Gn(t,function(L,C,R){e(L,C,R)&&l.push(L)}),l}function Fe(t,e,l,L,C){var R=-1,B=t.length;for(l||(l=Fu),C||(C=[]);++R<B;){var z=t[R];e>0&&l(z)?e>1?Fe(z,e-1,l,L,C):Hn(C,z):L||(C[C.length]=z)}return C}var Gi=Qo(),_o=Qo(!0);function Sn(t,e){return t&&Gi(t,e,ke)}function Bi(t,e){return t&&_o(t,e,ke)}function ti(t,e){return Nn(e,function(l){return Mn(t[l])})}function Yn(t,e){e=Un(e,t);for(var l=0,L=e.length;t!=null&&l<L;)t=t[An(e[l++])];return l&&l==L?t:s}function Eo(t,e,l){var L=e(t);return Yt(t)?L:Hn(L,l(t))}function Ze(t){return t==null?t===s?Ue:Be:zn&&zn in me(t)?Pu(t):Uu(t)}function Ui(t,e){return t>e}function Vp(t,e){return t!=null&&he.call(t,e)}function Yp(t,e){return t!=null&&e in me(t)}function Xp(t,e,l){return t>=qe(e,l)&&t<Pe(e,l)}function Wi(t,e,l){for(var L=l?xi:Ms,C=t[0].length,R=t.length,B=R,z=et(R),V=1/0,ot=[];B--;){var at=t[B];B&&e&&(at=be(at,nn(e))),V=qe(at.length,V),z[B]=!l&&(e||C>=120&&at.length>=120)?new Jn(B&&at):s}at=t[0];var dt=-1,At=z[0];t:for(;++dt<C&&ot.length<V;){var jt=at[dt],Ut=e?e(jt):jt;if(jt=l||jt!==0?jt:0,!(At?vs(At,Ut):L(ot,Ut,l))){for(B=R;--B;){var te=z[B];if(!(te?vs(te,Ut):L(t[B],Ut,l)))continue t}At&&At.push(Ut),ot.push(jt)}}return ot}function Qp(t,e,l,L){return Sn(t,function(C,R,B){e(L,l(C),R,B)}),L}function ws(t,e,l){e=Un(e,t),t=ma(t,e);var L=t==null?t:t[An(dn(e))];return L==null?s:en(L,t,l)}function Io(t){return Se(t)&&Ze(t)==xt}function tu(t){return Se(t)&&Ze(t)==xn}function eu(t){return Se(t)&&Ze(t)==we}function As(t,e,l,L,C){return t===e?!0:t==null||e==null||!Se(t)&&!Se(e)?t!==t&&e!==e:nu(t,e,l,L,As,C)}function nu(t,e,l,L,C,R){var B=Yt(t),z=Yt(e),V=B?oe:Ge(t),ot=z?oe:Ge(e);V=V==xt?ae:V,ot=ot==xt?ae:ot;var at=V==ae,dt=ot==ae,At=V==ot;if(At&&Zn(t)){if(!Zn(e))return!1;B=!0,at=!1}if(At&&!at)return R||(R=new bn),B||fs(t)?pa(t,e,l,L,C,R):Eu(t,e,V,l,L,C,R);if(!(l&T)){var jt=at&&he.call(t,"__wrapped__"),Ut=dt&&he.call(e,"__wrapped__");if(jt||Ut){var te=jt?t.value():t,Wt=Ut?e.value():e;return R||(R=new bn),C(te,Wt,l,L,R)}}return At?(R||(R=new bn),Iu(t,e,l,L,C,R)):!1}function su(t){return Se(t)&&Ge(t)==$t}function Zi(t,e,l,L){var C=l.length,R=C,B=!L;if(t==null)return!R;for(t=me(t);C--;){var z=l[C];if(B&&z[2]?z[1]!==t[z[0]]:!(z[0]in t))return!1}for(;++C<R;){z=l[C];var V=z[0],ot=t[V],at=z[1];if(B&&z[2]){if(ot===s&&!(V in t))return!1}else{var dt=new bn;if(L)var At=L(ot,at,V,t,e,dt);if(!(At===s?As(at,ot,T|y,L,dt):At))return!1}}return!0}function Po(t){if(!Oe(t)||Hu(t))return!1;var e=Mn(t)?sp:wt;return e.test(Qn(t))}function iu(t){return Se(t)&&Ze(t)==Ne}function ru(t){return Se(t)&&Ge(t)==Le}function ou(t){return Se(t)&&vi(t.length)&&!!ye[Ze(t)]}function Co(t){return typeof t=="function"?t:t==null?Qe:typeof t=="object"?Yt(t)?jo(t[0],t[1]):Mo(t):tl(t)}function zi(t){if(!Es(t))return pp(t);var e=[];for(var l in me(t))he.call(t,l)&&l!="constructor"&&e.push(l);return e}function au(t){if(!Oe(t))return Bu(t);var e=Es(t),l=[];for(var L in t)L=="constructor"&&(e||!he.call(t,L))||l.push(L);return l}function Ki(t,e){return t<e}function ko(t,e){var l=-1,L=Ye(t)?et(t.length):[];return Gn(t,function(C,R,B){L[++l]=e(C,R,B)}),L}function Mo(t){var e=pr(t);return e.length==1&&e[0][2]?da(e[0][0],e[0][1]):function(l){return l===t||Zi(l,t,e)}}function jo(t,e){return cr(t)&&fa(e)?da(An(t),e):function(l){var L=Dr(l,t);return L===s&&L===e?Or(l,t):As(e,L,T|y)}}function ei(t,e,l,L,C){t!==e&&Gi(e,function(R,B){if(C||(C=new bn),Oe(R))lu(t,e,B,l,ei,L,C);else{var z=L?L(fr(t,B),R,B+"",t,e,C):s;z===s&&(z=R),$i(t,B,z)}},Xe)}function lu(t,e,l,L,C,R,B){var z=fr(t,l),V=fr(e,l),ot=B.get(V);if(ot){$i(t,l,ot);return}var at=R?R(z,V,l+"",t,e,B):s,dt=at===s;if(dt){var At=Yt(V),jt=!At&&Zn(V),Ut=!At&&!jt&&fs(V);at=V,At||jt||Ut?Yt(z)?at=z:Ae(z)?at=Ve(z):jt?(dt=!1,at=zo(V,!0)):Ut?(dt=!1,at=Ko(V,!0)):at=[]:Ps(V)||ts(V)?(at=z,ts(z)?at=Ua(z):(!Oe(z)||Mn(z))&&(at=ha(V))):dt=!1}dt&&(B.set(V,at),C(at,V,L,R,B),B.delete(V)),$i(t,l,at)}function Ro(t,e){var l=t.length;if(l)return e+=e<0?l:0,kn(e,l)?t[e]:s}function Fo(t,e,l){e.length?e=be(e,function(R){return Yt(R)?function(B){return Yn(B,R.length===1?R[0]:R)}:R}):e=[Qe];var L=-1;e=be(e,nn(Bt()));var C=ko(t,function(R,B,z){var V=be(e,function(ot){return ot(R)});return{criteria:V,index:++L,value:R}});return jl(C,function(R,B){return Du(R,B,l)})}function pu(t,e){return No(t,e,function(l,L){return Or(t,L)})}function No(t,e,l){for(var L=-1,C=e.length,R={};++L<C;){var B=e[L],z=Yn(t,B);l(z,B)&&xs(R,Un(B,t),z)}return R}function uu(t){return function(e){return Yn(e,t)}}function Ji(t,e,l,L){var C=L?Ml:ss,R=-1,B=e.length,z=t;for(t===e&&(e=Ve(e)),l&&(z=be(t,nn(l)));++R<B;)for(var V=0,ot=e[R],at=l?l(ot):ot;(V=C(z,at,V,L))>-1;)z!==t&&Ws.call(z,V,1),Ws.call(t,V,1);return t}function Ho(t,e){for(var l=t?e.length:0,L=l-1;l--;){var C=e[l];if(l==L||C!==R){var R=C;kn(C)?Ws.call(t,C,1):Qi(t,C)}}return t}function Vi(t,e){return t+Ks(To()*(e-t+1))}function cu(t,e,l,L){for(var C=-1,R=Pe(zs((e-t)/(l||1)),0),B=et(R);R--;)B[L?R:++C]=t,t+=l;return B}function Yi(t,e){var l="";if(!t||e<1||e>G)return l;do e%2&&(l+=t),e=Ks(e/2),e&&(t+=t);while(e);return l}function ee(t,e){return dr(ga(t,e,Qe),t+"")}function hu(t){return Oo(ds(t))}function fu(t,e){var l=ds(t);return ci(l,Vn(e,0,l.length))}function xs(t,e,l,L){if(!Oe(t))return t;e=Un(e,t);for(var C=-1,R=e.length,B=R-1,z=t;z!=null&&++C<R;){var V=An(e[C]),ot=l;if(V==="__proto__"||V==="constructor"||V==="prototype")return t;if(C!=B){var at=z[V];ot=L?L(at,V,z):s,ot===s&&(ot=Oe(at)?at:kn(e[C+1])?[]:{})}Ls(z,V,ot),z=z[V]}return t}var $o=Js?function(t,e){return Js.set(t,e),t}:Qe,du=Zs?function(t,e){return Zs(t,"toString",{configurable:!0,enumerable:!1,value:Sr(e),writable:!0})}:Qe;function gu(t){return ci(ds(t))}function fn(t,e,l){var L=-1,C=t.length;e<0&&(e=-e>C?0:C+e),l=l>C?C:l,l<0&&(l+=C),C=e>l?0:l-e>>>0,e>>>=0;for(var R=et(C);++L<C;)R[L]=t[L+e];return R}function mu(t,e){var l;return Gn(t,function(L,C,R){return l=e(L,C,R),!l}),!!l}function ni(t,e,l){var L=0,C=t==null?L:t.length;if(typeof e=="number"&&e===e&&C<=bt){for(;L<C;){var R=L+C>>>1,B=t[R];B!==null&&!rn(B)&&(l?B<=e:B<e)?L=R+1:C=R}return C}return Xi(t,e,Qe,l)}function Xi(t,e,l,L){var C=0,R=t==null?0:t.length;if(R===0)return 0;e=l(e);for(var B=e!==e,z=e===null,V=rn(e),ot=e===s;C<R;){var at=Ks((C+R)/2),dt=l(t[at]),At=dt!==s,jt=dt===null,Ut=dt===dt,te=rn(dt);if(B)var Wt=L||Ut;else ot?Wt=Ut&&(L||At):z?Wt=Ut&&At&&(L||!jt):V?Wt=Ut&&At&&!jt&&(L||!te):jt||te?Wt=!1:Wt=L?dt<=e:dt<e;Wt?C=at+1:R=at}return qe(R,Y)}function qo(t,e){for(var l=-1,L=t.length,C=0,R=[];++l<L;){var B=t[l],z=e?e(B):B;if(!l||!Dn(z,V)){var V=z;R[C++]=B===0?0:B}}return R}function Go(t){return typeof t=="number"?t:rn(t)?it:+t}function sn(t){if(typeof t=="string")return t;if(Yt(t))return be(t,sn)+"";if(rn(t))return bo?bo.call(t):"";var e=t+"";return e=="0"&&1/t==-Z?"-0":e}function Bn(t,e,l){var L=-1,C=Ms,R=t.length,B=!0,z=[],V=z;if(l)B=!1,C=xi;else if(R>=c){var ot=e?null:xu(t);if(ot)return Rs(ot);B=!1,C=vs,V=new Jn}else V=e?[]:z;t:for(;++L<R;){var at=t[L],dt=e?e(at):at;if(at=l||at!==0?at:0,B&&dt===dt){for(var At=V.length;At--;)if(V[At]===dt)continue t;e&&V.push(dt),z.push(at)}else C(V,dt,l)||(V!==z&&V.push(dt),z.push(at))}return z}function Qi(t,e){return e=Un(e,t),t=ma(t,e),t==null||delete t[An(dn(e))]}function Bo(t,e,l,L){return xs(t,e,l(Yn(t,e)),L)}function si(t,e,l,L){for(var C=t.length,R=L?C:-1;(L?R--:++R<C)&&e(t[R],R,t););return l?fn(t,L?0:R,L?R+1:C):fn(t,L?R+1:0,L?C:R)}function Uo(t,e){var l=t;return l instanceof se&&(l=l.value()),_i(e,function(L,C){return C.func.apply(C.thisArg,Hn([L],C.args))},l)}function tr(t,e,l){var L=t.length;if(L<2)return L?Bn(t[0]):[];for(var C=-1,R=et(L);++C<L;)for(var B=t[C],z=-1;++z<L;)z!=C&&(R[C]=Ss(R[C]||B,t[z],e,l));return Bn(Fe(R,1),e,l)}function Wo(t,e,l){for(var L=-1,C=t.length,R=e.length,B={};++L<C;){var z=L<R?e[L]:s;l(B,t[L],z)}return B}function er(t){return Ae(t)?t:[]}function nr(t){return typeof t=="function"?t:Qe}function Un(t,e){return Yt(t)?t:cr(t,e)?[t]:ba(ue(t))}var vu=ee;function Wn(t,e,l){var L=t.length;return l=l===s?L:l,!e&&l>=L?t:fn(t,e,l)}var Zo=ip||function(t){return Re.clearTimeout(t)};function zo(t,e){if(e)return t.slice();var l=t.length,L=fo?fo(l):new t.constructor(l);return t.copy(L),L}function sr(t){var e=new t.constructor(t.byteLength);return new Bs(e).set(new Bs(t)),e}function yu(t,e){var l=e?sr(t.buffer):t.buffer;return new t.constructor(l,t.byteOffset,t.byteLength)}function Tu(t){var e=new t.constructor(t.source,We.exec(t));return e.lastIndex=t.lastIndex,e}function bu(t){return Os?me(Os.call(t)):{}}function Ko(t,e){var l=e?sr(t.buffer):t.buffer;return new t.constructor(l,t.byteOffset,t.length)}function Jo(t,e){if(t!==e){var l=t!==s,L=t===null,C=t===t,R=rn(t),B=e!==s,z=e===null,V=e===e,ot=rn(e);if(!z&&!ot&&!R&&t>e||R&&B&&V&&!z&&!ot||L&&B&&V||!l&&V||!C)return 1;if(!L&&!R&&!ot&&t<e||ot&&l&&C&&!L&&!R||z&&l&&C||!B&&C||!V)return-1}return 0}function Du(t,e,l){for(var L=-1,C=t.criteria,R=e.criteria,B=C.length,z=l.length;++L<B;){var V=Jo(C[L],R[L]);if(V){if(L>=z)return V;var ot=l[L];return V*(ot=="desc"?-1:1)}}return t.index-e.index}function Vo(t,e,l,L){for(var C=-1,R=t.length,B=l.length,z=-1,V=e.length,ot=Pe(R-B,0),at=et(V+ot),dt=!L;++z<V;)at[z]=e[z];for(;++C<B;)(dt||C<R)&&(at[l[C]]=t[C]);for(;ot--;)at[z++]=t[C++];return at}function Yo(t,e,l,L){for(var C=-1,R=t.length,B=-1,z=l.length,V=-1,ot=e.length,at=Pe(R-z,0),dt=et(at+ot),At=!L;++C<at;)dt[C]=t[C];for(var jt=C;++V<ot;)dt[jt+V]=e[V];for(;++B<z;)(At||C<R)&&(dt[jt+l[B]]=t[C++]);return dt}function Ve(t,e){var l=-1,L=t.length;for(e||(e=et(L));++l<L;)e[l]=t[l];return e}function wn(t,e,l,L){var C=!l;l||(l={});for(var R=-1,B=e.length;++R<B;){var z=e[R],V=L?L(l[z],t[z],z,l,t):s;V===s&&(V=t[z]),C?In(l,z,V):Ls(l,z,V)}return l}function Ou(t,e){return wn(t,ur(t),e)}function Lu(t,e){return wn(t,ua(t),e)}function ii(t,e){return function(l,L){var C=Yt(l)?_l:Wp,R=e?e():{};return C(l,t,Bt(L,2),R)}}function us(t){return ee(function(e,l){var L=-1,C=l.length,R=C>1?l[C-1]:s,B=C>2?l[2]:s;for(R=t.length>3&&typeof R=="function"?(C--,R):s,B&&ze(l[0],l[1],B)&&(R=C<3?s:R,C=1),e=me(e);++L<C;){var z=l[L];z&&t(e,z,L,R)}return e})}function Xo(t,e){return function(l,L){if(l==null)return l;if(!Ye(l))return t(l,L);for(var C=l.length,R=e?C:-1,B=me(l);(e?R--:++R<C)&&L(B[R],R,B)!==!1;);return l}}function Qo(t){return function(e,l,L){for(var C=-1,R=me(e),B=L(e),z=B.length;z--;){var V=B[t?z:++C];if(l(R[V],V,R)===!1)break}return e}}function Su(t,e,l){var L=e&b,C=_s(t);function R(){var B=this&&this!==Re&&this instanceof R?C:t;return B.apply(L?l:this,arguments)}return R}function ta(t){return function(e){e=ue(e);var l=is(e)?Tn(e):s,L=l?l[0]:e.charAt(0),C=l?Wn(l,1).join(""):e.slice(1);return L[t]()+C}}function cs(t){return function(e){return _i(Xa(Ya(e).replace(dl,"")),t,"")}}function _s(t){return function(){var e=arguments;switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3]);case 5:return new t(e[0],e[1],e[2],e[3],e[4]);case 6:return new t(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var l=ps(t.prototype),L=t.apply(l,e);return Oe(L)?L:l}}function wu(t,e,l){var L=_s(t);function C(){for(var R=arguments.length,B=et(R),z=R,V=hs(C);z--;)B[z]=arguments[z];var ot=R<3&&B[0]!==V&&B[R-1]!==V?[]:$n(B,V);if(R-=ot.length,R<l)return ra(t,e,ri,C.placeholder,s,B,ot,s,s,l-R);var at=this&&this!==Re&&this instanceof C?L:t;return en(at,this,B)}return C}function ea(t){return function(e,l,L){var C=me(e);if(!Ye(e)){var R=Bt(l,3);e=ke(e),l=function(z){return R(C[z],z,C)}}var B=t(e,l,L);return B>-1?C[R?e[B]:B]:s}}function na(t){return Cn(function(e){var l=e.length,L=l,C=cn.prototype.thru;for(t&&e.reverse();L--;){var R=e[L];if(typeof R!="function")throw new un(a);if(C&&!B&&pi(R)=="wrapper")var B=new cn([],!0)}for(L=B?L:l;++L<l;){R=e[L];var z=pi(R),V=z=="wrapper"?lr(R):s;V&&hr(V[0])&&V[1]==(I|O|A|E)&&!V[4].length&&V[9]==1?B=B[pi(V[0])].apply(B,V[3]):B=R.length==1&&hr(R)?B[z]():B.thru(R)}return function(){var ot=arguments,at=ot[0];if(B&&ot.length==1&&Yt(at))return B.plant(at).value();for(var dt=0,At=l?e[dt].apply(this,ot):at;++dt<l;)At=e[dt].call(this,At);return At}})}function ri(t,e,l,L,C,R,B,z,V,ot){var at=e&I,dt=e&b,At=e&_,jt=e&(O|S),Ut=e&x,te=At?s:_s(t);function Wt(){for(var ne=arguments.length,re=et(ne),on=ne;on--;)re[on]=arguments[on];if(jt)var Ke=hs(Wt),an=Fl(re,Ke);if(L&&(re=Vo(re,L,C,jt)),R&&(re=Yo(re,R,B,jt)),ne-=an,jt&&ne<ot){var xe=$n(re,Ke);return ra(t,e,ri,Wt.placeholder,l,re,xe,z,V,ot-ne)}var On=dt?l:this,Rn=At?On[t]:t;return ne=re.length,z?re=Wu(re,z):Ut&&ne>1&&re.reverse(),at&&V<ne&&(re.length=V),this&&this!==Re&&this instanceof Wt&&(Rn=te||_s(Rn)),Rn.apply(On,re)}return Wt}function sa(t,e){return function(l,L){return Qp(l,t,e(L),{})}}function oi(t,e){return function(l,L){var C;if(l===s&&L===s)return e;if(l!==s&&(C=l),L!==s){if(C===s)return L;typeof l=="string"||typeof L=="string"?(l=sn(l),L=sn(L)):(l=Go(l),L=Go(L)),C=t(l,L)}return C}}function ir(t){return Cn(function(e){return e=be(e,nn(Bt())),ee(function(l){var L=this;return t(e,function(C){return en(C,L,l)})})})}function ai(t,e){e=e===s?" ":sn(e);var l=e.length;if(l<2)return l?Yi(e,t):e;var L=Yi(e,zs(t/rs(e)));return is(e)?Wn(Tn(L),0,t).join(""):L.slice(0,t)}function Au(t,e,l,L){var C=e&b,R=_s(t);function B(){for(var z=-1,V=arguments.length,ot=-1,at=L.length,dt=et(at+V),At=this&&this!==Re&&this instanceof B?R:t;++ot<at;)dt[ot]=L[ot];for(;V--;)dt[ot++]=arguments[++z];return en(At,C?l:this,dt)}return B}function ia(t){return function(e,l,L){return L&&typeof L!="number"&&ze(e,l,L)&&(l=L=s),e=jn(e),l===s?(l=e,e=0):l=jn(l),L=L===s?e<l?1:-1:jn(L),cu(e,l,L,t)}}function li(t){return function(e,l){return typeof e=="string"&&typeof l=="string"||(e=gn(e),l=gn(l)),t(e,l)}}function ra(t,e,l,L,C,R,B,z,V,ot){var at=e&O,dt=at?B:s,At=at?s:B,jt=at?R:s,Ut=at?s:R;e|=at?A:k,e&=~(at?k:A),e&D||(e&=~(b|_));var te=[t,e,C,jt,dt,Ut,At,z,V,ot],Wt=l.apply(s,te);return hr(t)&&va(Wt,te),Wt.placeholder=L,ya(Wt,t,e)}function rr(t){var e=Ie[t];return function(l,L){if(l=gn(l),L=L==null?0:qe(Qt(L),292),L&&yo(l)){var C=(ue(l)+"e").split("e"),R=e(C[0]+"e"+(+C[1]+L));return C=(ue(R)+"e").split("e"),+(C[0]+"e"+(+C[1]-L))}return e(l)}}var xu=as&&1/Rs(new as([,-0]))[1]==Z?function(t){return new as(t)}:xr;function oa(t){return function(e){var l=Ge(e);return l==$t?ji(e):l==Le?Ul(e):Rl(e,t(e))}}function Pn(t,e,l,L,C,R,B,z){var V=e&_;if(!V&&typeof t!="function")throw new un(a);var ot=L?L.length:0;if(ot||(e&=~(A|k),L=C=s),B=B===s?B:Pe(Qt(B),0),z=z===s?z:Qt(z),ot-=C?C.length:0,e&k){var at=L,dt=C;L=C=s}var At=V?s:lr(t),jt=[t,e,l,L,C,at,dt,R,B,z];if(At&&Gu(jt,At),t=jt[0],e=jt[1],l=jt[2],L=jt[3],C=jt[4],z=jt[9]=jt[9]===s?V?0:t.length:Pe(jt[9]-ot,0),!z&&e&(O|S)&&(e&=~(O|S)),!e||e==b)var Ut=Su(t,e,l);else e==O||e==S?Ut=wu(t,e,z):(e==A||e==(b|A))&&!C.length?Ut=Au(t,e,l,L):Ut=ri.apply(s,jt);var te=At?$o:va;return ya(te(Ut,jt),t,e)}function aa(t,e,l,L){return t===s||Dn(t,os[l])&&!he.call(L,l)?e:t}function la(t,e,l,L,C,R){return Oe(t)&&Oe(e)&&(R.set(e,t),ei(t,e,s,la,R),R.delete(e)),t}function _u(t){return Ps(t)?s:t}function pa(t,e,l,L,C,R){var B=l&T,z=t.length,V=e.length;if(z!=V&&!(B&&V>z))return!1;var ot=R.get(t),at=R.get(e);if(ot&&at)return ot==e&&at==t;var dt=-1,At=!0,jt=l&y?new Jn:s;for(R.set(t,e),R.set(e,t);++dt<z;){var Ut=t[dt],te=e[dt];if(L)var Wt=B?L(te,Ut,dt,e,t,R):L(Ut,te,dt,t,e,R);if(Wt!==s){if(Wt)continue;At=!1;break}if(jt){if(!Ei(e,function(ne,re){if(!vs(jt,re)&&(Ut===ne||C(Ut,ne,l,L,R)))return jt.push(re)})){At=!1;break}}else if(!(Ut===te||C(Ut,te,l,L,R))){At=!1;break}}return R.delete(t),R.delete(e),At}function Eu(t,e,l,L,C,R,B){switch(l){case yn:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case xn:return!(t.byteLength!=e.byteLength||!R(new Bs(t),new Bs(e)));case _e:case we:case de:return Dn(+t,+e);case ut:return t.name==e.name&&t.message==e.message;case Ne:case zt:return t==e+"";case $t:var z=ji;case Le:var V=L&T;if(z||(z=Rs),t.size!=e.size&&!V)return!1;var ot=B.get(t);if(ot)return ot==e;L|=y,B.set(t,e);var at=pa(z(t),z(e),L,C,R,B);return B.delete(t),at;case vn:if(Os)return Os.call(t)==Os.call(e)}return!1}function Iu(t,e,l,L,C,R){var B=l&T,z=or(t),V=z.length,ot=or(e),at=ot.length;if(V!=at&&!B)return!1;for(var dt=V;dt--;){var At=z[dt];if(!(B?At in e:he.call(e,At)))return!1}var jt=R.get(t),Ut=R.get(e);if(jt&&Ut)return jt==e&&Ut==t;var te=!0;R.set(t,e),R.set(e,t);for(var Wt=B;++dt<V;){At=z[dt];var ne=t[At],re=e[At];if(L)var on=B?L(re,ne,At,e,t,R):L(ne,re,At,t,e,R);if(!(on===s?ne===re||C(ne,re,l,L,R):on)){te=!1;break}Wt||(Wt=At=="constructor")}if(te&&!Wt){var Ke=t.constructor,an=e.constructor;Ke!=an&&"constructor"in t&&"constructor"in e&&!(typeof Ke=="function"&&Ke instanceof Ke&&typeof an=="function"&&an instanceof an)&&(te=!1)}return R.delete(t),R.delete(e),te}function Cn(t){return dr(ga(t,s,Sa),t+"")}function or(t){return Eo(t,ke,ur)}function ar(t){return Eo(t,Xe,ua)}var lr=Js?function(t){return Js.get(t)}:xr;function pi(t){for(var e=t.name+"",l=ls[e],L=he.call(ls,e)?l.length:0;L--;){var C=l[L],R=C.func;if(R==null||R==t)return C.name}return e}function hs(t){var e=he.call(j,"placeholder")?j:t;return e.placeholder}function Bt(){var t=j.iteratee||wr;return t=t===wr?Co:t,arguments.length?t(arguments[0],arguments[1]):t}function ui(t,e){var l=t.__data__;return Nu(e)?l[typeof e=="string"?"string":"hash"]:l.map}function pr(t){for(var e=ke(t),l=e.length;l--;){var L=e[l],C=t[L];e[l]=[L,C,fa(C)]}return e}function Xn(t,e){var l=ql(t,e);return Po(l)?l:s}function Pu(t){var e=he.call(t,zn),l=t[zn];try{t[zn]=s;var L=!0}catch(R){}var C=qs.call(t);return L&&(e?t[zn]=l:delete t[zn]),C}var ur=Fi?function(t){return t==null?[]:(t=me(t),Nn(Fi(t),function(e){return mo.call(t,e)}))}:_r,ua=Fi?function(t){for(var e=[];t;)Hn(e,ur(t)),t=Us(t);return e}:_r,Ge=Ze;(Ni&&Ge(new Ni(new ArrayBuffer(1)))!=yn||Ts&&Ge(new Ts)!=$t||Hi&&Ge(Hi.resolve())!=Te||as&&Ge(new as)!=Le||bs&&Ge(new bs)!=je)&&(Ge=function(t){var e=Ze(t),l=e==ae?t.constructor:s,L=l?Qn(l):"";if(L)switch(L){case fp:return yn;case dp:return $t;case gp:return Te;case mp:return Le;case vp:return je}return e});function Cu(t,e,l){for(var L=-1,C=l.length;++L<C;){var R=l[L],B=R.size;switch(R.type){case"drop":t+=B;break;case"dropRight":e-=B;break;case"take":e=qe(e,t+B);break;case"takeRight":t=Pe(t,e-B);break}}return{start:t,end:e}}function ku(t){var e=t.match(Kt);return e?e[1].split(Nt):[]}function ca(t,e,l){e=Un(e,t);for(var L=-1,C=e.length,R=!1;++L<C;){var B=An(e[L]);if(!(R=t!=null&&l(t,B)))break;t=t[B]}return R||++L!=C?R:(C=t==null?0:t.length,!!C&&vi(C)&&kn(B,C)&&(Yt(t)||ts(t)))}function Mu(t){var e=t.length,l=new t.constructor(e);return e&&typeof t[0]=="string"&&he.call(t,"index")&&(l.index=t.index,l.input=t.input),l}function ha(t){return typeof t.constructor=="function"&&!Es(t)?ps(Us(t)):{}}function ju(t,e,l){var L=t.constructor;switch(e){case xn:return sr(t);case _e:case we:return new L(+t);case yn:return yu(t,l);case Je:case ft:case Q:case pt:case Lt:case nt:case mt:case ct:case Ot:return Ko(t,l);case $t:return new L;case de:case zt:return new L(t);case Ne:return Tu(t);case Le:return new L;case vn:return bu(t)}}function Ru(t,e){var l=e.length;if(!l)return t;var L=l-1;return e[L]=(l>1?"& ":"")+e[L],e=e.join(l>2?", ":" "),t.replace(Ht,`{
/* [wrapped with `+e+`] */
`)}function Fu(t){return Yt(t)||ts(t)||!!(vo&&t&&t[vo])}function kn(t,e){var l=typeof t;return e=e==null?G:e,!!e&&(l=="number"||l!="symbol"&&Xt.test(t))&&t>-1&&t%1==0&&t<e}function ze(t,e,l){if(!Oe(l))return!1;var L=typeof e;return(L=="number"?Ye(l)&&kn(e,l.length):L=="string"&&e in l)?Dn(l[e],t):!1}function cr(t,e){if(Yt(t))return!1;var l=typeof t;return l=="number"||l=="symbol"||l=="boolean"||t==null||rn(t)?!0:vt.test(t)||!st.test(t)||e!=null&&t in me(e)}function Nu(t){var e=typeof t;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?t!=="__proto__":t===null}function hr(t){var e=pi(t),l=j[e];if(typeof l!="function"||!(e in se.prototype))return!1;if(t===l)return!0;var L=lr(l);return!!L&&t===L[0]}function Hu(t){return!!ho&&ho in t}var $u=Hs?Mn:Er;function Es(t){var e=t&&t.constructor,l=typeof e=="function"&&e.prototype||os;return t===l}function fa(t){return t===t&&!Oe(t)}function da(t,e){return function(l){return l==null?!1:l[t]===e&&(e!==s||t in me(l))}}function qu(t){var e=gi(t,function(L){return l.size===m&&l.clear(),L}),l=e.cache;return e}function Gu(t,e){var l=t[1],L=e[1],C=l|L,R=C<(b|_|I),B=L==I&&l==O||L==I&&l==E&&t[7].length<=e[8]||L==(I|E)&&e[7].length<=e[8]&&l==O;if(!(R||B))return t;L&b&&(t[2]=e[2],C|=l&b?0:D);var z=e[3];if(z){var V=t[3];t[3]=V?Vo(V,z,e[4]):z,t[4]=V?$n(t[3],o):e[4]}return z=e[5],z&&(V=t[5],t[5]=V?Yo(V,z,e[6]):z,t[6]=V?$n(t[5],o):e[6]),z=e[7],z&&(t[7]=z),L&I&&(t[8]=t[8]==null?e[8]:qe(t[8],e[8])),t[9]==null&&(t[9]=e[9]),t[0]=e[0],t[1]=C,t}function Bu(t){var e=[];if(t!=null)for(var l in me(t))e.push(l);return e}function Uu(t){return qs.call(t)}function ga(t,e,l){return e=Pe(e===s?t.length-1:e,0),function(){for(var L=arguments,C=-1,R=Pe(L.length-e,0),B=et(R);++C<R;)B[C]=L[e+C];C=-1;for(var z=et(e+1);++C<e;)z[C]=L[C];return z[e]=l(B),en(t,this,z)}}function ma(t,e){return e.length<2?t:Yn(t,fn(e,0,-1))}function Wu(t,e){for(var l=t.length,L=qe(e.length,l),C=Ve(t);L--;){var R=e[L];t[L]=kn(R,l)?C[R]:s}return t}function fr(t,e){if(!(e==="constructor"&&typeof t[e]=="function")&&e!="__proto__")return t[e]}var va=Ta($o),Is=op||function(t,e){return Re.setTimeout(t,e)},dr=Ta(du);function ya(t,e,l){var L=e+"";return dr(t,Ru(L,Zu(ku(L),l)))}function Ta(t){var e=0,l=0;return function(){var L=up(),C=W-(L-l);if(l=L,C>0){if(++e>=q)return arguments[0]}else e=0;return t.apply(s,arguments)}}function ci(t,e){var l=-1,L=t.length,C=L-1;for(e=e===s?L:e;++l<e;){var R=Vi(l,C),B=t[R];t[R]=t[l],t[l]=B}return t.length=e,t}var ba=qu(function(t){var e=[];return t.charCodeAt(0)===46&&e.push(""),t.replace(gt,function(l,L,C,R){e.push(C?R.replace(Ee,"$1"):L||l)}),e});function An(t){if(typeof t=="string"||rn(t))return t;var e=t+"";return e=="0"&&1/t==-Z?"-0":e}function Qn(t){if(t!=null){try{return $s.call(t)}catch(e){}try{return t+""}catch(e){}}return""}function Zu(t,e){return pn(St,function(l){var L="_."+l[0];e&l[1]&&!Ms(t,L)&&t.push(L)}),t.sort()}function Da(t){if(t instanceof se)return t.clone();var e=new cn(t.__wrapped__,t.__chain__);return e.__actions__=Ve(t.__actions__),e.__index__=t.__index__,e.__values__=t.__values__,e}function zu(t,e,l){(l?ze(t,e,l):e===s)?e=1:e=Pe(Qt(e),0);var L=t==null?0:t.length;if(!L||e<1)return[];for(var C=0,R=0,B=et(zs(L/e));C<L;)B[R++]=fn(t,C,C+=e);return B}function Ku(t){for(var e=-1,l=t==null?0:t.length,L=0,C=[];++e<l;){var R=t[e];R&&(C[L++]=R)}return C}function Ju(){var t=arguments.length;if(!t)return[];for(var e=et(t-1),l=arguments[0],L=t;L--;)e[L-1]=arguments[L];return Hn(Yt(l)?Ve(l):[l],Fe(e,1))}var Vu=ee(function(t,e){return Ae(t)?Ss(t,Fe(e,1,Ae,!0)):[]}),Yu=ee(function(t,e){var l=dn(e);return Ae(l)&&(l=s),Ae(t)?Ss(t,Fe(e,1,Ae,!0),Bt(l,2)):[]}),Xu=ee(function(t,e){var l=dn(e);return Ae(l)&&(l=s),Ae(t)?Ss(t,Fe(e,1,Ae,!0),s,l):[]});function Qu(t,e,l){var L=t==null?0:t.length;return L?(e=l||e===s?1:Qt(e),fn(t,e<0?0:e,L)):[]}function tc(t,e,l){var L=t==null?0:t.length;return L?(e=l||e===s?1:Qt(e),e=L-e,fn(t,0,e<0?0:e)):[]}function ec(t,e){return t&&t.length?si(t,Bt(e,3),!0,!0):[]}function nc(t,e){return t&&t.length?si(t,Bt(e,3),!0):[]}function sc(t,e,l,L){var C=t==null?0:t.length;return C?(l&&typeof l!="number"&&ze(t,e,l)&&(l=0,L=C),Jp(t,e,l,L)):[]}function Oa(t,e,l){var L=t==null?0:t.length;if(!L)return-1;var C=l==null?0:Qt(l);return C<0&&(C=Pe(L+C,0)),js(t,Bt(e,3),C)}function La(t,e,l){var L=t==null?0:t.length;if(!L)return-1;var C=L-1;return l!==s&&(C=Qt(l),C=l<0?Pe(L+C,0):qe(C,L-1)),js(t,Bt(e,3),C,!0)}function Sa(t){var e=t==null?0:t.length;return e?Fe(t,1):[]}function ic(t){var e=t==null?0:t.length;return e?Fe(t,Z):[]}function rc(t,e){var l=t==null?0:t.length;return l?(e=e===s?1:Qt(e),Fe(t,e)):[]}function oc(t){for(var e=-1,l=t==null?0:t.length,L={};++e<l;){var C=t[e];L[C[0]]=C[1]}return L}function wa(t){return t&&t.length?t[0]:s}function ac(t,e,l){var L=t==null?0:t.length;if(!L)return-1;var C=l==null?0:Qt(l);return C<0&&(C=Pe(L+C,0)),ss(t,e,C)}function lc(t){var e=t==null?0:t.length;return e?fn(t,0,-1):[]}var pc=ee(function(t){var e=be(t,er);return e.length&&e[0]===t[0]?Wi(e):[]}),uc=ee(function(t){var e=dn(t),l=be(t,er);return e===dn(l)?e=s:l.pop(),l.length&&l[0]===t[0]?Wi(l,Bt(e,2)):[]}),cc=ee(function(t){var e=dn(t),l=be(t,er);return e=typeof e=="function"?e:s,e&&l.pop(),l.length&&l[0]===t[0]?Wi(l,s,e):[]});function hc(t,e){return t==null?"":lp.call(t,e)}function dn(t){var e=t==null?0:t.length;return e?t[e-1]:s}function fc(t,e,l){var L=t==null?0:t.length;if(!L)return-1;var C=L;return l!==s&&(C=Qt(l),C=C<0?Pe(L+C,0):qe(C,L-1)),e===e?Zl(t,e,C):js(t,io,C,!0)}function dc(t,e){return t&&t.length?Ro(t,Qt(e)):s}var gc=ee(Aa);function Aa(t,e){return t&&t.length&&e&&e.length?Ji(t,e):t}function mc(t,e,l){return t&&t.length&&e&&e.length?Ji(t,e,Bt(l,2)):t}function vc(t,e,l){return t&&t.length&&e&&e.length?Ji(t,e,s,l):t}var yc=Cn(function(t,e){var l=t==null?0:t.length,L=qi(t,e);return Ho(t,be(e,function(C){return kn(C,l)?+C:C}).sort(Jo)),L});function Tc(t,e){var l=[];if(!(t&&t.length))return l;var L=-1,C=[],R=t.length;for(e=Bt(e,3);++L<R;){var B=t[L];e(B,L,t)&&(l.push(B),C.push(L))}return Ho(t,C),l}function gr(t){return t==null?t:hp.call(t)}function bc(t,e,l){var L=t==null?0:t.length;return L?(l&&typeof l!="number"&&ze(t,e,l)?(e=0,l=L):(e=e==null?0:Qt(e),l=l===s?L:Qt(l)),fn(t,e,l)):[]}function Dc(t,e){return ni(t,e)}function Oc(t,e,l){return Xi(t,e,Bt(l,2))}function Lc(t,e){var l=t==null?0:t.length;if(l){var L=ni(t,e);if(L<l&&Dn(t[L],e))return L}return-1}function Sc(t,e){return ni(t,e,!0)}function wc(t,e,l){return Xi(t,e,Bt(l,2),!0)}function Ac(t,e){var l=t==null?0:t.length;if(l){var L=ni(t,e,!0)-1;if(Dn(t[L],e))return L}return-1}function xc(t){return t&&t.length?qo(t):[]}function _c(t,e){return t&&t.length?qo(t,Bt(e,2)):[]}function Ec(t){var e=t==null?0:t.length;return e?fn(t,1,e):[]}function Ic(t,e,l){return t&&t.length?(e=l||e===s?1:Qt(e),fn(t,0,e<0?0:e)):[]}function Pc(t,e,l){var L=t==null?0:t.length;return L?(e=l||e===s?1:Qt(e),e=L-e,fn(t,e<0?0:e,L)):[]}function Cc(t,e){return t&&t.length?si(t,Bt(e,3),!1,!0):[]}function kc(t,e){return t&&t.length?si(t,Bt(e,3)):[]}var Mc=ee(function(t){return Bn(Fe(t,1,Ae,!0))}),jc=ee(function(t){var e=dn(t);return Ae(e)&&(e=s),Bn(Fe(t,1,Ae,!0),Bt(e,2))}),Rc=ee(function(t){var e=dn(t);return e=typeof e=="function"?e:s,Bn(Fe(t,1,Ae,!0),s,e)});function Fc(t){return t&&t.length?Bn(t):[]}function Nc(t,e){return t&&t.length?Bn(t,Bt(e,2)):[]}function Hc(t,e){return e=typeof e=="function"?e:s,t&&t.length?Bn(t,s,e):[]}function mr(t){if(!(t&&t.length))return[];var e=0;return t=Nn(t,function(l){if(Ae(l))return e=Pe(l.length,e),!0}),ki(e,function(l){return be(t,Ii(l))})}function xa(t,e){if(!(t&&t.length))return[];var l=mr(t);return e==null?l:be(l,function(L){return en(e,s,L)})}var $c=ee(function(t,e){return Ae(t)?Ss(t,e):[]}),qc=ee(function(t){return tr(Nn(t,Ae))}),Gc=ee(function(t){var e=dn(t);return Ae(e)&&(e=s),tr(Nn(t,Ae),Bt(e,2))}),Bc=ee(function(t){var e=dn(t);return e=typeof e=="function"?e:s,tr(Nn(t,Ae),s,e)}),Uc=ee(mr);function Wc(t,e){return Wo(t||[],e||[],Ls)}function Zc(t,e){return Wo(t||[],e||[],xs)}var zc=ee(function(t){var e=t.length,l=e>1?t[e-1]:s;return l=typeof l=="function"?(t.pop(),l):s,xa(t,l)});function _a(t){var e=j(t);return e.__chain__=!0,e}function Kc(t,e){return e(t),t}function hi(t,e){return e(t)}var Jc=Cn(function(t){var e=t.length,l=e?t[0]:0,L=this.__wrapped__,C=function(R){return qi(R,t)};return e>1||this.__actions__.length||!(L instanceof se)||!kn(l)?this.thru(C):(L=L.slice(l,+l+(e?1:0)),L.__actions__.push({func:hi,args:[C],thisArg:s}),new cn(L,this.__chain__).thru(function(R){return e&&!R.length&&R.push(s),R}))});function Vc(){return _a(this)}function Yc(){return new cn(this.value(),this.__chain__)}function Xc(){this.__values__===s&&(this.__values__=Ga(this.value()));var t=this.__index__>=this.__values__.length,e=t?s:this.__values__[this.__index__++];return{done:t,value:e}}function Qc(){return this}function th(t){for(var e,l=this;l instanceof Ys;){var L=Da(l);L.__index__=0,L.__values__=s,e?C.__wrapped__=L:e=L;var C=L;l=l.__wrapped__}return C.__wrapped__=t,e}function eh(){var t=this.__wrapped__;if(t instanceof se){var e=t;return this.__actions__.length&&(e=new se(this)),e=e.reverse(),e.__actions__.push({func:hi,args:[gr],thisArg:s}),new cn(e,this.__chain__)}return this.thru(gr)}function nh(){return Uo(this.__wrapped__,this.__actions__)}var sh=ii(function(t,e,l){he.call(t,l)?++t[l]:In(t,l,1)});function ih(t,e,l){var L=Yt(t)?no:Kp;return l&&ze(t,e,l)&&(e=s),L(t,Bt(e,3))}function rh(t,e){var l=Yt(t)?Nn:xo;return l(t,Bt(e,3))}var oh=ea(Oa),ah=ea(La);function lh(t,e){return Fe(fi(t,e),1)}function ph(t,e){return Fe(fi(t,e),Z)}function uh(t,e,l){return l=l===s?1:Qt(l),Fe(fi(t,e),l)}function Ea(t,e){var l=Yt(t)?pn:Gn;return l(t,Bt(e,3))}function Ia(t,e){var l=Yt(t)?El:Ao;return l(t,Bt(e,3))}var ch=ii(function(t,e,l){he.call(t,l)?t[l].push(e):In(t,l,[e])});function hh(t,e,l,L){t=Ye(t)?t:ds(t),l=l&&!L?Qt(l):0;var C=t.length;return l<0&&(l=Pe(C+l,0)),yi(t)?l<=C&&t.indexOf(e,l)>-1:!!C&&ss(t,e,l)>-1}var fh=ee(function(t,e,l){var L=-1,C=typeof e=="function",R=Ye(t)?et(t.length):[];return Gn(t,function(B){R[++L]=C?en(e,B,l):ws(B,e,l)}),R}),dh=ii(function(t,e,l){In(t,l,e)});function fi(t,e){var l=Yt(t)?be:ko;return l(t,Bt(e,3))}function gh(t,e,l,L){return t==null?[]:(Yt(e)||(e=e==null?[]:[e]),l=L?s:l,Yt(l)||(l=l==null?[]:[l]),Fo(t,e,l))}var mh=ii(function(t,e,l){t[l?0:1].push(e)},function(){return[[],[]]});function vh(t,e,l){var L=Yt(t)?_i:oo,C=arguments.length<3;return L(t,Bt(e,4),l,C,Gn)}function yh(t,e,l){var L=Yt(t)?Il:oo,C=arguments.length<3;return L(t,Bt(e,4),l,C,Ao)}function Th(t,e){var l=Yt(t)?Nn:xo;return l(t,mi(Bt(e,3)))}function bh(t){var e=Yt(t)?Oo:hu;return e(t)}function Dh(t,e,l){(l?ze(t,e,l):e===s)?e=1:e=Qt(e);var L=Yt(t)?Bp:fu;return L(t,e)}function Oh(t){var e=Yt(t)?Up:gu;return e(t)}function Lh(t){if(t==null)return 0;if(Ye(t))return yi(t)?rs(t):t.length;var e=Ge(t);return e==$t||e==Le?t.size:zi(t).length}function Sh(t,e,l){var L=Yt(t)?Ei:mu;return l&&ze(t,e,l)&&(e=s),L(t,Bt(e,3))}var wh=ee(function(t,e){if(t==null)return[];var l=e.length;return l>1&&ze(t,e[0],e[1])?e=[]:l>2&&ze(e[0],e[1],e[2])&&(e=[e[0]]),Fo(t,Fe(e,1),[])}),di=rp||function(){return Re.Date.now()};function Ah(t,e){if(typeof e!="function")throw new un(a);return t=Qt(t),function(){if(--t<1)return e.apply(this,arguments)}}function Pa(t,e,l){return e=l?s:e,e=t&&e==null?t.length:e,Pn(t,I,s,s,s,s,e)}function Ca(t,e){var l;if(typeof e!="function")throw new un(a);return t=Qt(t),function(){return--t>0&&(l=e.apply(this,arguments)),t<=1&&(e=s),l}}var vr=ee(function(t,e,l){var L=b;if(l.length){var C=$n(l,hs(vr));L|=A}return Pn(t,L,e,l,C)}),ka=ee(function(t,e,l){var L=b|_;if(l.length){var C=$n(l,hs(ka));L|=A}return Pn(e,L,t,l,C)});function Ma(t,e,l){e=l?s:e;var L=Pn(t,O,s,s,s,s,s,e);return L.placeholder=Ma.placeholder,L}function ja(t,e,l){e=l?s:e;var L=Pn(t,S,s,s,s,s,s,e);return L.placeholder=ja.placeholder,L}function Ra(t,e,l){var L,C,R,B,z,V,ot=0,at=!1,dt=!1,At=!0;if(typeof t!="function")throw new un(a);e=gn(e)||0,Oe(l)&&(at=!!l.leading,dt="maxWait"in l,R=dt?Pe(gn(l.maxWait)||0,e):R,At="trailing"in l?!!l.trailing:At);function jt(xe){var On=L,Rn=C;return L=C=s,ot=xe,B=t.apply(Rn,On),B}function Ut(xe){return ot=xe,z=Is(ne,e),at?jt(xe):B}function te(xe){var On=xe-V,Rn=xe-ot,el=e-On;return dt?qe(el,R-Rn):el}function Wt(xe){var On=xe-V,Rn=xe-ot;return V===s||On>=e||On<0||dt&&Rn>=R}function ne(){var xe=di();if(Wt(xe))return re(xe);z=Is(ne,te(xe))}function re(xe){return z=s,At&&L?jt(xe):(L=C=s,B)}function on(){z!==s&&Zo(z),ot=0,L=V=C=z=s}function Ke(){return z===s?B:re(di())}function an(){var xe=di(),On=Wt(xe);if(L=arguments,C=this,V=xe,On){if(z===s)return Ut(V);if(dt)return Zo(z),z=Is(ne,e),jt(V)}return z===s&&(z=Is(ne,e)),B}return an.cancel=on,an.flush=Ke,an}var xh=ee(function(t,e){return wo(t,1,e)}),_h=ee(function(t,e,l){return wo(t,gn(e)||0,l)});function Eh(t){return Pn(t,x)}function gi(t,e){if(typeof t!="function"||e!=null&&typeof e!="function")throw new un(a);var l=function(){var L=arguments,C=e?e.apply(this,L):L[0],R=l.cache;if(R.has(C))return R.get(C);var B=t.apply(this,L);return l.cache=R.set(C,B)||R,B};return l.cache=new(gi.Cache||En),l}gi.Cache=En;function mi(t){if(typeof t!="function")throw new un(a);return function(){var e=arguments;switch(e.length){case 0:return!t.call(this);case 1:return!t.call(this,e[0]);case 2:return!t.call(this,e[0],e[1]);case 3:return!t.call(this,e[0],e[1],e[2])}return!t.apply(this,e)}}function Ih(t){return Ca(2,t)}var Ph=vu(function(t,e){e=e.length==1&&Yt(e[0])?be(e[0],nn(Bt())):be(Fe(e,1),nn(Bt()));var l=e.length;return ee(function(L){for(var C=-1,R=qe(L.length,l);++C<R;)L[C]=e[C].call(this,L[C]);return en(t,this,L)})}),yr=ee(function(t,e){var l=$n(e,hs(yr));return Pn(t,A,s,e,l)}),Fa=ee(function(t,e){var l=$n(e,hs(Fa));return Pn(t,k,s,e,l)}),Ch=Cn(function(t,e){return Pn(t,E,s,s,s,e)});function kh(t,e){if(typeof t!="function")throw new un(a);return e=e===s?e:Qt(e),ee(t,e)}function Mh(t,e){if(typeof t!="function")throw new un(a);return e=e==null?0:Pe(Qt(e),0),ee(function(l){var L=l[e],C=Wn(l,0,e);return L&&Hn(C,L),en(t,this,C)})}function jh(t,e,l){var L=!0,C=!0;if(typeof t!="function")throw new un(a);return Oe(l)&&(L="leading"in l?!!l.leading:L,C="trailing"in l?!!l.trailing:C),Ra(t,e,{leading:L,maxWait:e,trailing:C})}function Rh(t){return Pa(t,1)}function Fh(t,e){return yr(nr(e),t)}function Nh(){if(!arguments.length)return[];var t=arguments[0];return Yt(t)?t:[t]}function Hh(t){return hn(t,h)}function $h(t,e){return e=typeof e=="function"?e:s,hn(t,h,e)}function qh(t){return hn(t,v|h)}function Gh(t,e){return e=typeof e=="function"?e:s,hn(t,v|h,e)}function Bh(t,e){return e==null||So(t,e,ke(e))}function Dn(t,e){return t===e||t!==t&&e!==e}var Uh=li(Ui),Wh=li(function(t,e){return t>=e}),ts=Io(function(){return arguments}())?Io:function(t){return Se(t)&&he.call(t,"callee")&&!mo.call(t,"callee")},Yt=et.isArray,Zh=Vr?nn(Vr):tu;function Ye(t){return t!=null&&vi(t.length)&&!Mn(t)}function Ae(t){return Se(t)&&Ye(t)}function zh(t){return t===!0||t===!1||Se(t)&&Ze(t)==_e}var Zn=ap||Er,Kh=Yr?nn(Yr):eu;function Jh(t){return Se(t)&&t.nodeType===1&&!Ps(t)}function Vh(t){if(t==null)return!0;if(Ye(t)&&(Yt(t)||typeof t=="string"||typeof t.splice=="function"||Zn(t)||fs(t)||ts(t)))return!t.length;var e=Ge(t);if(e==$t||e==Le)return!t.size;if(Es(t))return!zi(t).length;for(var l in t)if(he.call(t,l))return!1;return!0}function Yh(t,e){return As(t,e)}function Xh(t,e,l){l=typeof l=="function"?l:s;var L=l?l(t,e):s;return L===s?As(t,e,s,l):!!L}function Tr(t){if(!Se(t))return!1;var e=Ze(t);return e==ut||e==Me||typeof t.message=="string"&&typeof t.name=="string"&&!Ps(t)}function Qh(t){return typeof t=="number"&&yo(t)}function Mn(t){if(!Oe(t))return!1;var e=Ze(t);return e==Pt||e==_t||e==De||e==mn}function Na(t){return typeof t=="number"&&t==Qt(t)}function vi(t){return typeof t=="number"&&t>-1&&t%1==0&&t<=G}function Oe(t){var e=typeof t;return t!=null&&(e=="object"||e=="function")}function Se(t){return t!=null&&typeof t=="object"}var Ha=Xr?nn(Xr):su;function tf(t,e){return t===e||Zi(t,e,pr(e))}function ef(t,e,l){return l=typeof l=="function"?l:s,Zi(t,e,pr(e),l)}function nf(t){return $a(t)&&t!=+t}function sf(t){if($u(t))throw new Vt(d);return Po(t)}function rf(t){return t===null}function of(t){return t==null}function $a(t){return typeof t=="number"||Se(t)&&Ze(t)==de}function Ps(t){if(!Se(t)||Ze(t)!=ae)return!1;var e=Us(t);if(e===null)return!0;var l=he.call(e,"constructor")&&e.constructor;return typeof l=="function"&&l instanceof l&&$s.call(l)==ep}var br=Qr?nn(Qr):iu;function af(t){return Na(t)&&t>=-G&&t<=G}var qa=to?nn(to):ru;function yi(t){return typeof t=="string"||!Yt(t)&&Se(t)&&Ze(t)==zt}function rn(t){return typeof t=="symbol"||Se(t)&&Ze(t)==vn}var fs=eo?nn(eo):ou;function lf(t){return t===s}function pf(t){return Se(t)&&Ge(t)==je}function uf(t){return Se(t)&&Ze(t)==gs}var cf=li(Ki),hf=li(function(t,e){return t<=e});function Ga(t){if(!t)return[];if(Ye(t))return yi(t)?Tn(t):Ve(t);if(ys&&t[ys])return Bl(t[ys]());var e=Ge(t),l=e==$t?ji:e==Le?Rs:ds;return l(t)}function jn(t){if(!t)return t===0?t:0;if(t=gn(t),t===Z||t===-Z){var e=t<0?-1:1;return e*tt}return t===t?t:0}function Qt(t){var e=jn(t),l=e%1;return e===e?l?e-l:e:0}function Ba(t){return t?Vn(Qt(t),0,lt):0}function gn(t){if(typeof t=="number")return t;if(rn(t))return it;if(Oe(t)){var e=typeof t.valueOf=="function"?t.valueOf():t;t=Oe(e)?e+"":e}if(typeof t!="string")return t===0?t:+t;t=ao(t);var l=ht.test(t);return l||Et.test(t)?Al(t.slice(2),l?2:8):Tt.test(t)?it:+t}function Ua(t){return wn(t,Xe(t))}function ff(t){return t?Vn(Qt(t),-G,G):t===0?t:0}function ue(t){return t==null?"":sn(t)}var df=us(function(t,e){if(Es(e)||Ye(e)){wn(e,ke(e),t);return}for(var l in e)he.call(e,l)&&Ls(t,l,e[l])}),Wa=us(function(t,e){wn(e,Xe(e),t)}),Ti=us(function(t,e,l,L){wn(e,Xe(e),t,L)}),gf=us(function(t,e,l,L){wn(e,ke(e),t,L)}),mf=Cn(qi);function vf(t,e){var l=ps(t);return e==null?l:Lo(l,e)}var yf=ee(function(t,e){t=me(t);var l=-1,L=e.length,C=L>2?e[2]:s;for(C&&ze(e[0],e[1],C)&&(L=1);++l<L;)for(var R=e[l],B=Xe(R),z=-1,V=B.length;++z<V;){var ot=B[z],at=t[ot];(at===s||Dn(at,os[ot])&&!he.call(t,ot))&&(t[ot]=R[ot])}return t}),Tf=ee(function(t){return t.push(s,la),en(Za,s,t)});function bf(t,e){return so(t,Bt(e,3),Sn)}function Df(t,e){return so(t,Bt(e,3),Bi)}function Of(t,e){return t==null?t:Gi(t,Bt(e,3),Xe)}function Lf(t,e){return t==null?t:_o(t,Bt(e,3),Xe)}function Sf(t,e){return t&&Sn(t,Bt(e,3))}function wf(t,e){return t&&Bi(t,Bt(e,3))}function Af(t){return t==null?[]:ti(t,ke(t))}function xf(t){return t==null?[]:ti(t,Xe(t))}function Dr(t,e,l){var L=t==null?s:Yn(t,e);return L===s?l:L}function _f(t,e){return t!=null&&ca(t,e,Vp)}function Or(t,e){return t!=null&&ca(t,e,Yp)}var Ef=sa(function(t,e,l){e!=null&&typeof e.toString!="function"&&(e=qs.call(e)),t[e]=l},Sr(Qe)),If=sa(function(t,e,l){e!=null&&typeof e.toString!="function"&&(e=qs.call(e)),he.call(t,e)?t[e].push(l):t[e]=[l]},Bt),Pf=ee(ws);function ke(t){return Ye(t)?Do(t):zi(t)}function Xe(t){return Ye(t)?Do(t,!0):au(t)}function Cf(t,e){var l={};return e=Bt(e,3),Sn(t,function(L,C,R){In(l,e(L,C,R),L)}),l}function kf(t,e){var l={};return e=Bt(e,3),Sn(t,function(L,C,R){In(l,C,e(L,C,R))}),l}var Mf=us(function(t,e,l){ei(t,e,l)}),Za=us(function(t,e,l,L){ei(t,e,l,L)}),jf=Cn(function(t,e){var l={};if(t==null)return l;var L=!1;e=be(e,function(R){return R=Un(R,t),L||(L=R.length>1),R}),wn(t,ar(t),l),L&&(l=hn(l,v|f|h,_u));for(var C=e.length;C--;)Qi(l,e[C]);return l});function Rf(t,e){return za(t,mi(Bt(e)))}var Ff=Cn(function(t,e){return t==null?{}:pu(t,e)});function za(t,e){if(t==null)return{};var l=be(ar(t),function(L){return[L]});return e=Bt(e),No(t,l,function(L,C){return e(L,C[0])})}function Nf(t,e,l){e=Un(e,t);var L=-1,C=e.length;for(C||(C=1,t=s);++L<C;){var R=t==null?s:t[An(e[L])];R===s&&(L=C,R=l),t=Mn(R)?R.call(t):R}return t}function Hf(t,e,l){return t==null?t:xs(t,e,l)}function $f(t,e,l,L){return L=typeof L=="function"?L:s,t==null?t:xs(t,e,l,L)}var Ka=oa(ke),Ja=oa(Xe);function qf(t,e,l){var L=Yt(t),C=L||Zn(t)||fs(t);if(e=Bt(e,4),l==null){var R=t&&t.constructor;C?l=L?new R:[]:Oe(t)?l=Mn(R)?ps(Us(t)):{}:l={}}return(C?pn:Sn)(t,function(B,z,V){return e(l,B,z,V)}),l}function Gf(t,e){return t==null?!0:Qi(t,e)}function Bf(t,e,l){return t==null?t:Bo(t,e,nr(l))}function Uf(t,e,l,L){return L=typeof L=="function"?L:s,t==null?t:Bo(t,e,nr(l),L)}function ds(t){return t==null?[]:Mi(t,ke(t))}function Wf(t){return t==null?[]:Mi(t,Xe(t))}function Zf(t,e,l){return l===s&&(l=e,e=s),l!==s&&(l=gn(l),l=l===l?l:0),e!==s&&(e=gn(e),e=e===e?e:0),Vn(gn(t),e,l)}function zf(t,e,l){return e=jn(e),l===s?(l=e,e=0):l=jn(l),t=gn(t),Xp(t,e,l)}function Kf(t,e,l){if(l&&typeof l!="boolean"&&ze(t,e,l)&&(e=l=s),l===s&&(typeof e=="boolean"?(l=e,e=s):typeof t=="boolean"&&(l=t,t=s)),t===s&&e===s?(t=0,e=1):(t=jn(t),e===s?(e=t,t=0):e=jn(e)),t>e){var L=t;t=e,e=L}if(l||t%1||e%1){var C=To();return qe(t+C*(e-t+wl("1e-"+((C+"").length-1))),e)}return Vi(t,e)}var Jf=cs(function(t,e,l){return e=e.toLowerCase(),t+(l?Va(e):e)});function Va(t){return Lr(ue(t).toLowerCase())}function Ya(t){return t=ue(t),t&&t.replace(ie,Nl).replace(gl,"")}function Vf(t,e,l){t=ue(t),e=sn(e);var L=t.length;l=l===s?L:Vn(Qt(l),0,L);var C=l;return l-=e.length,l>=0&&t.slice(l,C)==e}function Yf(t){return t=ue(t),t&&N.test(t)?t.replace(Zt,Hl):t}function Xf(t){return t=ue(t),t&&yt.test(t)?t.replace(Dt,"\\$&"):t}var Qf=cs(function(t,e,l){return t+(l?"-":"")+e.toLowerCase()}),td=cs(function(t,e,l){return t+(l?" ":"")+e.toLowerCase()}),ed=ta("toLowerCase");function nd(t,e,l){t=ue(t),e=Qt(e);var L=e?rs(t):0;if(!e||L>=e)return t;var C=(e-L)/2;return ai(Ks(C),l)+t+ai(zs(C),l)}function sd(t,e,l){t=ue(t),e=Qt(e);var L=e?rs(t):0;return e&&L<e?t+ai(e-L,l):t}function id(t,e,l){t=ue(t),e=Qt(e);var L=e?rs(t):0;return e&&L<e?ai(e-L,l)+t:t}function rd(t,e,l){return l||e==null?e=0:e&&(e=+e),cp(ue(t).replace(kt,""),e||0)}function od(t,e,l){return(l?ze(t,e,l):e===s)?e=1:e=Qt(e),Yi(ue(t),e)}function ad(){var t=arguments,e=ue(t[0]);return t.length<3?e:e.replace(t[1],t[2])}var ld=cs(function(t,e,l){return t+(l?"_":"")+e.toLowerCase()});function pd(t,e,l){return l&&typeof l!="number"&&ze(t,e,l)&&(e=l=s),l=l===s?lt:l>>>0,l?(t=ue(t),t&&(typeof e=="string"||e!=null&&!br(e))&&(e=sn(e),!e&&is(t))?Wn(Tn(t),0,l):t.split(e,l)):[]}var ud=cs(function(t,e,l){return t+(l?" ":"")+Lr(e)});function cd(t,e,l){return t=ue(t),l=l==null?0:Vn(Qt(l),0,t.length),e=sn(e),t.slice(l,l+e.length)==e}function hd(t,e,l){var L=j.templateSettings;l&&ze(t,e,l)&&(e=s),t=ue(t),e=Ti({},e,L,aa);var C=Ti({},e.imports,L.imports,aa),R=ke(C),B=Mi(C,R),z,V,ot=0,at=e.interpolate||Gt,dt="__p += '",At=Ri((e.escape||Gt).source+"|"+at.source+"|"+(at===X?He:Gt).source+"|"+(e.evaluate||Gt).source+"|$","g"),jt="//# sourceURL="+(he.call(e,"sourceURL")?(e.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++bl+"]")+`
`;t.replace(At,function(Wt,ne,re,on,Ke,an){return re||(re=on),dt+=t.slice(ot,an).replace($e,$l),ne&&(z=!0,dt+=`' +
__e(`+ne+`) +
'`),Ke&&(V=!0,dt+=`';
`+Ke+`;
__p += '`),re&&(dt+=`' +
((__t = (`+re+`)) == null ? '' : __t) +
'`),ot=an+Wt.length,Wt}),dt+=`';
`;var Ut=he.call(e,"variable")&&e.variable;if(!Ut)dt=`with (obj) {
`+dt+`
}
`;else if(Ce.test(Ut))throw new Vt(i);dt=(V?dt.replace(Rt,""):dt).replace(qt,"$1").replace(Ft,"$1;"),dt="function("+(Ut||"obj")+`) {
`+(Ut?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(z?", __e = _.escape":"")+(V?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+dt+`return __p
}`;var te=Qa(function(){return pe(R,jt+"return "+dt).apply(s,B)});if(te.source=dt,Tr(te))throw te;return te}function fd(t){return ue(t).toLowerCase()}function dd(t){return ue(t).toUpperCase()}function gd(t,e,l){if(t=ue(t),t&&(l||e===s))return ao(t);if(!t||!(e=sn(e)))return t;var L=Tn(t),C=Tn(e),R=lo(L,C),B=po(L,C)+1;return Wn(L,R,B).join("")}function md(t,e,l){if(t=ue(t),t&&(l||e===s))return t.slice(0,co(t)+1);if(!t||!(e=sn(e)))return t;var L=Tn(t),C=po(L,Tn(e))+1;return Wn(L,0,C).join("")}function vd(t,e,l){if(t=ue(t),t&&(l||e===s))return t.replace(kt,"");if(!t||!(e=sn(e)))return t;var L=Tn(t),C=lo(L,Tn(e));return Wn(L,C).join("")}function yd(t,e){var l=P,L=F;if(Oe(e)){var C="separator"in e?e.separator:C;l="length"in e?Qt(e.length):l,L="omission"in e?sn(e.omission):L}t=ue(t);var R=t.length;if(is(t)){var B=Tn(t);R=B.length}if(l>=R)return t;var z=l-rs(L);if(z<1)return L;var V=B?Wn(B,0,z).join(""):t.slice(0,z);if(C===s)return V+L;if(B&&(z+=V.length-z),br(C)){if(t.slice(z).search(C)){var ot,at=V;for(C.global||(C=Ri(C.source,ue(We.exec(C))+"g")),C.lastIndex=0;ot=C.exec(at);)var dt=ot.index;V=V.slice(0,dt===s?z:dt)}}else if(t.indexOf(sn(C),z)!=z){var At=V.lastIndexOf(C);At>-1&&(V=V.slice(0,At))}return V+L}function Td(t){return t=ue(t),t&&Jt.test(t)?t.replace(Ct,zl):t}var bd=cs(function(t,e,l){return t+(l?" ":"")+e.toUpperCase()}),Lr=ta("toUpperCase");function Xa(t,e,l){return t=ue(t),e=l?s:e,e===s?Gl(t)?Vl(t):kl(t):t.match(e)||[]}var Qa=ee(function(t,e){try{return en(t,s,e)}catch(l){return Tr(l)?l:new Vt(l)}}),Dd=Cn(function(t,e){return pn(e,function(l){l=An(l),In(t,l,vr(t[l],t))}),t});function Od(t){var e=t==null?0:t.length,l=Bt();return t=e?be(t,function(L){if(typeof L[1]!="function")throw new un(a);return[l(L[0]),L[1]]}):[],ee(function(L){for(var C=-1;++C<e;){var R=t[C];if(en(R[0],this,L))return en(R[1],this,L)}})}function Ld(t){return zp(hn(t,v))}function Sr(t){return function(){return t}}function Sd(t,e){return t==null||t!==t?e:t}var wd=na(),Ad=na(!0);function Qe(t){return t}function wr(t){return Co(typeof t=="function"?t:hn(t,v))}function xd(t){return Mo(hn(t,v))}function _d(t,e){return jo(t,hn(e,v))}var Ed=ee(function(t,e){return function(l){return ws(l,t,e)}}),Id=ee(function(t,e){return function(l){return ws(t,l,e)}});function Ar(t,e,l){var L=ke(e),C=ti(e,L);l==null&&!(Oe(e)&&(C.length||!L.length))&&(l=e,e=t,t=this,C=ti(e,ke(e)));var R=!(Oe(l)&&"chain"in l)||!!l.chain,B=Mn(t);return pn(C,function(z){var V=e[z];t[z]=V,B&&(t.prototype[z]=function(){var ot=this.__chain__;if(R||ot){var at=t(this.__wrapped__),dt=at.__actions__=Ve(this.__actions__);return dt.push({func:V,args:arguments,thisArg:t}),at.__chain__=ot,at}return V.apply(t,Hn([this.value()],arguments))})}),t}function Pd(){return Re._===this&&(Re._=np),this}function xr(){}function Cd(t){return t=Qt(t),ee(function(e){return Ro(e,t)})}var kd=ir(be),Md=ir(no),jd=ir(Ei);function tl(t){return cr(t)?Ii(An(t)):uu(t)}function Rd(t){return function(e){return t==null?s:Yn(t,e)}}var Fd=ia(),Nd=ia(!0);function _r(){return[]}function Er(){return!1}function Hd(){return{}}function $d(){return""}function qd(){return!0}function Gd(t,e){if(t=Qt(t),t<1||t>G)return[];var l=lt,L=qe(t,lt);e=Bt(e),t-=lt;for(var C=ki(L,e);++l<t;)e(l);return C}function Bd(t){return Yt(t)?be(t,An):rn(t)?[t]:Ve(ba(ue(t)))}function Ud(t){var e=++tp;return ue(t)+e}var Wd=oi(function(t,e){return t+e},0),Zd=rr("ceil"),zd=oi(function(t,e){return t/e},1),Kd=rr("floor");function Jd(t){return t&&t.length?Qs(t,Qe,Ui):s}function Vd(t,e){return t&&t.length?Qs(t,Bt(e,2),Ui):s}function Yd(t){return ro(t,Qe)}function Xd(t,e){return ro(t,Bt(e,2))}function Qd(t){return t&&t.length?Qs(t,Qe,Ki):s}function tg(t,e){return t&&t.length?Qs(t,Bt(e,2),Ki):s}var eg=oi(function(t,e){return t*e},1),ng=rr("round"),sg=oi(function(t,e){return t-e},0);function ig(t){return t&&t.length?Ci(t,Qe):0}function rg(t,e){return t&&t.length?Ci(t,Bt(e,2)):0}return j.after=Ah,j.ary=Pa,j.assign=df,j.assignIn=Wa,j.assignInWith=Ti,j.assignWith=gf,j.at=mf,j.before=Ca,j.bind=vr,j.bindAll=Dd,j.bindKey=ka,j.castArray=Nh,j.chain=_a,j.chunk=zu,j.compact=Ku,j.concat=Ju,j.cond=Od,j.conforms=Ld,j.constant=Sr,j.countBy=sh,j.create=vf,j.curry=Ma,j.curryRight=ja,j.debounce=Ra,j.defaults=yf,j.defaultsDeep=Tf,j.defer=xh,j.delay=_h,j.difference=Vu,j.differenceBy=Yu,j.differenceWith=Xu,j.drop=Qu,j.dropRight=tc,j.dropRightWhile=ec,j.dropWhile=nc,j.fill=sc,j.filter=rh,j.flatMap=lh,j.flatMapDeep=ph,j.flatMapDepth=uh,j.flatten=Sa,j.flattenDeep=ic,j.flattenDepth=rc,j.flip=Eh,j.flow=wd,j.flowRight=Ad,j.fromPairs=oc,j.functions=Af,j.functionsIn=xf,j.groupBy=ch,j.initial=lc,j.intersection=pc,j.intersectionBy=uc,j.intersectionWith=cc,j.invert=Ef,j.invertBy=If,j.invokeMap=fh,j.iteratee=wr,j.keyBy=dh,j.keys=ke,j.keysIn=Xe,j.map=fi,j.mapKeys=Cf,j.mapValues=kf,j.matches=xd,j.matchesProperty=_d,j.memoize=gi,j.merge=Mf,j.mergeWith=Za,j.method=Ed,j.methodOf=Id,j.mixin=Ar,j.negate=mi,j.nthArg=Cd,j.omit=jf,j.omitBy=Rf,j.once=Ih,j.orderBy=gh,j.over=kd,j.overArgs=Ph,j.overEvery=Md,j.overSome=jd,j.partial=yr,j.partialRight=Fa,j.partition=mh,j.pick=Ff,j.pickBy=za,j.property=tl,j.propertyOf=Rd,j.pull=gc,j.pullAll=Aa,j.pullAllBy=mc,j.pullAllWith=vc,j.pullAt=yc,j.range=Fd,j.rangeRight=Nd,j.rearg=Ch,j.reject=Th,j.remove=Tc,j.rest=kh,j.reverse=gr,j.sampleSize=Dh,j.set=Hf,j.setWith=$f,j.shuffle=Oh,j.slice=bc,j.sortBy=wh,j.sortedUniq=xc,j.sortedUniqBy=_c,j.split=pd,j.spread=Mh,j.tail=Ec,j.take=Ic,j.takeRight=Pc,j.takeRightWhile=Cc,j.takeWhile=kc,j.tap=Kc,j.throttle=jh,j.thru=hi,j.toArray=Ga,j.toPairs=Ka,j.toPairsIn=Ja,j.toPath=Bd,j.toPlainObject=Ua,j.transform=qf,j.unary=Rh,j.union=Mc,j.unionBy=jc,j.unionWith=Rc,j.uniq=Fc,j.uniqBy=Nc,j.uniqWith=Hc,j.unset=Gf,j.unzip=mr,j.unzipWith=xa,j.update=Bf,j.updateWith=Uf,j.values=ds,j.valuesIn=Wf,j.without=$c,j.words=Xa,j.wrap=Fh,j.xor=qc,j.xorBy=Gc,j.xorWith=Bc,j.zip=Uc,j.zipObject=Wc,j.zipObjectDeep=Zc,j.zipWith=zc,j.entries=Ka,j.entriesIn=Ja,j.extend=Wa,j.extendWith=Ti,Ar(j,j),j.add=Wd,j.attempt=Qa,j.camelCase=Jf,j.capitalize=Va,j.ceil=Zd,j.clamp=Zf,j.clone=Hh,j.cloneDeep=qh,j.cloneDeepWith=Gh,j.cloneWith=$h,j.conformsTo=Bh,j.deburr=Ya,j.defaultTo=Sd,j.divide=zd,j.endsWith=Vf,j.eq=Dn,j.escape=Yf,j.escapeRegExp=Xf,j.every=ih,j.find=oh,j.findIndex=Oa,j.findKey=bf,j.findLast=ah,j.findLastIndex=La,j.findLastKey=Df,j.floor=Kd,j.forEach=Ea,j.forEachRight=Ia,j.forIn=Of,j.forInRight=Lf,j.forOwn=Sf,j.forOwnRight=wf,j.get=Dr,j.gt=Uh,j.gte=Wh,j.has=_f,j.hasIn=Or,j.head=wa,j.identity=Qe,j.includes=hh,j.indexOf=ac,j.inRange=zf,j.invoke=Pf,j.isArguments=ts,j.isArray=Yt,j.isArrayBuffer=Zh,j.isArrayLike=Ye,j.isArrayLikeObject=Ae,j.isBoolean=zh,j.isBuffer=Zn,j.isDate=Kh,j.isElement=Jh,j.isEmpty=Vh,j.isEqual=Yh,j.isEqualWith=Xh,j.isError=Tr,j.isFinite=Qh,j.isFunction=Mn,j.isInteger=Na,j.isLength=vi,j.isMap=Ha,j.isMatch=tf,j.isMatchWith=ef,j.isNaN=nf,j.isNative=sf,j.isNil=of,j.isNull=rf,j.isNumber=$a,j.isObject=Oe,j.isObjectLike=Se,j.isPlainObject=Ps,j.isRegExp=br,j.isSafeInteger=af,j.isSet=qa,j.isString=yi,j.isSymbol=rn,j.isTypedArray=fs,j.isUndefined=lf,j.isWeakMap=pf,j.isWeakSet=uf,j.join=hc,j.kebabCase=Qf,j.last=dn,j.lastIndexOf=fc,j.lowerCase=td,j.lowerFirst=ed,j.lt=cf,j.lte=hf,j.max=Jd,j.maxBy=Vd,j.mean=Yd,j.meanBy=Xd,j.min=Qd,j.minBy=tg,j.stubArray=_r,j.stubFalse=Er,j.stubObject=Hd,j.stubString=$d,j.stubTrue=qd,j.multiply=eg,j.nth=dc,j.noConflict=Pd,j.noop=xr,j.now=di,j.pad=nd,j.padEnd=sd,j.padStart=id,j.parseInt=rd,j.random=Kf,j.reduce=vh,j.reduceRight=yh,j.repeat=od,j.replace=ad,j.result=Nf,j.round=ng,j.runInContext=J,j.sample=bh,j.size=Lh,j.snakeCase=ld,j.some=Sh,j.sortedIndex=Dc,j.sortedIndexBy=Oc,j.sortedIndexOf=Lc,j.sortedLastIndex=Sc,j.sortedLastIndexBy=wc,j.sortedLastIndexOf=Ac,j.startCase=ud,j.startsWith=cd,j.subtract=sg,j.sum=ig,j.sumBy=rg,j.template=hd,j.times=Gd,j.toFinite=jn,j.toInteger=Qt,j.toLength=Ba,j.toLower=fd,j.toNumber=gn,j.toSafeInteger=ff,j.toString=ue,j.toUpper=dd,j.trim=gd,j.trimEnd=md,j.trimStart=vd,j.truncate=yd,j.unescape=Td,j.uniqueId=Ud,j.upperCase=bd,j.upperFirst=Lr,j.each=Ea,j.eachRight=Ia,j.first=wa,Ar(j,function(){var t={};return Sn(j,function(e,l){he.call(j.prototype,l)||(t[l]=e)}),t}(),{chain:!1}),j.VERSION=n,pn(["bind","bindKey","curry","curryRight","partial","partialRight"],function(t){j[t].placeholder=j}),pn(["drop","take"],function(t,e){se.prototype[t]=function(l){l=l===s?1:Pe(Qt(l),0);var L=this.__filtered__&&!e?new se(this):this.clone();return L.__filtered__?L.__takeCount__=qe(l,L.__takeCount__):L.__views__.push({size:qe(l,lt),type:t+(L.__dir__<0?"Right":"")}),L},se.prototype[t+"Right"]=function(l){return this.reverse()[t](l).reverse()}}),pn(["filter","map","takeWhile"],function(t,e){var l=e+1,L=l==M||l==H;se.prototype[t]=function(C){var R=this.clone();return R.__iteratees__.push({iteratee:Bt(C,3),type:l}),R.__filtered__=R.__filtered__||L,R}}),pn(["head","last"],function(t,e){var l="take"+(e?"Right":"");se.prototype[t]=function(){return this[l](1).value()[0]}}),pn(["initial","tail"],function(t,e){var l="drop"+(e?"":"Right");se.prototype[t]=function(){return this.__filtered__?new se(this):this[l](1)}}),se.prototype.compact=function(){return this.filter(Qe)},se.prototype.find=function(t){return this.filter(t).head()},se.prototype.findLast=function(t){return this.reverse().find(t)},se.prototype.invokeMap=ee(function(t,e){return typeof t=="function"?new se(this):this.map(function(l){return ws(l,t,e)})}),se.prototype.reject=function(t){return this.filter(mi(Bt(t)))},se.prototype.slice=function(t,e){t=Qt(t);var l=this;return l.__filtered__&&(t>0||e<0)?new se(l):(t<0?l=l.takeRight(-t):t&&(l=l.drop(t)),e!==s&&(e=Qt(e),l=e<0?l.dropRight(-e):l.take(e-t)),l)},se.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},se.prototype.toArray=function(){return this.take(lt)},Sn(se.prototype,function(t,e){var l=/^(?:filter|find|map|reject)|While$/.test(e),L=/^(?:head|last)$/.test(e),C=j[L?"take"+(e=="last"?"Right":""):e],R=L||/^find/.test(e);C&&(j.prototype[e]=function(){var B=this.__wrapped__,z=L?[1]:arguments,V=B instanceof se,ot=z[0],at=V||Yt(B),dt=function(ne){var re=C.apply(j,Hn([ne],z));return L&&At?re[0]:re};at&&l&&typeof ot=="function"&&ot.length!=1&&(V=at=!1);var At=this.__chain__,jt=!!this.__actions__.length,Ut=R&&!At,te=V&&!jt;if(!R&&at){B=te?B:new se(this);var Wt=t.apply(B,z);return Wt.__actions__.push({func:hi,args:[dt],thisArg:s}),new cn(Wt,At)}return Ut&&te?t.apply(this,z):(Wt=this.thru(dt),Ut?L?Wt.value()[0]:Wt.value():Wt)})}),pn(["pop","push","shift","sort","splice","unshift"],function(t){var e=Ns[t],l=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",L=/^(?:pop|shift)$/.test(t);j.prototype[t]=function(){var C=arguments;if(L&&!this.__chain__){var R=this.value();return e.apply(Yt(R)?R:[],C)}return this[l](function(B){return e.apply(Yt(B)?B:[],C)})}}),Sn(se.prototype,function(t,e){var l=j[e];if(l){var L=l.name+"";he.call(ls,L)||(ls[L]=[]),ls[L].push({name:e,func:l})}}),ls[ri(s,_).name]=[{name:"wrapper",func:s}],se.prototype.clone=yp,se.prototype.reverse=Tp,se.prototype.value=bp,j.prototype.at=Jc,j.prototype.chain=Vc,j.prototype.commit=Yc,j.prototype.next=Xc,j.prototype.plant=th,j.prototype.reverse=eh,j.prototype.toJSON=j.prototype.valueOf=j.prototype.value=nh,j.prototype.first=j.prototype.head,ys&&(j.prototype[ys]=Qc),j},Fs=Yl();Re._=Fs,p=function(){return Fs}.call(g,r,g,w),p!==s&&(w.exports=p)}).call(this)},2685:(w,g,r)=>{"use strict";const p=r(8834),s=Symbol("max"),n=Symbol("length"),c=Symbol("lengthCalculator"),d=Symbol("allowStale"),a=Symbol("maxAge"),i=Symbol("dispose"),u=Symbol("noDisposeOnSet"),m=Symbol("lruList"),o=Symbol("cache"),v=Symbol("updateAgeOnGet"),f=()=>1;class h{constructor(A){if(typeof A=="number"&&(A={max:A}),A||(A={}),A.max&&(typeof A.max!="number"||A.max<0))throw new TypeError("max must be a non-negative number");const k=this[s]=A.max||1/0,I=A.length||f;if(this[c]=typeof I!="function"?f:I,this[d]=A.stale||!1,A.maxAge&&typeof A.maxAge!="number")throw new TypeError("maxAge must be a number");this[a]=A.maxAge||0,this[i]=A.dispose,this[u]=A.noDisposeOnSet||!1,this[v]=A.updateAgeOnGet||!1,this.reset()}set max(A){if(typeof A!="number"||A<0)throw new TypeError("max must be a non-negative number");this[s]=A||1/0,b(this)}get max(){return this[s]}set allowStale(A){this[d]=!!A}get allowStale(){return this[d]}set maxAge(A){if(typeof A!="number")throw new TypeError("maxAge must be a non-negative number");this[a]=A,b(this)}get maxAge(){return this[a]}set lengthCalculator(A){typeof A!="function"&&(A=f),A!==this[c]&&(this[c]=A,this[n]=0,this[m].forEach(k=>{k.length=this[c](k.value,k.key),this[n]+=k.length})),b(this)}get lengthCalculator(){return this[c]}get length(){return this[n]}get itemCount(){return this[m].length}rforEach(A,k){k=k||this;for(let I=this[m].tail;I!==null;){const E=I.prev;O(this,A,I,k),I=E}}forEach(A,k){k=k||this;for(let I=this[m].head;I!==null;){const E=I.next;O(this,A,I,k),I=E}}keys(){return this[m].toArray().map(A=>A.key)}values(){return this[m].toArray().map(A=>A.value)}reset(){this[i]&&this[m]&&this[m].length&&this[m].forEach(A=>this[i](A.key,A.value)),this[o]=new Map,this[m]=new p,this[n]=0}dump(){return this[m].map(A=>y(this,A)?!1:{k:A.key,v:A.value,e:A.now+(A.maxAge||0)}).toArray().filter(A=>A)}dumpLru(){return this[m]}set(A,k,I){if(I=I||this[a],I&&typeof I!="number")throw new TypeError("maxAge must be a number");const E=I?Date.now():0,x=this[c](k,A);if(this[o].has(A)){if(x>this[s])return _(this,this[o].get(A)),!1;const q=this[o].get(A).value;return this[i]&&(this[u]||this[i](A,q.value)),q.now=E,q.maxAge=I,q.value=k,this[n]+=x-q.length,q.length=x,this.get(A),b(this),!0}const P=new D(A,k,x,E,I);return P.length>this[s]?(this[i]&&this[i](A,k),!1):(this[n]+=P.length,this[m].unshift(P),this[o].set(A,this[m].head),b(this),!0)}has(A){if(!this[o].has(A))return!1;const k=this[o].get(A).value;return!y(this,k)}get(A){return T(this,A,!0)}peek(A){return T(this,A,!1)}pop(){const A=this[m].tail;return A?(_(this,A),A.value):null}del(A){_(this,this[o].get(A))}load(A){this.reset();const k=Date.now();for(let I=A.length-1;I>=0;I--){const E=A[I],x=E.e||0;if(x===0)this.set(E.k,E.v);else{const P=x-k;P>0&&this.set(E.k,E.v,P)}}}prune(){this[o].forEach((A,k)=>T(this,k,!1))}}const T=(S,A,k)=>{const I=S[o].get(A);if(I){const E=I.value;if(y(S,E)){if(_(S,I),!S[d])return}else k&&(S[v]&&(I.value.now=Date.now()),S[m].unshiftNode(I));return E.value}},y=(S,A)=>{if(!A||!A.maxAge&&!S[a])return!1;const k=Date.now()-A.now;return A.maxAge?k>A.maxAge:S[a]&&k>S[a]},b=S=>{if(S[n]>S[s])for(let A=S[m].tail;S[n]>S[s]&&A!==null;){const k=A.prev;_(S,A),A=k}},_=(S,A)=>{if(A){const k=A.value;S[i]&&S[i](k.key,k.value),S[n]-=k.length,S[o].delete(k.key),S[m].removeNode(A)}};class D{constructor(A,k,I,E,x){this.key=A,this.value=k,this.length=I,this.now=E,this.maxAge=x||0}}const O=(S,A,k,I)=>{let E=k.value;y(S,E)&&(_(S,k),S[d]||(E=void 0)),E&&A.call(I,E.value,E.key,S)};w.exports=h},4:()=>{(function(w){var g="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",r={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},p={bash:r,environment:{pattern:RegExp("\\$"+g),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+g),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};w.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?:\.\w+)*(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+g),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},parameter:{pattern:/(^|\s)-{1,2}(?:\w+:[+-]?)?\w+(?:\.\w+)*(?=[=\s]|$)/,alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:p},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:r}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:p},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:p.entity}}],environment:{pattern:RegExp("\\$?"+g),alias:"constant"},variable:p.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},r.inside=w.languages.bash;for(var s=["comment","function-name","for-or-select","assign-left","parameter","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],n=p.variable[1].inside,c=0;c<s.length;c++)n[s[c]]=w.languages.bash[s[c]];w.languages.sh=w.languages.bash,w.languages.shell=w.languages.bash})(Prism)},792:()=>{(function(w){function g(i){return RegExp("(^(?:"+i+"):[ 	]*(?![ 	]))[^]+","i")}w.languages.http={"request-line":{pattern:/^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,inside:{method:{pattern:/^[A-Z]+\b/,alias:"property"},"request-target":{pattern:/^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,lookbehind:!0,alias:"url",inside:w.languages.uri},"http-version":{pattern:/^(\s)HTTP\/[\d.]+/,lookbehind:!0,alias:"property"}}},"response-status":{pattern:/^HTTP\/[\d.]+ \d+ .+/m,inside:{"http-version":{pattern:/^HTTP\/[\d.]+/,alias:"property"},"status-code":{pattern:/^(\s)\d+(?=\s)/,lookbehind:!0,alias:"number"},"reason-phrase":{pattern:/^(\s).+/,lookbehind:!0,alias:"string"}}},header:{pattern:/^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,inside:{"header-value":[{pattern:g(/Content-Security-Policy/.source),lookbehind:!0,alias:["csp","languages-csp"],inside:w.languages.csp},{pattern:g(/Public-Key-Pins(?:-Report-Only)?/.source),lookbehind:!0,alias:["hpkp","languages-hpkp"],inside:w.languages.hpkp},{pattern:g(/Strict-Transport-Security/.source),lookbehind:!0,alias:["hsts","languages-hsts"],inside:w.languages.hsts},{pattern:g(/[^:]+/.source),lookbehind:!0}],"header-name":{pattern:/^[^:]+/,alias:"keyword"},punctuation:/^:/}}};var r=w.languages,p={"application/javascript":r.javascript,"application/json":r.json||r.javascript,"application/xml":r.xml,"text/xml":r.xml,"text/html":r.html,"text/css":r.css,"text/plain":r.plain},s={"application/json":!0,"application/xml":!0};function n(i){var u=i.replace(/^[a-z]+\//,""),m="\\w+/(?:[\\w.-]+\\+)+"+u+"(?![+\\w.-])";return"(?:"+i+"|"+m+")"}var c;for(var d in p)if(p[d]){c=c||{};var a=s[d]?n(d):d;c[d.replace(/\//g,"-")]={pattern:RegExp("("+/content-type:\s*/.source+a+/(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source+")"+/[^ \t\w-][\s\S]*/.source,"i"),lookbehind:!0,inside:p[d]}}c&&w.languages.insertBefore("http","header",c)})(Prism)},6064:()=>{Prism.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},Prism.languages.webmanifest=Prism.languages.json},3817:()=>{Prism.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python},2173:(w,g,r)=>{var p=typeof window!="undefined"?window:typeof WorkerGlobalScope!="undefined"&&self instanceof WorkerGlobalScope?self:{};/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */var s=function(n){var c=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,d=0,a={},i={manual:n.Prism&&n.Prism.manual,disableWorkerMessageHandler:n.Prism&&n.Prism.disableWorkerMessageHandler,util:{encode:function D(O){return O instanceof u?new u(O.type,D(O.content),O.alias):Array.isArray(O)?O.map(D):O.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(D){return Object.prototype.toString.call(D).slice(8,-1)},objId:function(D){return D.__id||Object.defineProperty(D,"__id",{value:++d}),D.__id},clone:function D(O,S){S=S||{};var A,k;switch(i.util.type(O)){case"Object":if(k=i.util.objId(O),S[k])return S[k];A={},S[k]=A;for(var I in O)O.hasOwnProperty(I)&&(A[I]=D(O[I],S));return A;case"Array":return k=i.util.objId(O),S[k]?S[k]:(A=[],S[k]=A,O.forEach(function(E,x){A[x]=D(E,S)}),A);default:return O}},getLanguage:function(D){for(;D;){var O=c.exec(D.className);if(O)return O[1].toLowerCase();D=D.parentElement}return"none"},setLanguage:function(D,O){D.className=D.className.replace(RegExp(c,"gi"),""),D.classList.add("language-"+O)},currentScript:function(){if(typeof document=="undefined")return null;if("currentScript"in document&&1<2)return document.currentScript;try{throw new Error}catch(A){var D=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(A.stack)||[])[1];if(D){var O=document.getElementsByTagName("script");for(var S in O)if(O[S].src==D)return O[S]}return null}},isActive:function(D,O,S){for(var A="no-"+O;D;){var k=D.classList;if(k.contains(O))return!0;if(k.contains(A))return!1;D=D.parentElement}return!!S}},languages:{plain:a,plaintext:a,text:a,txt:a,extend:function(D,O){var S=i.util.clone(i.languages[D]);for(var A in O)S[A]=O[A];return S},insertBefore:function(D,O,S,A){A=A||i.languages;var k=A[D],I={};for(var E in k)if(k.hasOwnProperty(E)){if(E==O)for(var x in S)S.hasOwnProperty(x)&&(I[x]=S[x]);S.hasOwnProperty(E)||(I[E]=k[E])}var P=A[D];return A[D]=I,i.languages.DFS(i.languages,function(F,q){q===P&&F!=D&&(this[F]=I)}),I},DFS:function D(O,S,A,k){k=k||{};var I=i.util.objId;for(var E in O)if(O.hasOwnProperty(E)){S.call(O,E,O[E],A||E);var x=O[E],P=i.util.type(x);P==="Object"&&!k[I(x)]?(k[I(x)]=!0,D(x,S,null,k)):P==="Array"&&!k[I(x)]&&(k[I(x)]=!0,D(x,S,E,k))}}},plugins:{},highlightAll:function(D,O){i.highlightAllUnder(document,D,O)},highlightAllUnder:function(D,O,S){var A={callback:S,container:D,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};i.hooks.run("before-highlightall",A),A.elements=Array.prototype.slice.apply(A.container.querySelectorAll(A.selector)),i.hooks.run("before-all-elements-highlight",A);for(var k=0,I;I=A.elements[k++];)i.highlightElement(I,O===!0,A.callback)},highlightElement:function(D,O,S){var A=i.util.getLanguage(D),k=i.languages[A];i.util.setLanguage(D,A);var I=D.parentElement;I&&I.nodeName.toLowerCase()==="pre"&&i.util.setLanguage(I,A);var E=D.textContent,x={element:D,language:A,grammar:k,code:E};function P(q){x.highlightedCode=q,i.hooks.run("before-insert",x),x.element.innerHTML=x.highlightedCode,i.hooks.run("after-highlight",x),i.hooks.run("complete",x),S&&S.call(x.element)}if(i.hooks.run("before-sanity-check",x),I=x.element.parentElement,I&&I.nodeName.toLowerCase()==="pre"&&!I.hasAttribute("tabindex")&&I.setAttribute("tabindex","0"),!x.code){i.hooks.run("complete",x),S&&S.call(x.element);return}if(i.hooks.run("before-highlight",x),!x.grammar){P(i.util.encode(x.code));return}if(O&&n.Worker){var F=new Worker(i.filename);F.onmessage=function(q){P(q.data)},F.postMessage(JSON.stringify({language:x.language,code:x.code,immediateClose:!0}))}else P(i.highlight(x.code,x.grammar,x.language))},highlight:function(D,O,S){var A={code:D,grammar:O,language:S};if(i.hooks.run("before-tokenize",A),!A.grammar)throw new Error('The language "'+A.language+'" has no grammar.');return A.tokens=i.tokenize(A.code,A.grammar),i.hooks.run("after-tokenize",A),u.stringify(i.util.encode(A.tokens),A.language)},tokenize:function(D,O){var S=O.rest;if(S){for(var A in S)O[A]=S[A];delete O.rest}var k=new v;return f(k,k.head,D),o(D,k,O,k.head,0),T(k)},hooks:{all:{},add:function(D,O){var S=i.hooks.all;S[D]=S[D]||[],S[D].push(O)},run:function(D,O){var S=i.hooks.all[D];if(!(!S||!S.length))for(var A=0,k;k=S[A++];)k(O)}},Token:u};n.Prism=i;function u(D,O,S,A){this.type=D,this.content=O,this.alias=S,this.length=(A||"").length|0}u.stringify=function D(O,S){if(typeof O=="string")return O;if(Array.isArray(O)){var A="";return O.forEach(function(P){A+=D(P,S)}),A}var k={type:O.type,content:D(O.content,S),tag:"span",classes:["token",O.type],attributes:{},language:S},I=O.alias;I&&(Array.isArray(I)?Array.prototype.push.apply(k.classes,I):k.classes.push(I)),i.hooks.run("wrap",k);var E="";for(var x in k.attributes)E+=" "+x+'="'+(k.attributes[x]||"").replace(/"/g,"&quot;")+'"';return"<"+k.tag+' class="'+k.classes.join(" ")+'"'+E+">"+k.content+"</"+k.tag+">"};function m(D,O,S,A){D.lastIndex=O;var k=D.exec(S);if(k&&A&&k[1]){var I=k[1].length;k.index+=I,k[0]=k[0].slice(I)}return k}function o(D,O,S,A,k,I){for(var E in S)if(!(!S.hasOwnProperty(E)||!S[E])){var x=S[E];x=Array.isArray(x)?x:[x];for(var P=0;P<x.length;++P){if(I&&I.cause==E+","+P)return;var F=x[P],q=F.inside,W=!!F.lookbehind,M=!!F.greedy,$=F.alias;if(M&&!F.pattern.global){var H=F.pattern.toString().match(/[imsuy]*$/)[0];F.pattern=RegExp(F.pattern.source,H+"g")}for(var Z=F.pattern||F,G=A.next,tt=k;G!==O.tail&&!(I&&tt>=I.reach);tt+=G.value.length,G=G.next){var it=G.value;if(O.length>D.length)return;if(!(it instanceof u)){var lt=1,Y;if(M){if(Y=m(Z,tt,D,W),!Y||Y.index>=D.length)break;var oe=Y.index,bt=Y.index+Y[0].length,St=tt;for(St+=G.value.length;oe>=St;)G=G.next,St+=G.value.length;if(St-=G.value.length,tt=St,G.value instanceof u)continue;for(var xt=G;xt!==O.tail&&(St<bt||typeof xt.value=="string");xt=xt.next)lt++,St+=xt.value.length;lt--,it=D.slice(tt,St),Y.index-=tt}else if(Y=m(Z,0,it,W),!Y)continue;var oe=Y.index,De=Y[0],_e=it.slice(0,oe),we=it.slice(oe+De.length),Me=tt+it.length;I&&Me>I.reach&&(I.reach=Me);var ut=G.prev;_e&&(ut=f(O,ut,_e),tt+=_e.length),h(O,ut,lt);var Pt=new u(E,q?i.tokenize(De,q):De,$,De);if(G=f(O,ut,Pt),we&&f(O,G,we),lt>1){var _t={cause:E+","+P,reach:Me};o(D,O,S,G.prev,tt,_t),I&&_t.reach>I.reach&&(I.reach=_t.reach)}}}}}}function v(){var D={value:null,prev:null,next:null},O={value:null,prev:D,next:null};D.next=O,this.head=D,this.tail=O,this.length=0}function f(D,O,S){var A=O.next,k={value:S,prev:O,next:A};return O.next=k,A.prev=k,D.length++,k}function h(D,O,S){for(var A=O.next,k=0;k<S&&A!==D.tail;k++)A=A.next;O.next=A,A.prev=O,D.length-=k}function T(D){for(var O=[],S=D.head.next;S!==D.tail;)O.push(S.value),S=S.next;return O}if(!n.document)return n.addEventListener&&(i.disableWorkerMessageHandler||n.addEventListener("message",function(D){var O=JSON.parse(D.data),S=O.language,A=O.code,k=O.immediateClose;n.postMessage(i.highlight(A,i.languages[S],S)),k&&n.close()},!1)),i;var y=i.util.currentScript();y&&(i.filename=y.src,y.hasAttribute("data-manual")&&(i.manual=!0));function b(){i.manual||i.highlightAll()}if(!i.manual){var _=document.readyState;_==="loading"||_==="interactive"&&y&&y.defer?document.addEventListener("DOMContentLoaded",b):window.requestAnimationFrame?window.requestAnimationFrame(b):window.setTimeout(b,16)}return i}(p);w.exports&&(w.exports=s),typeof r.g!="undefined"&&(r.g.Prism=s),s.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},s.languages.markup.tag.inside["attr-value"].inside.entity=s.languages.markup.entity,s.languages.markup.doctype.inside["internal-subset"].inside=s.languages.markup,s.hooks.add("wrap",function(n){n.type==="entity"&&(n.attributes.title=n.content.replace(/&amp;/,"&"))}),Object.defineProperty(s.languages.markup.tag,"addInlined",{value:function(c,d){var a={};a["language-"+d]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:s.languages[d]},a.cdata=/^<!\[CDATA\[|\]\]>$/i;var i={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:a}};i["language-"+d]={pattern:/[\s\S]+/,inside:s.languages[d]};var u={};u[c]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,function(){return c}),"i"),lookbehind:!0,greedy:!0,inside:i},s.languages.insertBefore("markup","cdata",u)}}),Object.defineProperty(s.languages.markup.tag,"addAttribute",{value:function(n,c){s.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+n+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[c,"language-"+c],inside:s.languages[c]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),s.languages.html=s.languages.markup,s.languages.mathml=s.languages.markup,s.languages.svg=s.languages.markup,s.languages.xml=s.languages.extend("markup",{}),s.languages.ssml=s.languages.xml,s.languages.atom=s.languages.xml,s.languages.rss=s.languages.xml,function(n){var c=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;n.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+c.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+c.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+c.source+"$"),alias:"url"}}},selector:{pattern:RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|`+c.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:c,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},n.languages.css.atrule.inside.rest=n.languages.css;var d=n.languages.markup;d&&(d.tag.addInlined("style","css"),d.tag.addAttribute("style","css"))}(s),s.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},s.languages.javascript=s.languages.extend("clike",{"class-name":[s.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+(/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source)+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),s.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,s.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:s.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:s.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:s.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:s.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:s.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),s.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:s.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),s.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),s.languages.markup&&(s.languages.markup.tag.addInlined("script","javascript"),s.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),s.languages.js=s.languages.javascript,function(){if(typeof s=="undefined"||typeof document=="undefined")return;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var n="Loading\u2026",c=function(y,b){return"\u2716 Error "+y+" while fetching file: "+b},d="\u2716 Error: File does not exist or is empty",a={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},i="data-src-status",u="loading",m="loaded",o="failed",v="pre[data-src]:not(["+i+'="'+m+'"]):not(['+i+'="'+u+'"])';function f(y,b,_){var D=new XMLHttpRequest;D.open("GET",y,!0),D.onreadystatechange=function(){D.readyState==4&&(D.status<400&&D.responseText?b(D.responseText):D.status>=400?_(c(D.status,D.statusText)):_(d))},D.send(null)}function h(y){var b=/^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(y||"");if(b){var _=Number(b[1]),D=b[2],O=b[3];return D?O?[_,Number(O)]:[_,void 0]:[_,_]}}s.hooks.add("before-highlightall",function(y){y.selector+=", "+v}),s.hooks.add("before-sanity-check",function(y){var b=y.element;if(b.matches(v)){y.code="",b.setAttribute(i,u);var _=b.appendChild(document.createElement("CODE"));_.textContent=n;var D=b.getAttribute("data-src"),O=y.language;if(O==="none"){var S=(/\.(\w+)$/.exec(D)||[,"none"])[1];O=a[S]||S}s.util.setLanguage(_,O),s.util.setLanguage(b,O);var A=s.plugins.autoloader;A&&A.loadLanguages(O),f(D,function(k){b.setAttribute(i,m);var I=h(b.getAttribute("data-range"));if(I){var E=k.split(/\r\n?|\n/g),x=I[0],P=I[1]==null?E.length:I[1];x<0&&(x+=E.length),x=Math.max(0,Math.min(x-1,E.length)),P<0&&(P+=E.length),P=Math.max(0,Math.min(P,E.length)),k=E.slice(x,P).join(`
`),b.hasAttribute("data-start")||b.setAttribute("data-start",String(x+1))}_.textContent=k,s.highlightElement(_)},function(k){b.setAttribute(i,o),_.textContent=k})}}),s.plugins.fileHighlight={highlight:function(b){for(var _=(b||document).querySelectorAll(v),D=0,O;O=_[D++];)s.highlightElement(O)}};var T=!1;s.fileHighlight=function(){T||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),T=!0),s.plugins.fileHighlight.highlight.apply(this,arguments)}}()},6690:(w,g)=>{"use strict";var r=Object.prototype.hasOwnProperty,p;function s(a){try{return decodeURIComponent(a.replace(/\+/g," "))}catch(i){return null}}function n(a){try{return encodeURIComponent(a)}catch(i){return null}}function c(a){for(var i=/([^=?#&]+)=?([^&]*)/g,u={},m;m=i.exec(a);){var o=s(m[1]),v=s(m[2]);o===null||v===null||o in u||(u[o]=v)}return u}function d(a,i){i=i||"";var u=[],m,o;typeof i!="string"&&(i="?");for(o in a)if(r.call(a,o)){if(m=a[o],!m&&(m===null||m===p||isNaN(m))&&(m=""),o=n(o),m=n(m),o===null||m===null)continue;u.push(o+"="+m)}return u.length?i+u.join("&"):""}g.stringify=d,g.parse=c},1653:w=>{"use strict";w.exports=function(r,p){if(p=p.split(":")[0],r=+r,!r)return!1;switch(p){case"http":case"ws":return r!==80;case"https":case"wss":return r!==443;case"ftp":return r!==21;case"gopher":return r!==70;case"file":return!1}return r!==0}},4034:(w,g,r)=>{const p=Symbol("SemVer ANY");class s{static get ANY(){return p}constructor(v,f){if(f=n(f),v instanceof s){if(v.loose===!!f.loose)return v;v=v.value}v=v.trim().split(/\s+/).join(" "),i("comparator",v,f),this.options=f,this.loose=!!f.loose,this.parse(v),this.semver===p?this.value="":this.value=this.operator+this.semver.version,i("comp",this)}parse(v){const f=this.options.loose?c[d.COMPARATORLOOSE]:c[d.COMPARATOR],h=v.match(f);if(!h)throw new TypeError(`Invalid comparator: ${v}`);this.operator=h[1]!==void 0?h[1]:"",this.operator==="="&&(this.operator=""),h[2]?this.semver=new u(h[2],this.options.loose):this.semver=p}toString(){return this.value}test(v){if(i("Comparator.test",v,this.options.loose),this.semver===p||v===p)return!0;if(typeof v=="string")try{v=new u(v,this.options)}catch(f){return!1}return a(v,this.operator,this.semver,this.options)}intersects(v,f){if(!(v instanceof s))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new m(v.value,f).test(this.value):v.operator===""?v.value===""?!0:new m(this.value,f).test(v.semver):(f=n(f),f.includePrerelease&&(this.value==="<0.0.0-0"||v.value==="<0.0.0-0")||!f.includePrerelease&&(this.value.startsWith("<0.0.0")||v.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&v.operator.startsWith(">")||this.operator.startsWith("<")&&v.operator.startsWith("<")||this.semver.version===v.semver.version&&this.operator.includes("=")&&v.operator.includes("=")||a(this.semver,"<",v.semver,f)&&this.operator.startsWith(">")&&v.operator.startsWith("<")||a(this.semver,">",v.semver,f)&&this.operator.startsWith("<")&&v.operator.startsWith(">")))}}w.exports=s;const n=r(8117),{safeRe:c,t:d}=r(5092),a=r(1936),i=r(5667),u=r(6532),m=r(2417)},2417:(w,g,r)=>{class p{constructor($,H){if(H=c(H),$ instanceof p)return $.loose===!!H.loose&&$.includePrerelease===!!H.includePrerelease?$:new p($.raw,H);if($ instanceof d)return this.raw=$.value,this.set=[[$]],this.format(),this;if(this.options=H,this.loose=!!H.loose,this.includePrerelease=!!H.includePrerelease,this.raw=$.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map(Z=>this.parseRange(Z.trim())).filter(Z=>Z.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const Z=this.set[0];if(this.set=this.set.filter(G=>!y(G[0])),this.set.length===0)this.set=[Z];else if(this.set.length>1){for(const G of this.set)if(G.length===1&&b(G[0])){this.set=[G];break}}}this.format()}format(){return this.range=this.set.map($=>$.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange($){const Z=((this.options.includePrerelease&&h)|(this.options.loose&&T))+":"+$,G=n.get(Z);if(G)return G;const tt=this.options.loose,it=tt?u[m.HYPHENRANGELOOSE]:u[m.HYPHENRANGE];$=$.replace(it,q(this.options.includePrerelease)),a("hyphen replace",$),$=$.replace(u[m.COMPARATORTRIM],o),a("comparator trim",$),$=$.replace(u[m.TILDETRIM],v),a("tilde trim",$),$=$.replace(u[m.CARETTRIM],f),a("caret trim",$);let lt=$.split(" ").map(xt=>D(xt,this.options)).join(" ").split(/\s+/).map(xt=>F(xt,this.options));tt&&(lt=lt.filter(xt=>(a("loose invalid filter",xt,this.options),!!xt.match(u[m.COMPARATORLOOSE])))),a("range list",lt);const Y=new Map,bt=lt.map(xt=>new d(xt,this.options));for(const xt of bt){if(y(xt))return[xt];Y.set(xt.value,xt)}Y.size>1&&Y.has("")&&Y.delete("");const St=[...Y.values()];return n.set(Z,St),St}intersects($,H){if(!($ instanceof p))throw new TypeError("a Range is required");return this.set.some(Z=>_(Z,H)&&$.set.some(G=>_(G,H)&&Z.every(tt=>G.every(it=>tt.intersects(it,H)))))}test($){if(!$)return!1;if(typeof $=="string")try{$=new i($,this.options)}catch(H){return!1}for(let H=0;H<this.set.length;H++)if(W(this.set[H],$,this.options))return!0;return!1}}w.exports=p;const s=r(2685),n=new s({max:1e3}),c=r(8117),d=r(4034),a=r(5667),i=r(6532),{safeRe:u,t:m,comparatorTrimReplace:o,tildeTrimReplace:v,caretTrimReplace:f}=r(5092),{FLAG_INCLUDE_PRERELEASE:h,FLAG_LOOSE:T}=r(6719),y=M=>M.value==="<0.0.0-0",b=M=>M.value==="",_=(M,$)=>{let H=!0;const Z=M.slice();let G=Z.pop();for(;H&&Z.length;)H=Z.every(tt=>G.intersects(tt,$)),G=Z.pop();return H},D=(M,$)=>(a("comp",M,$),M=k(M,$),a("caret",M),M=S(M,$),a("tildes",M),M=E(M,$),a("xrange",M),M=P(M,$),a("stars",M),M),O=M=>!M||M.toLowerCase()==="x"||M==="*",S=(M,$)=>M.trim().split(/\s+/).map(H=>A(H,$)).join(" "),A=(M,$)=>{const H=$.loose?u[m.TILDELOOSE]:u[m.TILDE];return M.replace(H,(Z,G,tt,it,lt)=>{a("tilde",M,Z,G,tt,it,lt);let Y;return O(G)?Y="":O(tt)?Y=`>=${G}.0.0 <${+G+1}.0.0-0`:O(it)?Y=`>=${G}.${tt}.0 <${G}.${+tt+1}.0-0`:lt?(a("replaceTilde pr",lt),Y=`>=${G}.${tt}.${it}-${lt} <${G}.${+tt+1}.0-0`):Y=`>=${G}.${tt}.${it} <${G}.${+tt+1}.0-0`,a("tilde return",Y),Y})},k=(M,$)=>M.trim().split(/\s+/).map(H=>I(H,$)).join(" "),I=(M,$)=>{a("caret",M,$);const H=$.loose?u[m.CARETLOOSE]:u[m.CARET],Z=$.includePrerelease?"-0":"";return M.replace(H,(G,tt,it,lt,Y)=>{a("caret",M,G,tt,it,lt,Y);let bt;return O(tt)?bt="":O(it)?bt=`>=${tt}.0.0${Z} <${+tt+1}.0.0-0`:O(lt)?tt==="0"?bt=`>=${tt}.${it}.0${Z} <${tt}.${+it+1}.0-0`:bt=`>=${tt}.${it}.0${Z} <${+tt+1}.0.0-0`:Y?(a("replaceCaret pr",Y),tt==="0"?it==="0"?bt=`>=${tt}.${it}.${lt}-${Y} <${tt}.${it}.${+lt+1}-0`:bt=`>=${tt}.${it}.${lt}-${Y} <${tt}.${+it+1}.0-0`:bt=`>=${tt}.${it}.${lt}-${Y} <${+tt+1}.0.0-0`):(a("no pr"),tt==="0"?it==="0"?bt=`>=${tt}.${it}.${lt}${Z} <${tt}.${it}.${+lt+1}-0`:bt=`>=${tt}.${it}.${lt}${Z} <${tt}.${+it+1}.0-0`:bt=`>=${tt}.${it}.${lt} <${+tt+1}.0.0-0`),a("caret return",bt),bt})},E=(M,$)=>(a("replaceXRanges",M,$),M.split(/\s+/).map(H=>x(H,$)).join(" ")),x=(M,$)=>{M=M.trim();const H=$.loose?u[m.XRANGELOOSE]:u[m.XRANGE];return M.replace(H,(Z,G,tt,it,lt,Y)=>{a("xRange",M,Z,G,tt,it,lt,Y);const bt=O(tt),St=bt||O(it),xt=St||O(lt),oe=xt;return G==="="&&oe&&(G=""),Y=$.includePrerelease?"-0":"",bt?G===">"||G==="<"?Z="<0.0.0-0":Z="*":G&&oe?(St&&(it=0),lt=0,G===">"?(G=">=",St?(tt=+tt+1,it=0,lt=0):(it=+it+1,lt=0)):G==="<="&&(G="<",St?tt=+tt+1:it=+it+1),G==="<"&&(Y="-0"),Z=`${G+tt}.${it}.${lt}${Y}`):St?Z=`>=${tt}.0.0${Y} <${+tt+1}.0.0-0`:xt&&(Z=`>=${tt}.${it}.0${Y} <${tt}.${+it+1}.0-0`),a("xRange return",Z),Z})},P=(M,$)=>(a("replaceStars",M,$),M.trim().replace(u[m.STAR],"")),F=(M,$)=>(a("replaceGTE0",M,$),M.trim().replace(u[$.includePrerelease?m.GTE0PRE:m.GTE0],"")),q=M=>($,H,Z,G,tt,it,lt,Y,bt,St,xt,oe,De)=>(O(Z)?H="":O(G)?H=`>=${Z}.0.0${M?"-0":""}`:O(tt)?H=`>=${Z}.${G}.0${M?"-0":""}`:it?H=`>=${H}`:H=`>=${H}${M?"-0":""}`,O(bt)?Y="":O(St)?Y=`<${+bt+1}.0.0-0`:O(xt)?Y=`<${bt}.${+St+1}.0-0`:oe?Y=`<=${bt}.${St}.${xt}-${oe}`:M?Y=`<${bt}.${St}.${+xt+1}-0`:Y=`<=${Y}`,`${H} ${Y}`.trim()),W=(M,$,H)=>{for(let Z=0;Z<M.length;Z++)if(!M[Z].test($))return!1;if($.prerelease.length&&!H.includePrerelease){for(let Z=0;Z<M.length;Z++)if(a(M[Z].semver),M[Z].semver!==d.ANY&&M[Z].semver.prerelease.length>0){const G=M[Z].semver;if(G.major===$.major&&G.minor===$.minor&&G.patch===$.patch)return!0}return!1}return!0}},6532:(w,g,r)=>{const p=r(5667),{MAX_LENGTH:s,MAX_SAFE_INTEGER:n}=r(6719),{safeRe:c,t:d}=r(5092),a=r(8117),{compareIdentifiers:i}=r(5089);class u{constructor(o,v){if(v=a(v),o instanceof u){if(o.loose===!!v.loose&&o.includePrerelease===!!v.includePrerelease)return o;o=o.version}else if(typeof o!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof o}".`);if(o.length>s)throw new TypeError(`version is longer than ${s} characters`);p("SemVer",o,v),this.options=v,this.loose=!!v.loose,this.includePrerelease=!!v.includePrerelease;const f=o.trim().match(v.loose?c[d.LOOSE]:c[d.FULL]);if(!f)throw new TypeError(`Invalid Version: ${o}`);if(this.raw=o,this.major=+f[1],this.minor=+f[2],this.patch=+f[3],this.major>n||this.major<0)throw new TypeError("Invalid major version");if(this.minor>n||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>n||this.patch<0)throw new TypeError("Invalid patch version");f[4]?this.prerelease=f[4].split(".").map(h=>{if(/^[0-9]+$/.test(h)){const T=+h;if(T>=0&&T<n)return T}return h}):this.prerelease=[],this.build=f[5]?f[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(o){if(p("SemVer.compare",this.version,this.options,o),!(o instanceof u)){if(typeof o=="string"&&o===this.version)return 0;o=new u(o,this.options)}return o.version===this.version?0:this.compareMain(o)||this.comparePre(o)}compareMain(o){return o instanceof u||(o=new u(o,this.options)),i(this.major,o.major)||i(this.minor,o.minor)||i(this.patch,o.patch)}comparePre(o){if(o instanceof u||(o=new u(o,this.options)),this.prerelease.length&&!o.prerelease.length)return-1;if(!this.prerelease.length&&o.prerelease.length)return 1;if(!this.prerelease.length&&!o.prerelease.length)return 0;let v=0;do{const f=this.prerelease[v],h=o.prerelease[v];if(p("prerelease compare",v,f,h),f===void 0&&h===void 0)return 0;if(h===void 0)return 1;if(f===void 0)return-1;if(f===h)continue;return i(f,h)}while(++v)}compareBuild(o){o instanceof u||(o=new u(o,this.options));let v=0;do{const f=this.build[v],h=o.build[v];if(p("prerelease compare",v,f,h),f===void 0&&h===void 0)return 0;if(h===void 0)return 1;if(f===void 0)return-1;if(f===h)continue;return i(f,h)}while(++v)}inc(o,v,f){switch(o){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",v,f);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",v,f);break;case"prepatch":this.prerelease.length=0,this.inc("patch",v,f),this.inc("pre",v,f);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",v,f),this.inc("pre",v,f);break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{const h=Number(f)?1:0;if(!v&&f===!1)throw new Error("invalid increment argument: identifier is empty");if(this.prerelease.length===0)this.prerelease=[h];else{let T=this.prerelease.length;for(;--T>=0;)typeof this.prerelease[T]=="number"&&(this.prerelease[T]++,T=-2);if(T===-1){if(v===this.prerelease.join(".")&&f===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(h)}}if(v){let T=[v,h];f===!1&&(T=[v]),i(this.prerelease[0],v)===0?isNaN(this.prerelease[1])&&(this.prerelease=T):this.prerelease=T}break}default:throw new Error(`invalid increment argument: ${o}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}w.exports=u},4051:(w,g,r)=>{const p=r(5668),s=(n,c)=>{const d=p(n.trim().replace(/^[=v]+/,""),c);return d?d.version:null};w.exports=s},1936:(w,g,r)=>{const p=r(934),s=r(794),n=r(6775),c=r(8250),d=r(5976),a=r(9982),i=(u,m,o,v)=>{switch(m){case"===":return typeof u=="object"&&(u=u.version),typeof o=="object"&&(o=o.version),u===o;case"!==":return typeof u=="object"&&(u=u.version),typeof o=="object"&&(o=o.version),u!==o;case"":case"=":case"==":return p(u,o,v);case"!=":return s(u,o,v);case">":return n(u,o,v);case">=":return c(u,o,v);case"<":return d(u,o,v);case"<=":return a(u,o,v);default:throw new TypeError(`Invalid operator: ${m}`)}};w.exports=i},5147:(w,g,r)=>{const p=r(6532),s=r(5668),{safeRe:n,t:c}=r(5092),d=(a,i)=>{if(a instanceof p)return a;if(typeof a=="number"&&(a=String(a)),typeof a!="string")return null;i=i||{};let u=null;if(!i.rtl)u=a.match(n[c.COERCE]);else{let m;for(;(m=n[c.COERCERTL].exec(a))&&(!u||u.index+u[0].length!==a.length);)(!u||m.index+m[0].length!==u.index+u[0].length)&&(u=m),n[c.COERCERTL].lastIndex=m.index+m[1].length+m[2].length;n[c.COERCERTL].lastIndex=-1}return u===null?null:s(`${u[2]}.${u[3]||"0"}.${u[4]||"0"}`,i)};w.exports=d},5518:(w,g,r)=>{const p=r(6532),s=(n,c,d)=>{const a=new p(n,d),i=new p(c,d);return a.compare(i)||a.compareBuild(i)};w.exports=s},9215:(w,g,r)=>{const p=r(6180),s=(n,c)=>p(n,c,!0);w.exports=s},6180:(w,g,r)=>{const p=r(6532),s=(n,c,d)=>new p(n,d).compare(new p(c,d));w.exports=s},1664:(w,g,r)=>{const p=r(5668),s=(n,c)=>{const d=p(n,null,!0),a=p(c,null,!0),i=d.compare(a);if(i===0)return null;const u=i>0,m=u?d:a,o=u?a:d,v=!!m.prerelease.length;if(!!o.prerelease.length&&!v)return!o.patch&&!o.minor?"major":m.patch?"patch":m.minor?"minor":"major";const h=v?"pre":"";return d.major!==a.major?h+"major":d.minor!==a.minor?h+"minor":d.patch!==a.patch?h+"patch":"prerelease"};w.exports=s},934:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(n,c,d)===0;w.exports=s},6775:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(n,c,d)>0;w.exports=s},8250:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(n,c,d)>=0;w.exports=s},7733:(w,g,r)=>{const p=r(6532),s=(n,c,d,a,i)=>{typeof d=="string"&&(i=a,a=d,d=void 0);try{return new p(n instanceof p?n.version:n,d).inc(c,a,i).version}catch(u){return null}};w.exports=s},5976:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(n,c,d)<0;w.exports=s},9982:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(n,c,d)<=0;w.exports=s},3832:(w,g,r)=>{const p=r(6532),s=(n,c)=>new p(n,c).major;w.exports=s},7045:(w,g,r)=>{const p=r(6532),s=(n,c)=>new p(n,c).minor;w.exports=s},794:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(n,c,d)!==0;w.exports=s},5668:(w,g,r)=>{const p=r(6532),s=(n,c,d=!1)=>{if(n instanceof p)return n;try{return new p(n,c)}catch(a){if(!d)return null;throw a}};w.exports=s},2626:(w,g,r)=>{const p=r(6532),s=(n,c)=>new p(n,c).patch;w.exports=s},643:(w,g,r)=>{const p=r(5668),s=(n,c)=>{const d=p(n,c);return d&&d.prerelease.length?d.prerelease:null};w.exports=s},1894:(w,g,r)=>{const p=r(6180),s=(n,c,d)=>p(c,n,d);w.exports=s},4449:(w,g,r)=>{const p=r(5518),s=(n,c)=>n.sort((d,a)=>p(a,d,c));w.exports=s},5570:(w,g,r)=>{const p=r(2417),s=(n,c,d)=>{try{c=new p(c,d)}catch(a){return!1}return c.test(n)};w.exports=s},2495:(w,g,r)=>{const p=r(5518),s=(n,c)=>n.sort((d,a)=>p(d,a,c));w.exports=s},9154:(w,g,r)=>{const p=r(5668),s=(n,c)=>{const d=p(n,c);return d?d.version:null};w.exports=s},2069:(w,g,r)=>{const p=r(5092),s=r(6719),n=r(6532),c=r(5089),d=r(5668),a=r(9154),i=r(4051),u=r(7733),m=r(1664),o=r(3832),v=r(7045),f=r(2626),h=r(643),T=r(6180),y=r(1894),b=r(9215),_=r(5518),D=r(2495),O=r(4449),S=r(6775),A=r(5976),k=r(934),I=r(794),E=r(8250),x=r(9982),P=r(1936),F=r(5147),q=r(4034),W=r(2417),M=r(5570),$=r(7964),H=r(7682),Z=r(3452),G=r(3228),tt=r(6986),it=r(8218),lt=r(9588),Y=r(5849),bt=r(2764),St=r(8182),xt=r(6837);w.exports={parse:d,valid:a,clean:i,inc:u,diff:m,major:o,minor:v,patch:f,prerelease:h,compare:T,rcompare:y,compareLoose:b,compareBuild:_,sort:D,rsort:O,gt:S,lt:A,eq:k,neq:I,gte:E,lte:x,cmp:P,coerce:F,Comparator:q,Range:W,satisfies:M,toComparators:$,maxSatisfying:H,minSatisfying:Z,minVersion:G,validRange:tt,outside:it,gtr:lt,ltr:Y,intersects:bt,simplifyRange:St,subset:xt,SemVer:n,re:p.re,src:p.src,tokens:p.t,SEMVER_SPEC_VERSION:s.SEMVER_SPEC_VERSION,RELEASE_TYPES:s.RELEASE_TYPES,compareIdentifiers:c.compareIdentifiers,rcompareIdentifiers:c.rcompareIdentifiers}},6719:w=>{const g="2.0.0",p=Number.MAX_SAFE_INTEGER||9007199254740991,s=16,n=256-6,c=["major","premajor","minor","preminor","patch","prepatch","prerelease"];w.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:s,MAX_SAFE_BUILD_LENGTH:n,MAX_SAFE_INTEGER:p,RELEASE_TYPES:c,SEMVER_SPEC_VERSION:g,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},5667:w=>{const g=typeof process=="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...r)=>console.error("SEMVER",...r):()=>{};w.exports=g},5089:w=>{const g=/^[0-9]+$/,r=(s,n)=>{const c=g.test(s),d=g.test(n);return c&&d&&(s=+s,n=+n),s===n?0:c&&!d?-1:d&&!c?1:s<n?-1:1},p=(s,n)=>r(n,s);w.exports={compareIdentifiers:r,rcompareIdentifiers:p}},8117:w=>{const g=Object.freeze({loose:!0}),r=Object.freeze({}),p=s=>s?typeof s!="object"?g:s:r;w.exports=p},5092:(w,g,r)=>{const{MAX_SAFE_COMPONENT_LENGTH:p,MAX_SAFE_BUILD_LENGTH:s,MAX_LENGTH:n}=r(6719),c=r(5667);g=w.exports={};const d=g.re=[],a=g.safeRe=[],i=g.src=[],u=g.t={};let m=0;const o="[a-zA-Z0-9-]",v=[["\\s",1],["\\d",n],[o,s]],f=T=>{for(const[y,b]of v)T=T.split(`${y}*`).join(`${y}{0,${b}}`).split(`${y}+`).join(`${y}{1,${b}}`);return T},h=(T,y,b)=>{const _=f(y),D=m++;c(T,D,y),u[T]=D,i[D]=y,d[D]=new RegExp(y,b?"g":void 0),a[D]=new RegExp(_,b?"g":void 0)};h("NUMERICIDENTIFIER","0|[1-9]\\d*"),h("NUMERICIDENTIFIERLOOSE","\\d+"),h("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${o}*`),h("MAINVERSION",`(${i[u.NUMERICIDENTIFIER]})\\.(${i[u.NUMERICIDENTIFIER]})\\.(${i[u.NUMERICIDENTIFIER]})`),h("MAINVERSIONLOOSE",`(${i[u.NUMERICIDENTIFIERLOOSE]})\\.(${i[u.NUMERICIDENTIFIERLOOSE]})\\.(${i[u.NUMERICIDENTIFIERLOOSE]})`),h("PRERELEASEIDENTIFIER",`(?:${i[u.NUMERICIDENTIFIER]}|${i[u.NONNUMERICIDENTIFIER]})`),h("PRERELEASEIDENTIFIERLOOSE",`(?:${i[u.NUMERICIDENTIFIERLOOSE]}|${i[u.NONNUMERICIDENTIFIER]})`),h("PRERELEASE",`(?:-(${i[u.PRERELEASEIDENTIFIER]}(?:\\.${i[u.PRERELEASEIDENTIFIER]})*))`),h("PRERELEASELOOSE",`(?:-?(${i[u.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${i[u.PRERELEASEIDENTIFIERLOOSE]})*))`),h("BUILDIDENTIFIER",`${o}+`),h("BUILD",`(?:\\+(${i[u.BUILDIDENTIFIER]}(?:\\.${i[u.BUILDIDENTIFIER]})*))`),h("FULLPLAIN",`v?${i[u.MAINVERSION]}${i[u.PRERELEASE]}?${i[u.BUILD]}?`),h("FULL",`^${i[u.FULLPLAIN]}$`),h("LOOSEPLAIN",`[v=\\s]*${i[u.MAINVERSIONLOOSE]}${i[u.PRERELEASELOOSE]}?${i[u.BUILD]}?`),h("LOOSE",`^${i[u.LOOSEPLAIN]}$`),h("GTLT","((?:<|>)?=?)"),h("XRANGEIDENTIFIERLOOSE",`${i[u.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),h("XRANGEIDENTIFIER",`${i[u.NUMERICIDENTIFIER]}|x|X|\\*`),h("XRANGEPLAIN",`[v=\\s]*(${i[u.XRANGEIDENTIFIER]})(?:\\.(${i[u.XRANGEIDENTIFIER]})(?:\\.(${i[u.XRANGEIDENTIFIER]})(?:${i[u.PRERELEASE]})?${i[u.BUILD]}?)?)?`),h("XRANGEPLAINLOOSE",`[v=\\s]*(${i[u.XRANGEIDENTIFIERLOOSE]})(?:\\.(${i[u.XRANGEIDENTIFIERLOOSE]})(?:\\.(${i[u.XRANGEIDENTIFIERLOOSE]})(?:${i[u.PRERELEASELOOSE]})?${i[u.BUILD]}?)?)?`),h("XRANGE",`^${i[u.GTLT]}\\s*${i[u.XRANGEPLAIN]}$`),h("XRANGELOOSE",`^${i[u.GTLT]}\\s*${i[u.XRANGEPLAINLOOSE]}$`),h("COERCE",`(^|[^\\d])(\\d{1,${p}})(?:\\.(\\d{1,${p}}))?(?:\\.(\\d{1,${p}}))?(?:$|[^\\d])`),h("COERCERTL",i[u.COERCE],!0),h("LONETILDE","(?:~>?)"),h("TILDETRIM",`(\\s*)${i[u.LONETILDE]}\\s+`,!0),g.tildeTrimReplace="$1~",h("TILDE",`^${i[u.LONETILDE]}${i[u.XRANGEPLAIN]}$`),h("TILDELOOSE",`^${i[u.LONETILDE]}${i[u.XRANGEPLAINLOOSE]}$`),h("LONECARET","(?:\\^)"),h("CARETTRIM",`(\\s*)${i[u.LONECARET]}\\s+`,!0),g.caretTrimReplace="$1^",h("CARET",`^${i[u.LONECARET]}${i[u.XRANGEPLAIN]}$`),h("CARETLOOSE",`^${i[u.LONECARET]}${i[u.XRANGEPLAINLOOSE]}$`),h("COMPARATORLOOSE",`^${i[u.GTLT]}\\s*(${i[u.LOOSEPLAIN]})$|^$`),h("COMPARATOR",`^${i[u.GTLT]}\\s*(${i[u.FULLPLAIN]})$|^$`),h("COMPARATORTRIM",`(\\s*)${i[u.GTLT]}\\s*(${i[u.LOOSEPLAIN]}|${i[u.XRANGEPLAIN]})`,!0),g.comparatorTrimReplace="$1$2$3",h("HYPHENRANGE",`^\\s*(${i[u.XRANGEPLAIN]})\\s+-\\s+(${i[u.XRANGEPLAIN]})\\s*$`),h("HYPHENRANGELOOSE",`^\\s*(${i[u.XRANGEPLAINLOOSE]})\\s+-\\s+(${i[u.XRANGEPLAINLOOSE]})\\s*$`),h("STAR","(<|>)?=?\\s*\\*"),h("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),h("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},9588:(w,g,r)=>{const p=r(8218),s=(n,c,d)=>p(n,c,">",d);w.exports=s},2764:(w,g,r)=>{const p=r(2417),s=(n,c,d)=>(n=new p(n,d),c=new p(c,d),n.intersects(c,d));w.exports=s},5849:(w,g,r)=>{const p=r(8218),s=(n,c,d)=>p(n,c,"<",d);w.exports=s},7682:(w,g,r)=>{const p=r(6532),s=r(2417),n=(c,d,a)=>{let i=null,u=null,m=null;try{m=new s(d,a)}catch(o){return null}return c.forEach(o=>{m.test(o)&&(!i||u.compare(o)===-1)&&(i=o,u=new p(i,a))}),i};w.exports=n},3452:(w,g,r)=>{const p=r(6532),s=r(2417),n=(c,d,a)=>{let i=null,u=null,m=null;try{m=new s(d,a)}catch(o){return null}return c.forEach(o=>{m.test(o)&&(!i||u.compare(o)===1)&&(i=o,u=new p(i,a))}),i};w.exports=n},3228:(w,g,r)=>{const p=r(6532),s=r(2417),n=r(6775),c=(d,a)=>{d=new s(d,a);let i=new p("0.0.0");if(d.test(i)||(i=new p("0.0.0-0"),d.test(i)))return i;i=null;for(let u=0;u<d.set.length;++u){const m=d.set[u];let o=null;m.forEach(v=>{const f=new p(v.semver.version);switch(v.operator){case">":f.prerelease.length===0?f.patch++:f.prerelease.push(0),f.raw=f.format();case"":case">=":(!o||n(f,o))&&(o=f);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${v.operator}`)}}),o&&(!i||n(i,o))&&(i=o)}return i&&d.test(i)?i:null};w.exports=c},8218:(w,g,r)=>{const p=r(6532),s=r(4034),{ANY:n}=s,c=r(2417),d=r(5570),a=r(6775),i=r(5976),u=r(9982),m=r(8250),o=(v,f,h,T)=>{v=new p(v,T),f=new c(f,T);let y,b,_,D,O;switch(h){case">":y=a,b=u,_=i,D=">",O=">=";break;case"<":y=i,b=m,_=a,D="<",O="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(d(v,f,T))return!1;for(let S=0;S<f.set.length;++S){const A=f.set[S];let k=null,I=null;if(A.forEach(E=>{E.semver===n&&(E=new s(">=0.0.0")),k=k||E,I=I||E,y(E.semver,k.semver,T)?k=E:_(E.semver,I.semver,T)&&(I=E)}),k.operator===D||k.operator===O||(!I.operator||I.operator===D)&&b(v,I.semver))return!1;if(I.operator===O&&_(v,I.semver))return!1}return!0};w.exports=o},8182:(w,g,r)=>{const p=r(5570),s=r(6180);w.exports=(n,c,d)=>{const a=[];let i=null,u=null;const m=n.sort((h,T)=>s(h,T,d));for(const h of m)p(h,c,d)?(u=h,i||(i=h)):(u&&a.push([i,u]),u=null,i=null);i&&a.push([i,null]);const o=[];for(const[h,T]of a)h===T?o.push(h):!T&&h===m[0]?o.push("*"):T?h===m[0]?o.push(`<=${T}`):o.push(`${h} - ${T}`):o.push(`>=${h}`);const v=o.join(" || "),f=typeof c.raw=="string"?c.raw:String(c);return v.length<f.length?v:c}},6837:(w,g,r)=>{const p=r(2417),s=r(4034),{ANY:n}=s,c=r(5570),d=r(6180),a=(f,h,T={})=>{if(f===h)return!0;f=new p(f,T),h=new p(h,T);let y=!1;t:for(const b of f.set){for(const _ of h.set){const D=m(b,_,T);if(y=y||D!==null,D)continue t}if(y)return!1}return!0},i=[new s(">=0.0.0-0")],u=[new s(">=0.0.0")],m=(f,h,T)=>{if(f===h)return!0;if(f.length===1&&f[0].semver===n){if(h.length===1&&h[0].semver===n)return!0;T.includePrerelease?f=i:f=u}if(h.length===1&&h[0].semver===n){if(T.includePrerelease)return!0;h=u}const y=new Set;let b,_;for(const x of f)x.operator===">"||x.operator===">="?b=o(b,x,T):x.operator==="<"||x.operator==="<="?_=v(_,x,T):y.add(x.semver);if(y.size>1)return null;let D;if(b&&_){if(D=d(b.semver,_.semver,T),D>0)return null;if(D===0&&(b.operator!==">="||_.operator!=="<="))return null}for(const x of y){if(b&&!c(x,String(b),T)||_&&!c(x,String(_),T))return null;for(const P of h)if(!c(x,String(P),T))return!1;return!0}let O,S,A,k,I=_&&!T.includePrerelease&&_.semver.prerelease.length?_.semver:!1,E=b&&!T.includePrerelease&&b.semver.prerelease.length?b.semver:!1;I&&I.prerelease.length===1&&_.operator==="<"&&I.prerelease[0]===0&&(I=!1);for(const x of h){if(k=k||x.operator===">"||x.operator===">=",A=A||x.operator==="<"||x.operator==="<=",b){if(E&&x.semver.prerelease&&x.semver.prerelease.length&&x.semver.major===E.major&&x.semver.minor===E.minor&&x.semver.patch===E.patch&&(E=!1),x.operator===">"||x.operator===">="){if(O=o(b,x,T),O===x&&O!==b)return!1}else if(b.operator===">="&&!c(b.semver,String(x),T))return!1}if(_){if(I&&x.semver.prerelease&&x.semver.prerelease.length&&x.semver.major===I.major&&x.semver.minor===I.minor&&x.semver.patch===I.patch&&(I=!1),x.operator==="<"||x.operator==="<="){if(S=v(_,x,T),S===x&&S!==_)return!1}else if(_.operator==="<="&&!c(_.semver,String(x),T))return!1}if(!x.operator&&(_||b)&&D!==0)return!1}return!(b&&A&&!_&&D!==0||_&&k&&!b&&D!==0||E||I)},o=(f,h,T)=>{if(!f)return h;const y=d(f.semver,h.semver,T);return y>0?f:y<0||h.operator===">"&&f.operator===">="?h:f},v=(f,h,T)=>{if(!f)return h;const y=d(f.semver,h.semver,T);return y<0?f:y>0||h.operator==="<"&&f.operator==="<="?h:f};w.exports=a},7964:(w,g,r)=>{const p=r(2417),s=(n,c)=>new p(n,c).set.map(d=>d.map(a=>a.value).join(" ").trim().split(" "));w.exports=s},6986:(w,g,r)=>{const p=r(2417),s=(n,c)=>{try{return new p(n,c).range||"*"}catch(d){return null}};w.exports=s},9565:(w,g,r)=>{"use strict";var p=r(1653),s=r(6690),n=/^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/,c=/[\n\r\t]/g,d=/^[A-Za-z][A-Za-z0-9+-.]*:\/\//,a=/:\d+$/,i=/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,u=/^[a-zA-Z]:/;function m(O){return(O||"").toString().replace(n,"")}var o=[["#","hash"],["?","query"],function(S,A){return h(A.protocol)?S.replace(/\\/g,"/"):S},["/","pathname"],["@","auth",1],[NaN,"host",void 0,1,1],[/:(\d*)$/,"port",void 0,1],[NaN,"hostname",void 0,1,1]],v={hash:1,query:1};function f(O){var S;typeof window!="undefined"?S=window:typeof r.g!="undefined"?S=r.g:typeof self!="undefined"?S=self:S={};var A=S.location||{};O=O||A;var k={},I=typeof O,E;if(O.protocol==="blob:")k=new b(unescape(O.pathname),{});else if(I==="string"){k=new b(O,{});for(E in v)delete k[E]}else if(I==="object"){for(E in O)E in v||(k[E]=O[E]);k.slashes===void 0&&(k.slashes=d.test(O.href))}return k}function h(O){return O==="file:"||O==="ftp:"||O==="http:"||O==="https:"||O==="ws:"||O==="wss:"}function T(O,S){O=m(O),O=O.replace(c,""),S=S||{};var A=i.exec(O),k=A[1]?A[1].toLowerCase():"",I=!!A[2],E=!!A[3],x=0,P;return I?E?(P=A[2]+A[3]+A[4],x=A[2].length+A[3].length):(P=A[2]+A[4],x=A[2].length):E?(P=A[3]+A[4],x=A[3].length):P=A[4],k==="file:"?x>=2&&(P=P.slice(2)):h(k)?P=A[4]:k?I&&(P=P.slice(2)):x>=2&&h(S.protocol)&&(P=A[4]),{protocol:k,slashes:I||h(k),slashesCount:x,rest:P}}function y(O,S){if(O==="")return S;for(var A=(S||"/").split("/").slice(0,-1).concat(O.split("/")),k=A.length,I=A[k-1],E=!1,x=0;k--;)A[k]==="."?A.splice(k,1):A[k]===".."?(A.splice(k,1),x++):x&&(k===0&&(E=!0),A.splice(k,1),x--);return E&&A.unshift(""),(I==="."||I==="..")&&A.push(""),A.join("/")}function b(O,S,A){if(O=m(O),O=O.replace(c,""),!(this instanceof b))return new b(O,S,A);var k,I,E,x,P,F,q=o.slice(),W=typeof S,M=this,$=0;for(W!=="object"&&W!=="string"&&(A=S,S=null),A&&typeof A!="function"&&(A=s.parse),S=f(S),I=T(O||"",S),k=!I.protocol&&!I.slashes,M.slashes=I.slashes||k&&S.slashes,M.protocol=I.protocol||S.protocol||"",O=I.rest,(I.protocol==="file:"&&(I.slashesCount!==2||u.test(O))||!I.slashes&&(I.protocol||I.slashesCount<2||!h(M.protocol)))&&(q[3]=[/(.*)/,"pathname"]);$<q.length;$++){if(x=q[$],typeof x=="function"){O=x(O,M);continue}E=x[0],F=x[1],E!==E?M[F]=O:typeof E=="string"?(P=E==="@"?O.lastIndexOf(E):O.indexOf(E),~P&&(typeof x[2]=="number"?(M[F]=O.slice(0,P),O=O.slice(P+x[2])):(M[F]=O.slice(P),O=O.slice(0,P)))):(P=E.exec(O))&&(M[F]=P[1],O=O.slice(0,P.index)),M[F]=M[F]||k&&x[3]&&S[F]||"",x[4]&&(M[F]=M[F].toLowerCase())}A&&(M.query=A(M.query)),k&&S.slashes&&M.pathname.charAt(0)!=="/"&&(M.pathname!==""||S.pathname!=="")&&(M.pathname=y(M.pathname,S.pathname)),M.pathname.charAt(0)!=="/"&&h(M.protocol)&&(M.pathname="/"+M.pathname),p(M.port,M.protocol)||(M.host=M.hostname,M.port=""),M.username=M.password="",M.auth&&(P=M.auth.indexOf(":"),~P?(M.username=M.auth.slice(0,P),M.username=encodeURIComponent(decodeURIComponent(M.username)),M.password=M.auth.slice(P+1),M.password=encodeURIComponent(decodeURIComponent(M.password))):M.username=encodeURIComponent(decodeURIComponent(M.auth)),M.auth=M.password?M.username+":"+M.password:M.username),M.origin=M.protocol!=="file:"&&h(M.protocol)&&M.host?M.protocol+"//"+M.host:"null",M.href=M.toString()}function _(O,S,A){var k=this;switch(O){case"query":typeof S=="string"&&S.length&&(S=(A||s.parse)(S)),k[O]=S;break;case"port":k[O]=S,p(S,k.protocol)?S&&(k.host=k.hostname+":"+S):(k.host=k.hostname,k[O]="");break;case"hostname":k[O]=S,k.port&&(S+=":"+k.port),k.host=S;break;case"host":k[O]=S,a.test(S)?(S=S.split(":"),k.port=S.pop(),k.hostname=S.join(":")):(k.hostname=S,k.port="");break;case"protocol":k.protocol=S.toLowerCase(),k.slashes=!A;break;case"pathname":case"hash":if(S){var I=O==="pathname"?"/":"#";k[O]=S.charAt(0)!==I?I+S:S}else k[O]=S;break;case"username":case"password":k[O]=encodeURIComponent(S);break;case"auth":var E=S.indexOf(":");~E?(k.username=S.slice(0,E),k.username=encodeURIComponent(decodeURIComponent(k.username)),k.password=S.slice(E+1),k.password=encodeURIComponent(decodeURIComponent(k.password))):k.username=encodeURIComponent(decodeURIComponent(S))}for(var x=0;x<o.length;x++){var P=o[x];P[4]&&(k[P[1]]=k[P[1]].toLowerCase())}return k.auth=k.password?k.username+":"+k.password:k.username,k.origin=k.protocol!=="file:"&&h(k.protocol)&&k.host?k.protocol+"//"+k.host:"null",k.href=k.toString(),k}function D(O){(!O||typeof O!="function")&&(O=s.stringify);var S,A=this,k=A.host,I=A.protocol;I&&I.charAt(I.length-1)!==":"&&(I+=":");var E=I+(A.protocol&&A.slashes||h(A.protocol)?"//":"");return A.username?(E+=A.username,A.password&&(E+=":"+A.password),E+="@"):A.password?(E+=":"+A.password,E+="@"):A.protocol!=="file:"&&h(A.protocol)&&!k&&A.pathname!=="/"&&(E+="@"),(k[k.length-1]===":"||a.test(A.hostname)&&!A.port)&&(k+=":"),E+=k+A.pathname,S=typeof A.query=="object"?O(A.query):A.query,S&&(E+=S.charAt(0)!=="?"?"?"+S:S),A.hash&&(E+=A.hash),E}b.prototype={set:_,toString:D},b.extractProtocol=T,b.location=f,b.trimLeft=m,b.qs=s,w.exports=b},8269:w=>{"use strict";w.exports=function(g){g.prototype[Symbol.iterator]=function*(){for(let r=this.head;r;r=r.next)yield r.value}}},8834:(w,g,r)=>{"use strict";w.exports=p,p.Node=d,p.create=p;function p(a){var i=this;if(i instanceof p||(i=new p),i.tail=null,i.head=null,i.length=0,a&&typeof a.forEach=="function")a.forEach(function(o){i.push(o)});else if(arguments.length>0)for(var u=0,m=arguments.length;u<m;u++)i.push(arguments[u]);return i}p.prototype.removeNode=function(a){if(a.list!==this)throw new Error("removing node which does not belong to this list");var i=a.next,u=a.prev;return i&&(i.prev=u),u&&(u.next=i),a===this.head&&(this.head=i),a===this.tail&&(this.tail=u),a.list.length--,a.next=null,a.prev=null,a.list=null,i},p.prototype.unshiftNode=function(a){if(a!==this.head){a.list&&a.list.removeNode(a);var i=this.head;a.list=this,a.next=i,i&&(i.prev=a),this.head=a,this.tail||(this.tail=a),this.length++}},p.prototype.pushNode=function(a){if(a!==this.tail){a.list&&a.list.removeNode(a);var i=this.tail;a.list=this,a.prev=i,i&&(i.next=a),this.tail=a,this.head||(this.head=a),this.length++}},p.prototype.push=function(){for(var a=0,i=arguments.length;a<i;a++)n(this,arguments[a]);return this.length},p.prototype.unshift=function(){for(var a=0,i=arguments.length;a<i;a++)c(this,arguments[a]);return this.length},p.prototype.pop=function(){if(this.tail){var a=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,a}},p.prototype.shift=function(){if(this.head){var a=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,a}},p.prototype.forEach=function(a,i){i=i||this;for(var u=this.head,m=0;u!==null;m++)a.call(i,u.value,m,this),u=u.next},p.prototype.forEachReverse=function(a,i){i=i||this;for(var u=this.tail,m=this.length-1;u!==null;m--)a.call(i,u.value,m,this),u=u.prev},p.prototype.get=function(a){for(var i=0,u=this.head;u!==null&&i<a;i++)u=u.next;if(i===a&&u!==null)return u.value},p.prototype.getReverse=function(a){for(var i=0,u=this.tail;u!==null&&i<a;i++)u=u.prev;if(i===a&&u!==null)return u.value},p.prototype.map=function(a,i){i=i||this;for(var u=new p,m=this.head;m!==null;)u.push(a.call(i,m.value,this)),m=m.next;return u},p.prototype.mapReverse=function(a,i){i=i||this;for(var u=new p,m=this.tail;m!==null;)u.push(a.call(i,m.value,this)),m=m.prev;return u},p.prototype.reduce=function(a,i){var u,m=this.head;if(arguments.length>1)u=i;else if(this.head)m=this.head.next,u=this.head.value;else throw new TypeError("Reduce of empty list with no initial value");for(var o=0;m!==null;o++)u=a(u,m.value,o),m=m.next;return u},p.prototype.reduceReverse=function(a,i){var u,m=this.tail;if(arguments.length>1)u=i;else if(this.tail)m=this.tail.prev,u=this.tail.value;else throw new TypeError("Reduce of empty list with no initial value");for(var o=this.length-1;m!==null;o--)u=a(u,m.value,o),m=m.prev;return u},p.prototype.toArray=function(){for(var a=new Array(this.length),i=0,u=this.head;u!==null;i++)a[i]=u.value,u=u.next;return a},p.prototype.toArrayReverse=function(){for(var a=new Array(this.length),i=0,u=this.tail;u!==null;i++)a[i]=u.value,u=u.prev;return a},p.prototype.slice=function(a,i){i=i||this.length,i<0&&(i+=this.length),a=a||0,a<0&&(a+=this.length);var u=new p;if(i<a||i<0)return u;a<0&&(a=0),i>this.length&&(i=this.length);for(var m=0,o=this.head;o!==null&&m<a;m++)o=o.next;for(;o!==null&&m<i;m++,o=o.next)u.push(o.value);return u},p.prototype.sliceReverse=function(a,i){i=i||this.length,i<0&&(i+=this.length),a=a||0,a<0&&(a+=this.length);var u=new p;if(i<a||i<0)return u;a<0&&(a=0),i>this.length&&(i=this.length);for(var m=this.length,o=this.tail;o!==null&&m>i;m--)o=o.prev;for(;o!==null&&m>a;m--,o=o.prev)u.push(o.value);return u},p.prototype.splice=function(a,i,...u){a>this.length&&(a=this.length-1),a<0&&(a=this.length+a);for(var m=0,o=this.head;o!==null&&m<a;m++)o=o.next;for(var v=[],m=0;o&&m<i;m++)v.push(o.value),o=this.removeNode(o);o===null&&(o=this.tail),o!==this.head&&o!==this.tail&&(o=o.prev);for(var m=0;m<u.length;m++)o=s(this,o,u[m]);return v},p.prototype.reverse=function(){for(var a=this.head,i=this.tail,u=a;u!==null;u=u.prev){var m=u.prev;u.prev=u.next,u.next=m}return this.head=i,this.tail=a,this};function s(a,i,u){var m=i===a.head?new d(u,null,i,a):new d(u,i,i.next,a);return m.next===null&&(a.tail=m),m.prev===null&&(a.head=m),a.length++,m}function n(a,i){a.tail=new d(i,a.tail,null,a),a.head||(a.head=a.tail),a.length++}function c(a,i){a.head=new d(i,null,a.head,a),a.tail||(a.tail=a.head),a.length++}function d(a,i,u,m){if(!(this instanceof d))return new d(a,i,u,m);this.list=m,this.value=a,i?(i.next=this,this.prev=i):this.prev=null,u?(u.prev=this,this.next=u):this.next=null}try{r(8269)(p)}catch(a){}}},Ir={};function ce(w){var g=Ir[w];if(g!==void 0)return g.exports;var r=Ir[w]={id:w,loaded:!1,exports:{}};return nl[w].call(r.exports,r,r.exports,ce),r.loaded=!0,r.exports}ce.n=w=>{var g=w&&w.__esModule?()=>w.default:()=>w;return ce.d(g,{a:g}),g},ce.d=(w,g)=>{for(var r in g)ce.o(g,r)&&!ce.o(w,r)&&Object.defineProperty(w,r,{enumerable:!0,get:g[r]})},ce.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch(w){if(typeof window=="object")return window}}(),ce.o=(w,g)=>Object.prototype.hasOwnProperty.call(w,g),ce.nmd=w=>(w.paths=[],w.children||(w.children=[]),w);var og={};(()=>{var Je;"use strict";var w=ce(4910),g=ce.n(w),r=ce(8689),p=ce(2069),s=ce.n(p),n=ce(2706),c=ce.n(n),d=ce(7162),a=ce(6276),i=ce(4010),u=ce(8385),m=ce(8958),o=ce(2173),v=ce.n(o),f=ce(4),h=ce(6064),T=ce(792),y=ce(3817),b=ce(9565);function _(ft){for(var Q=[],pt=0;pt<ft.length;){var Lt=ft[pt];if(Lt==="*"||Lt==="+"||Lt==="?"){Q.push({type:"MODIFIER",index:pt,value:ft[pt++]});continue}if(Lt==="\\"){Q.push({type:"ESCAPED_CHAR",index:pt++,value:ft[pt++]});continue}if(Lt==="{"){Q.push({type:"OPEN",index:pt,value:ft[pt++]});continue}if(Lt==="}"){Q.push({type:"CLOSE",index:pt,value:ft[pt++]});continue}if(Lt===":"){for(var nt="",mt=pt+1;mt<ft.length;){var ct=ft.charCodeAt(mt);if(ct>=48&&ct<=57||ct>=65&&ct<=90||ct>=97&&ct<=122||ct===95){nt+=ft[mt++];continue}break}if(!nt)throw new TypeError("Missing parameter name at ".concat(pt));Q.push({type:"NAME",index:pt,value:nt}),pt=mt;continue}if(Lt==="("){var Ot=1,Rt="",mt=pt+1;if(ft[mt]==="?")throw new TypeError('Pattern cannot start with "?" at '.concat(mt));for(;mt<ft.length;){if(ft[mt]==="\\"){Rt+=ft[mt++]+ft[mt++];continue}if(ft[mt]===")"){if(Ot--,Ot===0){mt++;break}}else if(ft[mt]==="("&&(Ot++,ft[mt+1]!=="?"))throw new TypeError("Capturing groups are not allowed at ".concat(mt));Rt+=ft[mt++]}if(Ot)throw new TypeError("Unbalanced pattern at ".concat(pt));if(!Rt)throw new TypeError("Missing pattern at ".concat(pt));Q.push({type:"PATTERN",index:pt,value:Rt}),pt=mt;continue}Q.push({type:"CHAR",index:pt,value:ft[pt++]})}return Q.push({type:"END",index:pt,value:""}),Q}function D(ft,Q){Q===void 0&&(Q={});for(var pt=_(ft),Lt=Q.prefixes,nt=Lt===void 0?"./":Lt,mt="[^".concat(I(Q.delimiter||"/#?"),"]+?"),ct=[],Ot=0,Rt=0,qt="",Ft=function(yt){if(Rt<pt.length&&pt[Rt].type===yt)return pt[Rt++].value},Ct=function(yt){var kt=Ft(yt);if(kt!==void 0)return kt;var Mt=pt[Rt],Ht=Mt.type,Kt=Mt.index;throw new TypeError("Unexpected ".concat(Ht," at ").concat(Kt,", expected ").concat(yt))},Zt=function(){for(var yt="",kt;kt=Ft("CHAR")||Ft("ESCAPED_CHAR");)yt+=kt;return yt};Rt<pt.length;){var Jt=Ft("CHAR"),N=Ft("NAME"),U=Ft("PATTERN");if(N||U){var K=Jt||"";nt.indexOf(K)===-1&&(qt+=K,K=""),qt&&(ct.push(qt),qt=""),ct.push({name:N||Ot++,prefix:K,suffix:"",pattern:U||mt,modifier:Ft("MODIFIER")||""});continue}var X=Jt||Ft("ESCAPED_CHAR");if(X){qt+=X;continue}qt&&(ct.push(qt),qt="");var st=Ft("OPEN");if(st){var K=Zt(),vt=Ft("NAME")||"",gt=Ft("PATTERN")||"",Dt=Zt();Ct("CLOSE"),ct.push({name:vt||(gt?Ot++:""),pattern:vt&&!gt?mt:gt,prefix:K,suffix:Dt,modifier:Ft("MODIFIER")||""});continue}Ct("END")}return ct}function O(ft,Q){return S(D(ft,Q),Q)}function S(ft,Q){Q===void 0&&(Q={});var pt=E(Q),Lt=Q.encode,nt=Lt===void 0?function(Rt){return Rt}:Lt,mt=Q.validate,ct=mt===void 0?!0:mt,Ot=ft.map(function(Rt){if(typeof Rt=="object")return new RegExp("^(?:".concat(Rt.pattern,")$"),pt)});return function(Rt){for(var qt="",Ft=0;Ft<ft.length;Ft++){var Ct=ft[Ft];if(typeof Ct=="string"){qt+=Ct;continue}var Zt=Rt?Rt[Ct.name]:void 0,Jt=Ct.modifier==="?"||Ct.modifier==="*",N=Ct.modifier==="*"||Ct.modifier==="+";if(Array.isArray(Zt)){if(!N)throw new TypeError('Expected "'.concat(Ct.name,'" to not repeat, but got an array'));if(Zt.length===0){if(Jt)continue;throw new TypeError('Expected "'.concat(Ct.name,'" to not be empty'))}for(var U=0;U<Zt.length;U++){var K=nt(Zt[U],Ct);if(ct&&!Ot[Ft].test(K))throw new TypeError('Expected all "'.concat(Ct.name,'" to match "').concat(Ct.pattern,'", but got "').concat(K,'"'));qt+=Ct.prefix+K+Ct.suffix}continue}if(typeof Zt=="string"||typeof Zt=="number"){var K=nt(String(Zt),Ct);if(ct&&!Ot[Ft].test(K))throw new TypeError('Expected "'.concat(Ct.name,'" to match "').concat(Ct.pattern,'", but got "').concat(K,'"'));qt+=Ct.prefix+K+Ct.suffix;continue}if(!Jt){var X=N?"an array":"a string";throw new TypeError('Expected "'.concat(Ct.name,'" to be ').concat(X))}}return qt}}function A(ft,Q){var pt=[],Lt=W(ft,pt,Q);return k(Lt,pt,Q)}function k(ft,Q,pt){pt===void 0&&(pt={});var Lt=pt.decode,nt=Lt===void 0?function(mt){return mt}:Lt;return function(mt){var ct=ft.exec(mt);if(!ct)return!1;for(var Ot=ct[0],Rt=ct.index,qt=Object.create(null),Ft=function(Zt){if(ct[Zt]===void 0)return"continue";var Jt=Q[Zt-1];Jt.modifier==="*"||Jt.modifier==="+"?qt[Jt.name]=ct[Zt].split(Jt.prefix+Jt.suffix).map(function(N){return nt(N,Jt)}):qt[Jt.name]=nt(ct[Zt],Jt)},Ct=1;Ct<ct.length;Ct++)Ft(Ct);return{path:Ot,index:Rt,params:qt}}}function I(ft){return ft.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function E(ft){return ft&&ft.sensitive?"":"i"}function x(ft,Q){if(!Q)return ft;for(var pt=/\((?:\?<(.*?)>)?(?!\?)/g,Lt=0,nt=pt.exec(ft.source);nt;)Q.push({name:nt[1]||Lt++,prefix:"",suffix:"",modifier:"",pattern:""}),nt=pt.exec(ft.source);return ft}function P(ft,Q,pt){var Lt=ft.map(function(nt){return W(nt,Q,pt).source});return new RegExp("(?:".concat(Lt.join("|"),")"),E(pt))}function F(ft,Q,pt){return q(D(ft,pt),Q,pt)}function q(ft,Q,pt){pt===void 0&&(pt={});for(var Lt=pt.strict,nt=Lt===void 0?!1:Lt,mt=pt.start,ct=mt===void 0?!0:mt,Ot=pt.end,Rt=Ot===void 0?!0:Ot,qt=pt.encode,Ft=qt===void 0?function(Kt){return Kt}:qt,Ct=pt.delimiter,Zt=Ct===void 0?"/#?":Ct,Jt=pt.endsWith,N=Jt===void 0?"":Jt,U="[".concat(I(N),"]|$"),K="[".concat(I(Zt),"]"),X=ct?"^":"",st=0,vt=ft;st<vt.length;st++){var gt=vt[st];if(typeof gt=="string")X+=I(Ft(gt));else{var Dt=I(Ft(gt.prefix)),yt=I(Ft(gt.suffix));if(gt.pattern)if(Q&&Q.push(gt),Dt||yt)if(gt.modifier==="+"||gt.modifier==="*"){var kt=gt.modifier==="*"?"?":"";X+="(?:".concat(Dt,"((?:").concat(gt.pattern,")(?:").concat(yt).concat(Dt,"(?:").concat(gt.pattern,"))*)").concat(yt,")").concat(kt)}else X+="(?:".concat(Dt,"(").concat(gt.pattern,")").concat(yt,")").concat(gt.modifier);else gt.modifier==="+"||gt.modifier==="*"?X+="((?:".concat(gt.pattern,")").concat(gt.modifier,")"):X+="(".concat(gt.pattern,")").concat(gt.modifier);else X+="(?:".concat(Dt).concat(yt,")").concat(gt.modifier)}}if(Rt)nt||(X+="".concat(K,"?")),X+=pt.endsWith?"(?=".concat(U,")"):"$";else{var Mt=ft[ft.length-1],Ht=typeof Mt=="string"?K.indexOf(Mt[Mt.length-1])>-1:Mt===void 0;nt||(X+="(?:".concat(K,"(?=").concat(U,"))?")),Ht||(X+="(?=".concat(K,"|").concat(U,")"))}return new RegExp(X,E(pt))}function W(ft,Q,pt){return ft instanceof RegExp?x(ft,Q):Array.isArray(ft)?P(ft,Q,pt):F(ft,Q,pt)}class M{hydrate(Q,pt){const Lt=Q,nt=new b(Q),mt=[];return W(nt.pathname,mt),mt.forEach(ct=>{Q=Q.replace(":"+ct.name,encodeURIComponent(pt[ct.name]))}),Q+=Q.indexOf("?")===-1?"?":"&",Object.keys(pt).forEach(ct=>{Lt.indexOf(":"+ct)===-1&&(Q+=ct+"="+encodeURIComponent(pt[ct])+"&")}),Q.replace(/[?&]$/,"")}}function $(){g()(".sample-request-send").off("click"),g()(".sample-request-send").on("click",function(ft){ft.preventDefault();const Q=g()(this).parents("article"),pt=Q.data("group"),Lt=Q.data("name"),nt=Q.data("version");tt(pt,Lt,nt,g()(this).data("type"))}),g()(".sample-request-clear").off("click"),g()(".sample-request-clear").on("click",function(ft){ft.preventDefault();const Q=g()(this).parents("article"),pt=Q.data("group"),Lt=Q.data("name"),nt=Q.data("version");it(pt,Lt,nt)})}function H(ft){return ft.replace(/{(.+?)}/g,":$1")}function Z(ft,Q){const pt=ft.find(".sample-request-url").val(),Lt=new M,nt=H(pt);return Lt.hydrate(nt,Q)}function G(ft){const Q={};["header","query","body"].forEach(Lt=>{const nt={};try{ft.find(g()(`[data-family="${Lt}"]:visible`)).each((mt,ct)=>{const Ot=ct.dataset.name;let Rt=ct.value;if(ct.type==="checkbox")if(ct.checked)Rt="on";else return!0;if(!Rt&&!ct.dataset.optional&&ct.type!=="checkbox")return g()(ct).addClass("border-danger"),!0;nt[Ot]=Rt})}catch(mt){return}Q[Lt]=nt});const pt=ft.find(g()('[data-family="body-json"]'));return pt.is(":visible")?(Q.body=pt.val(),Q.header["Content-Type"]="application/json"):Q.header["Content-Type"]="multipart/form-data",Q}function tt(ft,Q,pt,Lt){const nt=g()(`article[data-group="${ft}"][data-name="${Q}"][data-version="${pt}"]`),mt=G(nt),ct={};if(ct.url=Z(nt,mt.query),ct.headers=mt.header,ct.headers["Content-Type"]==="application/json")ct.data=mt.body;else if(ct.headers["Content-Type"]==="multipart/form-data"){const qt=new FormData;for(const[Ft,Ct]of Object.entries(mt.body))qt.append(Ft,Ct);ct.data=qt,ct.processData=!1,(Lt==="get"||Lt==="delete")&&delete ct.headers["Content-Type"]}ct.type=Lt,ct.success=Ot,ct.error=Rt,g().ajax(ct),nt.find(".sample-request-response").fadeTo(200,1),nt.find(".sample-request-response-json").html("Loading...");function Ot(qt,Ft,Ct){let Zt;try{Zt=JSON.parse(Ct.responseText),Zt=JSON.stringify(Zt,null,4)}catch(Jt){Zt=Ct.responseText}nt.find(".sample-request-response-json").text(Zt),v().highlightAll()}function Rt(qt,Ft,Ct){let Zt="Error "+qt.status+": "+Ct,Jt;try{Jt=JSON.parse(qt.responseText),Jt=JSON.stringify(Jt,null,4)}catch(N){Jt=qt.responseText}Jt&&(Zt+=`
`+Jt),nt.find(".sample-request-response").is(":visible")&&nt.find(".sample-request-response").fadeTo(1,.1),nt.find(".sample-request-response").fadeTo(250,1),nt.find(".sample-request-response-json").text(Zt),v().highlightAll()}}function it(ft,Q,pt){const Lt=g()('article[data-group="'+ft+'"][data-name="'+Q+'"][data-version="'+pt+'"]');Lt.find(".sample-request-response-json").html(""),Lt.find(".sample-request-response").hide(),Lt.find(".sample-request-input").each((mt,ct)=>{ct.value=ct.placeholder!==ct.dataset.name?ct.placeholder:""});const nt=Lt.find(".sample-request-url");nt.val(nt.prop("defaultValue"))}const de={ca:{"Allowed values:":"Valors permesos:","Compare all with predecessor":"Comparar tot amb versi\xF3 anterior","compare changes to:":"comparar canvis amb:","compared to":"comparat amb","Default value:":"Valor per defecte:",Description:"Descripci\xF3",Field:"Camp",General:"General","Generated with":"Generat amb",Name:"Nom","No response values.":"Sense valors en la resposta.",optional:"opcional",Parameter:"Par\xE0metre","Permission:":"Permisos:",Response:"Resposta",Send:"Enviar","Send a Sample Request":"Enviar una petici\xF3 d'exemple","show up to version:":"mostrar versi\xF3:","Size range:":"Tamany de rang:",Type:"Tipus",url:"url"},cs:{"Allowed values:":"Povolen\xE9 hodnoty:","Compare all with predecessor":"Porovnat v\u0161e s p\u0159edchoz\xEDmi verzemi","compare changes to:":"porovnat zm\u011Bny s:","compared to":"porovnat s","Default value:":"V\xFDchoz\xED hodnota:",Description:"Popis",Field:"Pole",General:"Obecn\xE9","Generated with":"Vygenerov\xE1no pomoc\xED",Name:"N\xE1zev","No response values.":"Nebyly vr\xE1ceny \u017E\xE1dn\xE9 hodnoty.",optional:"voliteln\xE9",Parameter:"Parametr","Permission:":"Opr\xE1vn\u011Bn\xED:",Response:"Odpov\u011B\u010F",Send:"Odeslat","Send a Sample Request":"Odeslat uk\xE1zkov\xFD po\u017Eadavek","show up to version:":"zobrazit po verzi:","Size range:":"Rozsah velikosti:",Type:"Typ",url:"url"},de:{"Allowed values:":"Erlaubte Werte:","Compare all with predecessor":"Vergleiche alle mit ihren Vorg\xE4ngern","compare changes to:":"vergleiche \xC4nderungen mit:","compared to":"verglichen mit","Default value:":"Standardwert:",Description:"Beschreibung",Field:"Feld",General:"Allgemein","Generated with":"Erstellt mit",Name:"Name","No response values.":"Keine R\xFCckgabewerte.",optional:"optional",Parameter:"Parameter","Permission:":"Berechtigung:",Response:"Antwort",Send:"Senden","Send a Sample Request":"Eine Beispielanfrage senden","show up to version:":"zeige bis zur Version:","Size range:":"Gr\xF6\xDFenbereich:",Type:"Typ",url:"url"},es:{"Allowed values:":"Valores permitidos:","Compare all with predecessor":"Comparar todo con versi\xF3n anterior","compare changes to:":"comparar cambios con:","compared to":"comparado con","Default value:":"Valor por defecto:",Description:"Descripci\xF3n",Field:"Campo",General:"General","Generated with":"Generado con",Name:"Nombre","No response values.":"Sin valores en la respuesta.",optional:"opcional",Parameter:"Par\xE1metro","Permission:":"Permisos:",Response:"Respuesta",Send:"Enviar","Send a Sample Request":"Enviar una petici\xF3n de ejemplo","show up to version:":"mostrar a versi\xF3n:","Size range:":"Tama\xF1o de rango:",Type:"Tipo",url:"url"},en:{},fr:{"Allowed values:":"Valeurs autoris\xE9es :",Body:"Corps","Compare all with predecessor":"Tout comparer avec ...","compare changes to:":"comparer les changements \xE0 :","compared to":"comparer \xE0","Default value:":"Valeur par d\xE9faut :",Description:"Description",Field:"Champ",General:"G\xE9n\xE9ral","Generated with":"G\xE9n\xE9r\xE9 avec",Header:"En-t\xEAte",Headers:"En-t\xEAtes",Name:"Nom","No response values.":"Aucune valeur de r\xE9ponse.","No value":"Aucune valeur",optional:"optionnel",Parameter:"Param\xE8tre",Parameters:"Param\xE8tres","Permission:":"Permission :","Query Parameter(s)":"Param\xE8tre(s) de la requ\xEAte","Query Parameters":"Param\xE8tres de la requ\xEAte","Request Body":"Corps de la requ\xEAte",required:"requis",Response:"R\xE9ponse",Send:"Envoyer","Send a Sample Request":"Envoyer une requ\xEAte repr\xE9sentative","show up to version:":"Montrer \xE0 partir de la version :","Size range:":"Ordre de grandeur :",Type:"Type",url:"url"},it:{"Allowed values:":"Valori permessi:","Compare all with predecessor":"Confronta tutto con versioni precedenti","compare changes to:":"confronta modifiche con:","compared to":"confrontato con","Default value:":"Valore predefinito:",Description:"Descrizione",Field:"Campo",General:"Generale","Generated with":"Creato con",Name:"Nome","No response values.":"Nessun valore di risposta.",optional:"opzionale",Parameter:"Parametro","Permission:":"Permessi:",Response:"Risposta",Send:"Invia","Send a Sample Request":"Invia una richiesta di esempio","show up to version:":"mostra alla versione:","Size range:":"Intervallo dimensione:",Type:"Tipo",url:"url"},nl:{"Allowed values:":"Toegestane waarden:","Compare all with predecessor":"Vergelijk alle met voorgaande versie","compare changes to:":"vergelijk veranderingen met:","compared to":"vergelijk met","Default value:":"Standaard waarde:",Description:"Omschrijving",Field:"Veld",General:"Algemeen","Generated with":"Gegenereerd met",Name:"Naam","No response values.":"Geen response waardes.",optional:"optioneel",Parameter:"Parameter","Permission:":"Permissie:",Response:"Antwoorden",Send:"Sturen","Send a Sample Request":"Stuur een sample aanvragen","show up to version:":"toon tot en met versie:","Size range:":"Maatbereik:",Type:"Type",url:"url"},pl:{"Allowed values:":"Dozwolone warto\u015Bci:","Compare all with predecessor":"Por\xF3wnaj z poprzednimi wersjami","compare changes to:":"por\xF3wnaj zmiany do:","compared to":"por\xF3wnaj do:","Default value:":"Warto\u015B\u0107 domy\u015Blna:",Description:"Opis",Field:"Pole",General:"Generalnie","Generated with":"Wygenerowano z",Name:"Nazwa","No response values.":"Brak odpowiedzi.",optional:"opcjonalny",Parameter:"Parametr","Permission:":"Uprawnienia:",Response:"Odpowied\u017A",Send:"Wy\u015Blij","Send a Sample Request":"Wy\u015Blij przyk\u0142adowe \u017C\u0105danie","show up to version:":"poka\u017C do wersji:","Size range:":"Zakres rozmiaru:",Type:"Typ",url:"url"},pt:{"Allowed values:":"Valores permitidos:","Compare all with predecessor":"Compare todos com antecessores","compare changes to:":"comparar altera\xE7\xF5es com:","compared to":"comparado com","Default value:":"Valor padr\xE3o:",Description:"Descri\xE7\xE3o",Field:"Campo",General:"Geral","Generated with":"Gerado com",Name:"Nome","No response values.":"Sem valores de resposta.",optional:"opcional",Parameter:"Par\xE2metro","Permission:":"Permiss\xE3o:",Response:"Resposta",Send:"Enviar","Send a Sample Request":"Enviar um Exemplo de Pedido","show up to version:":"aparecer para a vers\xE3o:","Size range:":"Faixa de tamanho:",Type:"Tipo",url:"url"},ro:{"Allowed values:":"Valori permise:","Compare all with predecessor":"Compar\u0103 toate cu versiunea precedent\u0103","compare changes to:":"compar\u0103 cu versiunea:","compared to":"comparat cu","Default value:":"Valoare implicit\u0103:",Description:"Descriere",Field:"C\xE2mp",General:"General","Generated with":"Generat cu",Name:"Nume","No response values.":"Nici o valoare returnat\u0103.",optional:"op\u021Bional",Parameter:"Parametru","Permission:":"Permisiune:",Response:"R\u0103spuns",Send:"Trimite","Send a Sample Request":"Trimite o cerere de prob\u0103","show up to version:":"arat\u0103 p\xE2n\u0103 la versiunea:","Size range:":"Interval permis:",Type:"Tip",url:"url"},ru:{"Allowed values:":"\u0414\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F:","Compare all with predecessor":"\u0421\u0440\u0430\u0432\u043D\u0438\u0442\u044C \u0441 \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0435\u0439","compare changes to:":"\u0441\u0440\u0430\u0432\u043D\u0438\u0442\u044C \u0441:","compared to":"\u0432 \u0441\u0440\u0430\u0432\u043D\u0435\u043D\u0438\u0438 \u0441","Default value:":"\u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E:",Description:"\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435",Field:"\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435",General:"\u041E\u0431\u0449\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F","Generated with":"\u0421\u0433\u0435\u043D\u0435\u0440\u0438\u0440\u043E\u0432\u0430\u043D\u043E \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E",Name:"\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435","No response values.":"\u041D\u0435\u0442 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0434\u043B\u044F \u043E\u0442\u0432\u0435\u0442\u0430.",optional:"\u043D\u0435\u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0439",Parameter:"\u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440","Permission:":"\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u043E:",Response:"\u041E\u0442\u0432\u0435\u0442",Send:"\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C","Send a Sample Request":"\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u0442\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0437\u0430\u043F\u0440\u043E\u0441","show up to version:":"\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0432\u0435\u0440\u0441\u0438\u044E:","Size range:":"\u041E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F:",Type:"\u0422\u0438\u043F",url:"URL"},tr:{"Allowed values:":"\u0130zin verilen de\u011Ferler:","Compare all with predecessor":"T\xFCm\xFCn\xFC \xF6ncekiler ile kar\u015F\u0131la\u015Ft\u0131r","compare changes to:":"de\u011Fi\u015Fiklikleri kar\u015F\u0131la\u015Ft\u0131r:","compared to":"kar\u015F\u0131la\u015Ft\u0131r","Default value:":"Varsay\u0131lan de\u011Fer:",Description:"A\xE7\u0131klama",Field:"Alan",General:"Genel","Generated with":"Olu\u015Fturan",Name:"\u0130sim","No response values.":"D\xF6n\xFC\u015F verisi yok.",optional:"opsiyonel",Parameter:"Parametre","Permission:":"\u0130zin:",Response:"D\xF6n\xFC\u015F",Send:"G\xF6nder","Send a Sample Request":"\xD6rnek istek g\xF6nder","show up to version:":"bu versiyona kadar g\xF6ster:","Size range:":"Boyut aral\u0131\u011F\u0131:",Type:"Tip",url:"url"},vi:{"Allowed values:":"Gi\xE1 tr\u1ECB ch\u1EA5p nh\u1EADn:","Compare all with predecessor":"So s\xE1nh v\u1EDBi t\u1EA5t c\u1EA3 phi\xEAn b\u1EA3n tr\u01B0\u1EDBc","compare changes to:":"so s\xE1nh s\u1EF1 thay \u0111\u1ED5i v\u1EDBi:","compared to":"so s\xE1nh v\u1EDBi","Default value:":"Gi\xE1 tr\u1ECB m\u1EB7c \u0111\u1ECBnh:",Description:"Ch\xFA th\xEDch",Field:"Tr\u01B0\u1EDDng d\u1EEF li\u1EC7u",General:"T\u1ED5ng quan","Generated with":"\u0110\u01B0\u1EE3c t\u1EA1o b\u1EDFi",Name:"T\xEAn","No response values.":"Kh\xF4ng c\xF3 k\u1EBFt qu\u1EA3 tr\u1EA3 v\u1EC1.",optional:"T\xF9y ch\u1ECDn",Parameter:"Tham s\u1ED1","Permission:":"Quy\u1EC1n h\u1EA1n:",Response:"K\u1EBFt qu\u1EA3",Send:"G\u1EEDi","Send a Sample Request":"G\u1EEDi m\u1ED9t y\xEAu c\u1EA7u m\u1EABu","show up to version:":"hi\u1EC3n th\u1ECB phi\xEAn b\u1EA3n:","Size range:":"K\xEDch c\u1EE1:",Type:"Ki\u1EC3u",url:"li\xEAn k\u1EBFt"},zh:{"Allowed values:":"\u5141\u8BB8\u503C:",Body:"\u8EAB\u4F53","Compare all with predecessor":"\u4E0E\u6240\u6709\u8F83\u65E9\u7684\u6BD4\u8F83","compare changes to:":"\u5C06\u5F53\u524D\u7248\u672C\u4E0E\u6307\u5B9A\u7248\u672C\u6BD4\u8F83:","compared to":"\u76F8\u6BD4\u4E8E","Default value:":"\u9ED8\u8BA4\u503C:",Description:"\u63CF\u8FF0",Field:"\u5B57\u6BB5",General:"\u6982\u8981","Generated with":"\u57FA\u4E8E",Name:"\u540D\u79F0","No response values.":"\u65E0\u8FD4\u56DE\u503C.",optional:"\u53EF\u9009",Parameter:"\u53C2\u6570",Parameters:"\u53C2\u6570",Headers:"\u5934\u90E8\u53C2\u6570","Permission:":"\u6743\u9650:",Response:"\u8FD4\u56DE",required:"\u5FC5\u9700\u7684",Send:"\u53D1\u9001","Send a Sample Request":"\u53D1\u9001\u793A\u4F8B\u8BF7\u6C42","show up to version:":"\u663E\u793A\u5230\u6307\u5B9A\u7248\u672C:","Size range:":"\u53D6\u503C\u8303\u56F4:",Type:"\u7C7B\u578B",url:"\u7F51\u5740"}},Be=((Je=window.navigator.language)!=null?Je:"en-GB").toLowerCase().substr(0,2);let ae=de[Be]?de[Be]:de.en;function Te(ft){const Q=ae[ft];return Q===void 0?ft:Q}function mn(ft){ae=de[ft]}const{defaultsDeep:Ne}=r,Le=(ft,Q)=>{const pt=(Lt,nt,mt,ct)=>({[nt]:mt+1<ct.length?Lt:Q});return ft.reduceRight(pt,{})},zt=ft=>{let Q={};return ft.forEach(pt=>{const Lt=Le(pt[0].split("."),pt[1]);Q=Ne(Q,Lt)}),vn(Q)};function vn(ft){return JSON.stringify(ft,null,4)}function Ue(ft){const Q=[];return ft.forEach(pt=>{let Lt;switch(pt.type.toLowerCase()){case"string":Lt=pt.defaultValue||"";break;case"boolean":Lt=Boolean(pt.defaultValue)||!1;break;case"number":Lt=parseInt(pt.defaultValue||0,10);break;case"date":Lt=pt.defaultValue||new Date().toLocaleDateString(window.navigator.language);break}Q.push([pt.field,Lt])}),zt(Q)}var je=ce(8526);class gs extends je{constructor(Q){super(),this.testMode=Q}diffMain(Q,pt,Lt,nt){return super.diff_main(this._stripHtml(Q),this._stripHtml(pt),Lt,nt)}diffPrettyHtml(Q){const pt=[],Lt=/&/g,nt=/</g,mt=/>/g,ct=/\n/g;for(let Ot=0;Ot<Q.length;Ot++){const Rt=Q[Ot][0],Ft=Q[Ot][1].replace(Lt,"&amp;").replace(nt,"&lt;").replace(mt,"&gt;").replace(ct,"&para;<br>");switch(Rt){case je.DIFF_INSERT:pt[Ot]="<ins>"+Ft+"</ins>";break;case je.DIFF_DELETE:pt[Ot]="<del>"+Ft+"</del>";break;case je.DIFF_EQUAL:pt[Ot]="<span>"+Ft+"</span>";break}}return pt.join("")}diffCleanupSemantic(Q){return this.diff_cleanupSemantic(Q)}_stripHtml(Q){if(this.testMode)return Q;const pt=document.createElement("div");return pt.innerHTML=Q,pt.textContent||pt.innerText||""}}function xn(){c().registerHelper("markdown",function(nt){return nt&&(nt=nt.replace(/((\[(.*?)\])?\(#)((.+?):(.+?))(\))/mg,function(mt,ct,Ot,Rt,qt,Ft,Ct){const Zt=Rt||Ft+"/"+Ct;return'<a href="#api-'+Ft+"-"+Ct+'">'+Zt+"</a>"}),nt)}),c().registerHelper("setInputType",function(nt){switch(nt){case"File":case"Email":case"Color":case"Number":case"Date":return nt[0].toLowerCase()+nt.substring(1);case"Boolean":return"checkbox";default:return"text"}});let ft;c().registerHelper("startTimer",function(nt){return ft=new Date,""}),c().registerHelper("stopTimer",function(nt){return console.log(new Date-ft),""}),c().registerHelper("__",function(nt){return Te(nt)}),c().registerHelper("cl",function(nt){return console.log(nt),""}),c().registerHelper("underscoreToSpace",function(nt){return nt.replace(/(_+)/g," ")}),c().registerHelper("removeDblQuotes",function(nt){return nt.replace(/"/g,"")}),c().registerHelper("assign",function(nt){if(arguments.length>0){const mt=typeof arguments[1];let ct=null;(mt==="string"||mt==="number"||mt==="boolean")&&(ct=arguments[1]),c().registerHelper(nt,function(){return ct})}return""}),c().registerHelper("nl2br",function(nt){return pt(nt)}),c().registerHelper("ifCond",function(nt,mt,ct,Ot){switch(mt){case"==":return nt==ct?Ot.fn(this):Ot.inverse(this);case"===":return nt===ct?Ot.fn(this):Ot.inverse(this);case"!=":return nt!=ct?Ot.fn(this):Ot.inverse(this);case"!==":return nt!==ct?Ot.fn(this):Ot.inverse(this);case"<":return nt<ct?Ot.fn(this):Ot.inverse(this);case"<=":return nt<=ct?Ot.fn(this):Ot.inverse(this);case">":return nt>ct?Ot.fn(this):Ot.inverse(this);case">=":return nt>=ct?Ot.fn(this):Ot.inverse(this);case"&&":return nt&&ct?Ot.fn(this):Ot.inverse(this);case"||":return nt||ct?Ot.fn(this):Ot.inverse(this);default:return Ot.inverse(this)}});const Q={};c().registerHelper("subTemplate",function(nt,mt){Q[nt]||(Q[nt]=c().compile(document.getElementById("template-"+nt).innerHTML));const ct=Q[nt],Ot=g().extend({},this,mt.hash);return new(c()).SafeString(ct(Ot))}),c().registerHelper("toLowerCase",function(nt){return nt&&typeof nt=="string"?nt.toLowerCase():""}),c().registerHelper("splitFill",function(nt,mt,ct){const Ot=nt.split(mt);return new Array(Ot.length).join(ct)+Ot[Ot.length-1]});function pt(nt){return(""+nt).replace(/(?:^|<\/pre>)[^]*?(?:<pre>|$)/g,mt=>mt.replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g,"$1<br>$2"))}c().registerHelper("each_compare_list_field",function(nt,mt,ct){const Ot=ct.hash.field,Rt=[];nt&&nt.forEach(function(Ft){const Ct=Ft;Ct.key=Ft[Ot],Rt.push(Ct)});const qt=[];return mt&&mt.forEach(function(Ft){const Ct=Ft;Ct.key=Ft[Ot],qt.push(Ct)}),Lt("key",Rt,qt,ct)}),c().registerHelper("each_compare_keys",function(nt,mt,ct){const Ot=[];nt&&Object.keys(nt).forEach(function(Ft){const Ct={};Ct.value=nt[Ft],Ct.key=Ft,Ot.push(Ct)});const Rt=[];return mt&&Object.keys(mt).forEach(function(Ft){const Ct={};Ct.value=mt[Ft],Ct.key=Ft,Rt.push(Ct)}),Lt("key",Ot,Rt,ct)}),c().registerHelper("body2json",function(nt,mt){return Ue(nt)}),c().registerHelper("each_compare_field",function(nt,mt,ct){return Lt("field",nt,mt,ct)}),c().registerHelper("each_compare_title",function(nt,mt,ct){return Lt("title",nt,mt,ct)}),c().registerHelper("reformat",function(nt,mt){if(mt==="json")try{return JSON.stringify(JSON.parse(nt.trim()),null,"    ")}catch(ct){}return nt}),c().registerHelper("showDiff",function(nt,mt,ct){let Ot="";if(nt===mt)Ot=nt;else{if(!nt)return mt;if(!mt)return nt;const Rt=new gs,qt=Rt.diffMain(mt,nt);Rt.diffCleanupSemantic(qt),Ot=Rt.diffPrettyHtml(qt),Ot=Ot.replace(/&para;/gm,"")}return ct==="nl2br"&&(Ot=pt(Ot)),Ot});function Lt(nt,mt,ct,Ot){const Rt=[];let qt=0;mt&&mt.forEach(function(Zt){let Jt=!1;if(ct&&ct.forEach(function(N){if(Zt[nt]===N[nt]){const U={typeSame:!0,source:Zt,compare:N,index:qt};Rt.push(U),Jt=!0,qt++}}),!Jt){const N={typeIns:!0,source:Zt,index:qt};Rt.push(N),qt++}}),ct&&ct.forEach(function(Zt){let Jt=!1;if(mt&&mt.forEach(function(N){N[nt]===Zt[nt]&&(Jt=!0)}),!Jt){const N={typeDel:!0,compare:Zt,index:qt};Rt.push(N),qt++}});let Ft="";const Ct=Rt.length;for(const Zt in Rt)parseInt(Zt,10)===Ct-1&&(Rt[Zt]._last=!0),Ft=Ft+Ot.fn(Rt[Zt]);return Ft}}document.addEventListener("DOMContentLoaded",()=>{yn(),$(),v().highlightAll()});function yn(){let ft=[{type:"get",url:"Observations",title:"date",version:"1.1.0",name:"BuiltInDateDate",group:"BuiltInDate",description:'<p>The date function returns the date part of the DateTimeOffset parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=date(resultTime) eq date(validTime)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=date(resultTime) eq date(validTime)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=date(resultTime) eq date(validTime)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=date(resultTime) eq date(validTime)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=date(resultTime) eq date(validTime)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 10,
    "value": [
        {
            "@iot.id": 3,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": 8.75,
            "resultTime": "2016-11-18T02:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T12:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/FeatureOfInterest"
        },
        {
            "@iot.id": 7,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 17.5,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"Day",version:"1.1.0",name:"BuiltInDateDay",group:"BuiltInDate",description:'<p>The day function returns the day component Date or DateTimeOffset parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=day(resultTime) eq 11",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=day(resultTime) eq 11"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=day(resultTime) eq 11", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=day(resultTime) eq 11')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=day(resultTime) eq 11"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 66,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(66)",
            "phenomenonTime": "1999-11-11T11:00:00+01:00",
            "result": 0.1,
            "resultTime": "1999-11-11T11:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(66)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(66)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(66)/FeatureOfInterest"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"Hour",version:"1.1.0",name:"BuiltInDateHour",group:"BuiltInDate",description:'<p>The hour function returns the hour component of the DateTimeOffset or TimeOfDay parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=hour(resultTime) eq 12",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=hour(resultTime) eq 12"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=hour(resultTime) eq 12", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=hour(resultTime) eq 12')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=hour(resultTime) eq 12"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 67,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)",
            "phenomenonTime": "1999-12-12T12:00:00+01:00",
            "result": 0.11,
            "resultTime": "1999-12-12T12:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)/FeatureOfInterest"
        },
        {
            "@iot.id": 14,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)",
            "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
            "result": [
                8.75,
                11.666666666666666,
                17.5
            ],
            "resultTime": "2016-11-18T12:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"minute",version:"1.1.0",name:"BuiltInDateMinute",group:"BuiltInDate",description:'<p>The minute function returns the minute component of the DateTimeOffset or TimeOfDay parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=minute(resultTime) eq 50",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=minute(resultTime) eq 50"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=minute(resultTime) eq 50", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=minute(resultTime) eq 50')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=minute(resultTime) eq 50"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 80,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)",
            "phenomenonTime": "2000-05-01T09:50:00+02:00",
            "result": 13.1,
            "resultTime": "2000-05-01T09:50:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "multi.csv"
            },
            "validTime": "2023-11-23T20:52:41.468387+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)/FeatureOfInterest"
        },
        {
            "@iot.id": 85,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)",
            "phenomenonTime": "2000-05-01T09:50:00+02:00",
            "result": 20.1,
            "resultTime": "2000-05-01T09:50:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "multi.csv"
            },
            "validTime": "2023-11-23T20:52:41.468387+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"Month",version:"1.1.0",name:"BuiltInDateMonth",group:"BuiltInDate",description:'<p>The month function returns the month component of the Date or DateTimeOffset parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=month(resultTime) eq 12",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=month(resultTime) eq 12"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=month(resultTime) eq 12", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=month(resultTime) eq 12')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=month(resultTime) eq 12"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 67,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)",
            "phenomenonTime": "1999-12-12T12:00:00+01:00",
            "result": 0.11,
            "resultTime": "1999-12-12T12:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(67)/FeatureOfInterest"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"Now()",version:"1.1.0",name:"BuiltInDateNow",group:"BuiltInDate",description:'<p>The now function returns the current point in time (date and time with time zone) as a DateTimeOffset value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime le now()",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime le now()"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime le now()", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime le now()')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime le now()"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 76,
    "value": [
        {
            "@iot.id": 56,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)",
            "phenomenonTime": "1999-01-01T01:00:00+01:00",
            "result": 0,
            "resultTime": "1999-01-01T01:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/FeatureOfInterest"
        },
        {
            "@iot.id": 57,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)",
            "phenomenonTime": "1999-02-02T02:00:00+01:00",
            "result": 0.1,
            "resultTime": "1999-02-02T02:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"Year",version:"1.1.0",name:"BuiltInDateSearch",group:"BuiltInDate",description:'<p>Stean have a multitude date an  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime eq 2016-11-18",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime eq 2016-11-18"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime eq 2016-11-18", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime eq 2016-11-18')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=resultTime eq 2016-11-18"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 20,
    "value": [
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": [
                35,
                35,
                35
            ],
            "resultTime": "2016-11-18T13:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/FeatureOfInterest"
        },
        {
            "@iot.id": 3,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": 8.75,
            "resultTime": "2016-11-18T02:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T12:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"second",version:"1.1.0",name:"BuiltInDateSecond",group:"BuiltInDate",description:'<p>The second function returns the second component (without the fractional part) of the DateTimeOffset or TimeOfDay parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=second(resultTime) ge 40",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=second(resultTime) ge 40"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=second(resultTime) ge 40", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=second(resultTime) ge 40')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=second(resultTime) ge 40"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 55,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)",
            "phenomenonTime": "2021-10-15T14:53:44+02:00",
            "result": [
                100,
                25,
                50
            ],
            "resultTime": "2021-10-15T14:53:44+02:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:41.130415+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)/FeatureOfInterest"
        },
        {
            "@iot.id": 54,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)",
            "phenomenonTime": "2021-10-18T14:53:44+02:00",
            "result": [
                18.75,
                16.946,
                null
            ],
            "resultTime": "2021-10-18T14:53:44+02:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:41.005952+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"time",version:"1.1.0",name:"BuiltInDateTime",group:"BuiltInDate",description:'<p>The time function returns the time part of the DateTimeOffset parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=time(resultTime) ne time(phenomenonTime)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=time(resultTime) ne time(phenomenonTime)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=time(resultTime) ne time(phenomenonTime)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=time(resultTime) ne time(phenomenonTime)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=time(resultTime) ne time(phenomenonTime)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 14,
    "value": [
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": [
                35,
                35,
                35
            ],
            "resultTime": "2016-11-18T13:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/FeatureOfInterest"
        },
        {
            "@iot.id": 19,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(19)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": [
                45,
                50,
                55
            ],
            "resultTime": "2016-11-18T16:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(19)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(19)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(19)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Observations",title:"Year",version:"1.1.0",name:"BuiltInDateYear",group:"BuiltInDate",description:'<p>The year function returns the year component of the Date or DateTimeOffset parameter value, evaluated in the time zone of the DateTimeOffset parameter value.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=year(resultTime) eq 2000",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=year(resultTime) eq 2000"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=year(resultTime) eq 2000", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=year(resultTime) eq 2000')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=year(resultTime) eq 2000"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 10,
    "value": [
        {
            "@iot.id": 80,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)",
            "phenomenonTime": "2000-05-01T09:50:00+02:00",
            "result": 13.1,
            "resultTime": "2000-05-01T09:50:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "multi.csv"
            },
            "validTime": "2023-11-23T20:52:41.468387+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(80)/FeatureOfInterest"
        },
        {
            "@iot.id": 85,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)",
            "phenomenonTime": "2000-05-01T09:50:00+02:00",
            "result": 20.1,
            "resultTime": "2000-05-01T09:50:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "multi.csv"
            },
            "validTime": "2023-11-23T20:52:41.468387+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(85)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"infos",url:"/BuiltInDate",title:"Infos",version:"1.1.0",name:"InfosBuiltInDate",group:"BuiltInDate",description:'<p>The OGC SensorThings API supports a set of functions that can be used with the $filter or $orderby query operations. The following table lists the available functions and they follows the OData Canonical function definitions listed in Section 5.1.1.4 of the [OData Version 4.0 Part 2: URL Conventions] and the syntax rules for these functions are defined in [OData Version 4.0 ABNF].  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocBuiltInDate.js",groupTitle:"BuiltInDate"},{type:"get",url:"Things",title:"concat",version:"1.1.0",name:"BuiltInFunctionsConcat",group:"BuiltInFunctions",description:'<p>The concat function returns a string that appends the second input parameter string value to the first.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=concat('name', 'test') eq 'MultiDatastreams SensorWebThing 10test'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=concat('name', 'test') eq 'MultiDatastreams SensorWebThing 10test'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=concat('name', 'test') eq 'MultiDatastreams SensorWebThing 10test'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=concat('name', 'test') eq 'MultiDatastreams SensorWebThing 10test'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=concat('name', 'test') eq 'MultiDatastreams SensorWebThing 10test'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 20,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(20)",
            "name": "MultiDatastreams SensorWebThing 10",
            "description": "A SensorWeb lora MultiDatastreams Number ten",
            "properties": {
                "essai": "8CF9574000002D10D",
                "sensor_id": "zzz8CF9574000002D10D"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things(:id)",title:"endwith",version:"1.1.0",name:"BuiltInFunctionsEndwith",group:"BuiltInFunctions",description:'<p>This string function filters all the records that column name ends with the string in the property.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=endswith('description', 'one')  eq true",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=endswith('description', 'one')  eq true"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=endswith('description', 'one')  eq true", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=endswith('description', 'one')  eq true')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=endswith('description', 'one')  eq true"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(1)",
            "name": "SensorWebThing 1",
            "description": "A SensorThingWeb thing Number one",
            "properties": {
                "owner": "Mozilla version one",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/MultiDatastreams"
        },
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(11)",
            "name": "MultiDatastreams SensorWebThing 1",
            "description": "A SensorWeb lora MultiDatastreams Number one",
            "properties": {
                "essai": "8CF9574000002D1D",
                "sensor_id": "zzz8CF9574000002D1D"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"indexof",title:"",version:"1.1.0",name:"BuiltInFunctionsIndexOf",group:"BuiltInFunctions",description:'<p>This string function return the index of the parameters in the column.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=indexof('name', 'Temperature') eq 1",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=indexof('name', 'Temperature') eq 1"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=indexof('name', 'Temperature') eq 1", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=indexof('name', 'Temperature') eq 1')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=indexof('name', 'Temperature') eq 1"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(22)",
            "name": "Temperature Monitoring Things 2",
            "description": "Things (POST with new Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/MultiDatastreams"
        },
        {
            "@iot.id": 23,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(23)",
            "name": "Temperature Monitoring Things 3",
            "description": "Sensor (POST with existing Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things(:id)",title:"Length",version:"1.1.0",name:"BuiltInFunctionsLength",group:"BuiltInFunctions",description:'<p>This string function return the length of the parameters to be test in filter.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=length(description) le 22",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=length(description) le 22"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=length(description) le 22", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=length(description) le 22')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=length(description) le 22"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 21,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(21)",
            "name": "name of new Things 1",
            "description": "Create a new thing",
            "properties": {
                "owner": "Mozilla",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/MultiDatastreams"
        },
        {
            "@iot.id": 26,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(26)",
            "name": "\\"SensorWebThing Thing 21",
            "description": "A New SensorWeb thing",
            "properties": {
                "owner": "Mozilla",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things(:id)",title:"startswith",version:"1.1.0",name:"BuiltInFunctionsStartswith",group:"BuiltInFunctions",description:'<p>This string function filters all the records that starts with the string in the property.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=startswith('name', 'Temperature') eq true",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=startswith('name', 'Temperature') eq true"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=startswith('name', 'Temperature') eq true", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=startswith('name', 'Temperature') eq true')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=startswith('name', 'Temperature') eq true"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(22)",
            "name": "Temperature Monitoring Things 2",
            "description": "Things (POST with new Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/MultiDatastreams"
        },
        {
            "@iot.id": 23,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(23)",
            "name": "Temperature Monitoring Things 3",
            "description": "Sensor (POST with existing Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things",title:"substring",version:"1.1.0",name:"BuiltInFunctionsSubstringOne",group:"BuiltInFunctions",description:'<p>This string function filters all the records that contain with part of the string extract all characters from a particular position of a column name .  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 1) eq 'ame of new Things 1'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 1) eq 'ame of new Things 1'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 1) eq 'ame of new Things 1'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 1) eq 'ame of new Things 1'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 1) eq 'ame of new Things 1'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 21,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(21)",
            "name": "name of new Things 1",
            "description": "Create a new thing",
            "properties": {
                "owner": "Mozilla",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things",title:"substringTwo",version:"1.1.0",name:"BuiltInFunctionsSubstringTwo",group:"BuiltInFunctions",description:'<p>This string function filters all the records that contain with part of the string extract by specific number of characters from a particular position of a column name .  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 12, 10) eq 'Monitoring'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 12, 10) eq 'Monitoring'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 12, 10) eq 'Monitoring'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 12, 10) eq 'Monitoring'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=substring('name', 12, 10) eq 'Monitoring'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(22)",
            "name": "Temperature Monitoring Things 2",
            "description": "Things (POST with new Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/MultiDatastreams"
        },
        {
            "@iot.id": 23,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(23)",
            "name": "Temperature Monitoring Things 3",
            "description": "Sensor (POST with existing Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things(:id)",title:"substringof",version:"1.1.0",name:"BuiltInFunctionsSubstringof",group:"BuiltInFunctions",description:'<p>This string function filters all the records that contain with string in property.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=substringof('description', 'one') eq true",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=substringof('description', 'one') eq true"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=substringof('description', 'one') eq true", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=substringof('description', 'one') eq true')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=substringof('description', 'one') eq true"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(1)",
            "name": "SensorWebThing 1",
            "description": "A SensorThingWeb thing Number one",
            "properties": {
                "owner": "Mozilla version one",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/MultiDatastreams"
        },
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(11)",
            "name": "MultiDatastreams SensorWebThing 1",
            "description": "A SensorWeb lora MultiDatastreams Number one",
            "properties": {
                "essai": "8CF9574000002D1D",
                "sensor_id": "zzz8CF9574000002D1D"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(11)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things",title:"toUpper",version:"1.1.0",name:"BuiltInFunctionsToUpper",group:"BuiltInFunctions",description:'<p>This string function return string whose characters are going to be converted to uppercase.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=toupper('name') eq 'SENSORWEBTHING 2'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=toupper('name') eq 'SENSORWEBTHING 2'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=toupper('name') eq 'SENSORWEBTHING 2'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=toupper('name') eq 'SENSORWEBTHING 2'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=toupper('name') eq 'SENSORWEBTHING 2'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(2)",
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two",
            "properties": {
                "owner": "Mozilla version two",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things",title:"toLower",version:"1.1.0",name:"BuiltInFunctionsTolower",group:"BuiltInFunctions",description:'<p>This string function return string whose characters are going to be converted to lowercase.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=tolower('name') eq 'sensorwebthing 2'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=tolower('name') eq 'sensorwebthing 2'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=tolower('name') eq 'sensorwebthing 2'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=tolower('name') eq 'sensorwebthing 2'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=tolower('name') eq 'sensorwebthing 2'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(2)",
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two",
            "properties": {
                "owner": "Mozilla version two",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things",title:"trim",version:"1.1.0",name:"BuiltInFunctionsTrim",group:"BuiltInFunctions",description:'<p>This string function return string with removed spaces from both side from a string.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name') eq 'MultiDatastreams SensorWebThing 10'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name') eq 'MultiDatastreams SensorWebThing 10'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name') eq 'MultiDatastreams SensorWebThing 10'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name') eq 'MultiDatastreams SensorWebThing 10'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name') eq 'MultiDatastreams SensorWebThing 10'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 20,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(20)",
            "name": "MultiDatastreams SensorWebThing 10",
            "description": "A SensorWeb lora MultiDatastreams Number ten",
            "properties": {
                "essai": "8CF9574000002D10D",
                "sensor_id": "zzz8CF9574000002D10D"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(20)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Things",title:"trimParams",version:"1.1.0",name:"BuiltInFunctionsTrimWithParams",group:"BuiltInFunctions",description:'<p>This string function return string with removed spaces from both side from a string.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name', 'SensorWebThing ') eq '2'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name', 'SensorWebThing ') eq '2'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name', 'SensorWebThing ') eq '2'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name', 'SensorWebThing ') eq '2'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=trim('name', 'SensorWebThing ') eq '2'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(2)",
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two",
            "properties": {
                "owner": "Mozilla version two",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"infos",url:"/BuiltInFunctions",title:"Infos",version:"1.1.0",name:"InfosBuiltInFunctions",group:"BuiltInFunctions",description:'<p>The OGC SensorThings API supports a set of functions that can be used with the $filter or $orderby query operations. The following table lists the available functions and they follows the OData Canonical function definitions listed in Section 5.1.1.4 of the [OData Version 4.0 Part 2: URL Conventions] and the syntax rules for these functions are defined in [OData Version 4.0 ABNF].  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocBuiltInFunctions.js",groupTitle:"BuiltInFunctions"},{type:"get",url:"Location",title:"Length Observations",version:"1.1.0",name:"BuiltInGeospatiaLengthFoi",group:"BuiltInGeospatial",description:'<p>The geo.length function returns the total length of its line string parameter in the coordinate reference system signified by its SRID.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.length(FeatureOfInterest/feature,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.length(FeatureOfInterest/feature,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.length(FeatureOfInterest/feature,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.length(FeatureOfInterest/feature,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.length(FeatureOfInterest/feature,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 5,
    "value": [
        {
            "@iot.id": 5,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/FeatureOfInterest"
        },
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T18:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Length location",version:"1.1.0",name:"BuiltInGeospatiaLengthLocation",group:"BuiltInGeospatial",description:'<p>The geo.length function returns the total length of its line string parameter in the coordinate reference system signified by its SRID.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.length(location,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.length(location,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.length(location,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.length(location,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.length(location,'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(8)",
            "name": "UofC (Created new location) for MultiDatastream Number three",
            "description": "Golf municipal de Cesson-S\xE9vign\xE9",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.12552590922048",
                    "-1.5889906727727678"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(8)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(8)/HistoricalLocations"
        },
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(9)",
            "name": "UofC (Created new location) for MultiDatastream Number four",
            "description": "Glaz Arena",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.11472599868096",
                    "-1.594679622929148"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(9)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(9)/HistoricalLocations"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Contains location",version:"1.1.0",name:"BuiltInGeospatialContainsFoi",group:"BuiltInGeospatial",description:'<p>geo.contains(A, B) returns TRUE if geometry B is completely inside geometry A. A contains B if and only if no points of B lie in the exterior of A, and at least one point of the interior of B lies in the interior of A.  <a href="https://postgis.net/docs/ST_Contains.html" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.contains(FeatureOfInterest/feature, geography'POINT(48.139101133693764 -1.6571222811169917)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.contains(FeatureOfInterest/feature, geography'POINT(48.139101133693764 -1.6571222811169917)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.contains(FeatureOfInterest/feature, geography'POINT(48.139101133693764 -1.6571222811169917)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.contains(FeatureOfInterest/feature, geography'POINT(48.139101133693764 -1.6571222811169917)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.contains(FeatureOfInterest/feature, geography'POINT(48.139101133693764 -1.6571222811169917)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 4,
    "value": [
        {
            "@iot.id": 3,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": 8.75,
            "resultTime": "2016-11-18T02:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T12:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/FeatureOfInterest"
        },
        {
            "@iot.id": 18,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)",
            "phenomenonTime": "2016-11-18T06:15:15.79+01:00",
            "result": [
                45,
                50,
                55
            ],
            "resultTime": "2016-11-18T14:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Contains location",version:"1.1.0",name:"BuiltInGeospatialContainsLocation",group:"BuiltInGeospatial",description:'<p>geo.contains(A, B) returns TRUE if geometry B is completely inside geometry A. A contains B if and only if no points of B lie in the exterior of A, and at least one point of the interior of B lies in the interior of A.  <a href="https://postgis.net/docs/ST_Contains.html" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.contains(location, geography'POINT(48.1140652783794 -1.7062956999598533)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.contains(location, geography'POINT(48.1140652783794 -1.7062956999598533)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.contains(location, geography'POINT(48.1140652783794 -1.7062956999598533)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.contains(location, geography'POINT(48.1140652783794 -1.7062956999598533)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.contains(location, geography'POINT(48.1140652783794 -1.7062956999598533)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 20,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(20)",
            "name": "My Location 10",
            "description": "Institut Agro Rennes-Angers",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.1140652783794",
                    "-1.7062956999598533"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(20)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(20)/HistoricalLocations"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Disjoint Observations",version:"1.1.0",name:"BuiltInGeospatialDisjointFoi",group:"BuiltInGeospatial",description:'<p>geo.disjoint( geometry A , geometry B ) Overlaps, Touches, Within all imply geometries are not spatially disjoint. If any of the aforementioned returns true, then the geometries are not spatially disjoint. Disjoint implies false for spatial intersection.  <a href="https://postgis.net/docs/ST_Disjoint.html" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.disjoint(FeatureOfInterest/feature,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.disjoint(FeatureOfInterest/feature,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.disjoint(FeatureOfInterest/feature,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.disjoint(FeatureOfInterest/feature,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.disjoint(FeatureOfInterest/feature,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 21.6,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.481838+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/FeatureOfInterest"
        },
        {
            "@iot.id": 24,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 21.6,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.517062+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Disjoint location",version:"1.1.0",name:"BuiltInGeospatialDisjointLocation",group:"BuiltInGeospatial",description:'<p>geo.disjoint( geometry A , geometry B ) Overlaps, Touches, Within all imply geometries are not spatially disjoint. If any of the aforementioned returns true, then the geometries are not spatially disjoint. Disjoint implies false for spatial intersection.  <a href="https://postgis.net/docs/ST_Disjoint.html" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.disjoint(location,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.disjoint(location,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.disjoint(location,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.disjoint(location,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.disjoint(location,'MULTIPOINT(48.13765198324515 -1.6956051932646596,48.139101133693764 -1.6571222811169917,48.12552590922048 -1.5889906727727678,48.11472599868096 -1.594679622929148,48.08416909630583 -1.601486946802519,48.06467042196109 -1.623116279666956,48.07908248444603 -1.6664475955447595,48.089982264765595 -1.7050636226736864,48.089982264765595 -1.7050636226736864,48.123242161802274 -1.7127016234011674,48.1140652783794 -1.7062956999598533)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 21,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(21)",
            "name": "Au Comptoir V\xE9nitien [new created]",
            "description": "Au Comptoir V\xE9nitien",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    48.11829243294942,
                    -1.717928984533772
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(21)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(21)/HistoricalLocations"
        },
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(22)",
            "name": "Au Comptoir V\xE9nitien  location 5",
            "description": "Au Comptoir V\xE9nitien",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    48.11829243294942,
                    -1.717928984533772
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(22)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(22)/HistoricalLocations"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"FOI",title:"Distance Observations",version:"1.1.0",name:"BuiltInGeospatialDistanceFoi",group:"BuiltInGeospatial",description:'<p>The round function rounds the input numeric parameter to the nearest numeric value with no decimal component. The mid-point between two integers is rounded away from zero, i.e. 0.5 is rounded to 1 and \u20110.5 is rounded to -1.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.distance(FeatureOfInterest/feature,geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.distance(FeatureOfInterest/feature,geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.distance(FeatureOfInterest/feature,geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.distance(FeatureOfInterest/feature,geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.distance(FeatureOfInterest/feature,geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 5,
    "value": [
        {
            "@iot.id": 5,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/FeatureOfInterest"
        },
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T18:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Distance location",version:"1.1.0",name:"BuiltInGeospatialDistanceLocation",group:"BuiltInGeospatial",description:'<p>The round function rounds the input numeric parameter to the nearest numeric value with no decimal component. The mid-point between two integers is rounded away from zero, i.e. 0.5 is rounded to 1 and \u20110.5 is rounded to -1.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.distance(location, geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.distance(location, geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.distance(location, geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.distance(location, geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.distance(location, geography'POINT(48.1140652783794 -1.7062956999598533)') ge 0.11"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(8)",
            "name": "UofC (Created new location) for MultiDatastream Number three",
            "description": "Golf municipal de Cesson-S\xE9vign\xE9",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.12552590922048",
                    "-1.5889906727727678"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(8)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(8)/HistoricalLocations"
        },
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(9)",
            "name": "UofC (Created new location) for MultiDatastream Number four",
            "description": "Glaz Arena",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.11472599868096",
                    "-1.594679622929148"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(9)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(9)/HistoricalLocations"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Equals Observations",version:"1.1.0",name:"BuiltInGeospatialEquarsFoi",group:"BuiltInGeospatial",description:`<p>geo.equals( geometry A , geometry B ) Returns true if the given geometries are 'spatially equal'. Use this for a 'better' answer than '='. Note by spatially equal we mean ST_Within(A,B) = true and ST_Within(B,A) = true and also mean ordering of points can be different but represent the same geometry structure.  <a href="https://postgis.net/docs/ST_Equals.html" target="_blank">[reference]</a></p>`,examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.equals(FeatureOfInterest/feature,'POINT(48.139101133693764 -1.6571222811169917)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.equals(FeatureOfInterest/feature,'POINT(48.139101133693764 -1.6571222811169917)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.equals(FeatureOfInterest/feature,'POINT(48.139101133693764 -1.6571222811169917)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.equals(FeatureOfInterest/feature,'POINT(48.139101133693764 -1.6571222811169917)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.equals(FeatureOfInterest/feature,'POINT(48.139101133693764 -1.6571222811169917)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 4,
    "value": [
        {
            "@iot.id": 3,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": 8.75,
            "resultTime": "2016-11-18T02:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T12:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/FeatureOfInterest"
        },
        {
            "@iot.id": 18,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)",
            "phenomenonTime": "2016-11-18T06:15:15.79+01:00",
            "result": [
                45,
                50,
                55
            ],
            "resultTime": "2016-11-18T14:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(18)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Equals location",version:"1.1.0",name:"BuiltInGeospatialEquarsLocation",group:"BuiltInGeospatial",description:`<p>geo.equals( geometry A , geometry B ) Returns true if the given geometries are 'spatially equal'. Use this for a 'better' answer than '='. Note by spatially equal we mean ST_Within(A,B) = true and ST_Within(B,A) = true and also mean ordering of points can be different but represent the same geometry structure.  <a href="https://postgis.net/docs/ST_Equals.html" target="_blank">[reference]</a></p>`,examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.equals(location,'POINT(48.139101133693764 -1.6571222811169917)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.equals(location,'POINT(48.139101133693764 -1.6571222811169917)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.equals(location,'POINT(48.139101133693764 -1.6571222811169917)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.equals(location,'POINT(48.139101133693764 -1.6571222811169917)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.equals(location,'POINT(48.139101133693764 -1.6571222811169917)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 7,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(7)",
            "name": "UofC (Created new location) for MultiDatastream Number two",
            "description": "Polyclinic Saint Laurent",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.139101133693764",
                    "-1.6571222811169917"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(7)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(7)/HistoricalLocations"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"FOI",title:"Intersects Observations",version:"1.1.0",name:"BuiltInGeospatialIntersectsFoi",group:"BuiltInGeospatial",description:'<p>The geo.intersects function returns true if the specified point lies within the interior or on the boundary of the specified polygon, otherwise it returns false.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.intersects(FeatureOfInterest/feature, 'LINESTRING(48.11829243294942 -1.717928984533772, 48.06467042196109 -1.623116279666956)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.intersects(FeatureOfInterest/feature, 'LINESTRING(48.11829243294942 -1.717928984533772, 48.06467042196109 -1.623116279666956)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.intersects(FeatureOfInterest/feature, 'LINESTRING(48.11829243294942 -1.717928984533772, 48.06467042196109 -1.623116279666956)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.intersects(FeatureOfInterest/feature, 'LINESTRING(48.11829243294942 -1.717928984533772, 48.06467042196109 -1.623116279666956)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=geo.intersects(FeatureOfInterest/feature, 'LINESTRING(48.11829243294942 -1.717928984533772, 48.06467042196109 -1.623116279666956)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 21.6,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.481838+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/FeatureOfInterest"
        },
        {
            "@iot.id": 24,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 21.6,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.517062+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Location",title:"Intersects location",version:"1.1.0",name:"BuiltInGeospatialIntersectsLocation",group:"BuiltInGeospatial",description:'<p>The geo.intersects function returns true if the specified point lies within the interior or on the boundary of the specified polygon, otherwise it returns false.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.intersects(location,'LINESTRING(48.13765198324515 -1.6956051932646596, 48.06467042196109 -1.623116279666956)')",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.intersects(location,'LINESTRING(48.13765198324515 -1.6956051932646596, 48.06467042196109 -1.623116279666956)')"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.intersects(location,'LINESTRING(48.13765198324515 -1.6956051932646596, 48.06467042196109 -1.623116279666956)')", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.intersects(location,'LINESTRING(48.13765198324515 -1.6956051932646596, 48.06467042196109 -1.623116279666956)')')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations?$filter=geo.intersects(location,'LINESTRING(48.13765198324515 -1.6956051932646596, 48.06467042196109 -1.623116279666956)')"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
            "name": "UofC Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
        },
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(11)",
            "name": "UofC (Created new location) for MultiDatastream Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(11)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(11)/HistoricalLocations"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"infos",url:"/BuiltInGeospatial",title:"Infos",version:"1.1.0",name:"InfosBuiltInGeospatial",group:"BuiltInGeospatial",description:'<p>The OGC SensorThings API supports a set of functions that can be used with the $filter or $orderby query operations. The following table lists the available functions and they follows the OData Canonical function definitions listed in Section 5.1.1.4 of the [OData Version 4.0 Part 2: URL Conventions] and the syntax rules for these functions are defined in [OData Version 4.0 ABNF].  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocBuiltInGeospatial.js",groupTitle:"BuiltInGeospatial"},{type:"get",url:"Observations",title:"Ceiling",version:"1.1.0",name:"BuiltInMathCeiling",group:"BuiltInMath",description:'<p>The ceiling function rounds the input numeric parameter up to the nearest numeric value with no decimal component. The ceilingMethodCallExpr syntax rule defines how the ceiling function is invoked.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=ceiling(result) eq 12",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=ceiling(result) eq 12"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=ceiling(result) eq 12", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=ceiling(result) eq 12')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=ceiling(result) eq 12"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 5,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/FeatureOfInterest"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)",
            "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T04:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInMath.js",groupTitle:"BuiltInMath"},{type:"get",url:"Observations",title:"Floor",version:"1.1.0",name:"BuiltInMathFloor",group:"BuiltInMath",description:'<p>The floor function rounds the input numeric parameter down to the nearest numeric value with no decimal component. The floorMethodCallExpr syntax rule defines how the floor function is invoked.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=floor(result) eq 11",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=floor(result) eq 11"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=floor(result) eq 11", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=floor(result) eq 11')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=floor(result) eq 11"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 5,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/FeatureOfInterest"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)",
            "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T04:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInMath.js",groupTitle:"BuiltInMath"},{type:"get",url:"Observations",title:"Round",version:"1.1.0",name:"BuiltInMathRound",group:"BuiltInMath",description:'<p>The round function rounds the input numeric parameter to the nearest numeric value with no decimal component. The mid-point between two integers is rounded away from zero, i.e. 0.5 is rounded to 1 and \u20110.5 is rounded to -1.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=round(result) eq 12",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=round(result) eq 12"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=round(result) eq 12", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=round(result) eq 12')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=round(result) eq 12"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 5,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(5)/FeatureOfInterest"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)",
            "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T04:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInMath.js",groupTitle:"BuiltInMath"},{type:"infos",url:"/BuiltInMath",title:"Infos",version:"1.1.0",name:"InfosBuiltInMath",group:"BuiltInMath",description:'<p>The OGC SensorThings API supports a set of functions that can be used with the $filter or $orderby query operations. The following table lists the available functions and they follows the OData Canonical function definitions listed in Section 5.1.1.4 of the [OData Version 4.0 Part 2: URL Conventions] and the syntax rules for these functions are defined in [OData Version 4.0 ABNF].  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_query_functions" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocBuiltInMath.js",groupTitle:"BuiltInMath"},{type:"get",url:"Observations",title:"Interval",version:"1.1.0",name:"BuiltInMiscInterval",group:"BuiltInMisc",description:'<p>The interval keyword rounds the input postgresSql interval (see reference below) parameter to the nearest interval.  <a href="https://www.postgresql.org/docs/15/ecpg-pgtypes.html#ECPG-PGTYPES-INTERVAL" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(3)/Observations?$interval=1 hour",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(3)/Observations?$interval=1 hour"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(3)/Observations?$interval=1 hour", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(3)/Observations?$interval=1 hour')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(3)/Observations?$interval=1 hour"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 5,
    "value": [
        {
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
            "@iot.id": 3,
            "phenomenonTime": "2016-11-18T03:00:00",
            "result": 8.75,
            "resultTime": "2016-11-18T03:00:00",
            "resultQuality": null,
            "validTime": "2016-11-18T03:00:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)/FeatureOfInterest"
        },
        {
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)",
            "@iot.id": 0,
            "phenomenonTime": "2016-11-18T04:00:00",
            "result": null,
            "resultTime": "2016-11-18T04:00:00",
            "resultQuality": null,
            "validTime": "2016-11-18T04:00:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(0)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocBuiltInMisc.js",groupTitle:"BuiltInMisc"},{type:"infos",url:"/BuiltInMisc",title:"Infos",version:"1.1.0",name:"InfosBuiltInMisc",group:"BuiltInMisc",description:"<p>Stean add some usefull function</p>",filename:"test/apiDocs/apiDocBuiltInMisc.js",groupTitle:"BuiltInMisc"},{type:"get",url:"Thing",title:"and",version:"1.1.0",name:"BuiltInOperatorsAnd",group:"BuiltInOperators",description:'<p>Use filter with and  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' and description eq 'A SensorWeb thing Number nine'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' and description eq 'A SensorWeb thing Number nine'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' and description eq 'A SensorWeb thing Number nine'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' and description eq 'A SensorWeb thing Number nine'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' and description eq 'A SensorWeb thing Number nine'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(9)",
            "name": "SensorWebThing 9",
            "description": "A SensorWeb thing Number nine",
            "properties": {
                "owner": "Mozilla version nine",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Observations",title:"eq",version:"1.1.0",name:"BuiltInOperatorsEq",group:"BuiltInOperators",description:'<p>Use eq for equal to =  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result eq 45",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=result eq 45"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=result eq 45", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=result eq 45')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result eq 45"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T18:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/FeatureOfInterest"
        },
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Observations",title:"ge",version:"1.1.0",name:"BuiltInOperatorsGe",group:"BuiltInOperators",description:'<p>Use gt for greater than or equal &gt;=  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ge 45",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ge 45"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ge 45", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ge 45')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ge 45"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 7,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T18:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/FeatureOfInterest"
        },
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Observations",title:"gt",version:"1.1.0",name:"BuiltInOperatorsGt",group:"BuiltInOperators",description:'<p>Use gt for greater than &gt;  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result gt 45",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=result gt 45"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=result gt 45", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=result gt 45')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result gt 45"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 4,
    "value": [
        {
            "@iot.id": 26,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(26)",
            "phenomenonTime": "2017-01-13T11:20:00+01:00",
            "result": 90,
            "resultTime": "2017-01-13T11:20:00+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:40.419911+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(26)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(26)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(26)/FeatureOfInterest"
        },
        {
            "@iot.id": 27,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(27)",
            "phenomenonTime": "2017-01-13T11:21:00+01:00",
            "result": 91,
            "resultTime": "2017-01-13T11:21:00+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:40.422662+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(27)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(27)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(27)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Observations",title:"le",version:"1.1.0",name:"BuiltInOperatorsLe",group:"BuiltInOperators",description:'<p>Use lt for Less than or equal &lt;=  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result le 45",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=result le 45"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=result le 45", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=result le 45')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result le 45"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 36,
    "value": [
        {
            "@iot.id": 56,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)",
            "phenomenonTime": "1999-01-01T01:00:00+01:00",
            "result": 0,
            "resultTime": "1999-01-01T01:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/FeatureOfInterest"
        },
        {
            "@iot.id": 57,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)",
            "phenomenonTime": "1999-02-02T02:00:00+01:00",
            "result": 0.1,
            "resultTime": "1999-02-02T02:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Observations",title:"lt",version:"1.1.0",name:"BuiltInOperatorsLt",group:"BuiltInOperators",description:'<p>Use lt for smaller than &lt;  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result lt 45",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=result lt 45"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=result lt 45", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=result lt 45')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result lt 45"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 33,
    "value": [
        {
            "@iot.id": 56,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)",
            "phenomenonTime": "1999-01-01T01:00:00+01:00",
            "result": 0,
            "resultTime": "1999-01-01T01:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/FeatureOfInterest"
        },
        {
            "@iot.id": 57,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)",
            "phenomenonTime": "1999-02-02T02:00:00+01:00",
            "result": 0.1,
            "resultTime": "1999-02-02T02:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Observations",title:"ne",version:"1.1.0",name:"BuiltInOperatorsNe",group:"BuiltInOperators",description:'<p>Use ne for not equal to &lt;&gt;  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ne 45",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ne 45"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ne 45", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ne 45')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=result ne 45"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 37,
    "value": [
        {
            "@iot.id": 56,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)",
            "phenomenonTime": "1999-01-01T01:00:00+01:00",
            "result": 0,
            "resultTime": "1999-01-01T01:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/FeatureOfInterest"
        },
        {
            "@iot.id": 57,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)",
            "phenomenonTime": "1999-02-02T02:00:00+01:00",
            "result": 0.1,
            "resultTime": "1999-02-02T02:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"get",url:"Thing",title:"or",version:"1.1.0",name:"BuiltInOperatorsOr",group:"BuiltInOperators",description:'<p>Use filter with or  <a href="https://docs.ogc.org/is/18-088/18-088.html#_built_in_filter_operations" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' or description eq 'A New SensorWeb thing'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' or description eq 'A New SensorWeb thing'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' or description eq 'A New SensorWeb thing'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' or description eq 'A New SensorWeb thing'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$filter=name eq 'SensorWebThing 9' or description eq 'A New SensorWeb thing'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 2,
    "value": [
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(9)",
            "name": "SensorWebThing 9",
            "description": "A SensorWeb thing Number nine",
            "properties": {
                "owner": "Mozilla version nine",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(9)/MultiDatastreams"
        },
        {
            "@iot.id": 26,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(26)",
            "name": "\\"SensorWebThing Thing 21",
            "description": "A New SensorWeb thing",
            "properties": {
                "owner": "Mozilla",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(26)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"infos",url:"/BuiltInOperators",title:"Infos",version:"1.1.0",name:"InfosBuiltInOperators",group:"BuiltInOperators",description:`<p>The $filter system query option allows clients to filter a collection of entities that are addressed by a request URL. The expression specified with $filter is evaluated for each entity in the collection, and only items where the expression evaluates to true SHALL be included in the response. Entities for which the expression evaluates to false or to null, or which reference properties that are unavailable due to permissions, SHALL be omitted from the response.</br><b>Comparison Operators</b></br><table> <thead> <tr> <th style="width: 10%">Operator</th> <th style="width: 35%">Description</th> <th style="width: 55%">Example</thead> <tbody> <tr> <td>eq</td> <td>Equal</td> <td>/Datastreams?$filter=unitOfMeasurement/name eq 'degree Celsius'</td> </tr> <tr> <td>ne</td> <td>Not equal</td> <td>/Datastreams?$filter=unitOfMeasurement/name ne 'degree Celsius'</td> </tr> <tr> <td>gt</td> <td>Greater than</td> <td>/Observations?$filter=result gt 20.0</td> </tr> <tr> <td>ge</td> <td>Greater than or equal</td> <td>/Observations?$filter=result ge 20.0</td> </tr> <tr> <td>lt</td> <td> Less than</td> <td>/Observations?$filter=result lt 100</td> </tr> <tr> <td>le</td> <td>Less than or equal</td> <td>/Observations?$filter=result le 100</td> </tr> </tbody> </table> <b>Logical Operators</b></br><table> <thead> <tr> <th style="width: 10%">Operator</th> <th style="width: 35%">Description</th> <th style="width: 55%">Example </thead> <tbody> <tr> <td>and</td> <td>Logical and</td> <td>/Observations?$filter=result le 3.5 and FeatureOfInterest/id eq 1</td> </tr> <tr> <td>or</td> <td>Logical or</td> <td>/Observations?$filter=result gt 20 or result le 3.5</td> </tr> <tr> <td>not</td> <td>Logical negation</td> <td>/Things?$filter=not startswith(description,'test')</td> </tr> </tbody> </table> <b>Arithmetic Operators</b></br> <table> <thead> <tr> <th style="width: 10%">Operator</th> <th style="width: 35%">Description</th> <th style="width: 55%">Example </thead> <tbody> <tr> <td>add</td> <td>Addition</td> <td>/Observations?$filter=result add 5 gt 10</td> </tr> <tr> <td>sub</td> <td>Subtraction</td> <td>/Observations?$filter=result sub 5 gt 10</td> </tr> <tr> <td>mul</td> <td>Multiplication</td> <td>/Observations?$filter=result mul 2 gt 2000</td> </tr> <tr> <td>div</td> <td>Division</td> <td>/Observations?$filter=result div 2 gt 4</td> </tr> <tr> <td>mod</td> <td>Modulo</td> <td>/Observations?$filter=result mod 2 eq 0</td> </tr> </tbody> </table><br> <b>Grouping Operators</b></br> <table> <thead> <tr> <th style="width: 10%">Operator</th> <th style="width: 35%">Description</th> <th style="width: 55%">Example </thead> <tbody> <tr> <td>()</td> <td>Precedence grouping</td> <td>/Observations?$filter=(result sub 5) gt 10</td> </tr> </tbody> </table>  <a href="https://docs.ogc.org/is/18-088/18-088.html#requirement-request-data-filter" target="_blank">[OGC reference]</a></p>`,filename:"test/apiDocs/apiBuiltInOperators.js",groupTitle:"BuiltInOperators"},{type:"post",url:"CreateFile",title:"with csv attached file",version:"1.1.0",name:"CreateFilePost",group:"CreateFile",description:"<p>Import csv file</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(22)/CreateFile",type:"http"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 16,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)",
    "name": "Datastreams import file file.csv",
    "description": "Description in meta ?",
    "observationType": "http://www.opengis.net/def/observation-type/ogc-omxml/2.0/swe-array-observation",
    "unitOfMeasurement": {
        "name": "programme,protocole,code_methode,annee,id_site,code_parcelle,modalite,cadre,souscadre,bloc,repetition,cedeterterrain,detercodetaxon,code_taxon,gf,stade,incomplet,nbr_vdt,pds,pds_gf,stockage,phrase_fiche_p1,phrase_fiche_p2,commentaires,ab_cor,bm_cor,occupation,modalite_bis,ce",
        "symbol": "csv",
        "definition": "https://www.rfc-editor.org/rfc/pdfrfc/rfc4180.txt.pdf"
    },
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/Observations"
}`,type:"json"}]},filename:"test/apiDocs/apiDocCreateFile.js",groupTitle:"CreateFile"},{type:"post",url:"CreateFile",title:"with same csv attached file [duplicate]",version:"1.1.0",name:"CreateFilePostDuplicate",group:"CreateFile",description:"<p>Import csv file [duplicate]</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(22)/CreateFile",type:"http"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 16,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)",
    "name": "Datastreams import file file.csv",
    "description": "Description in meta ?",
    "observationType": "http://www.opengis.net/def/observation-type/ogc-omxml/2.0/swe-array-observation",
    "unitOfMeasurement": {
        "name": "programme,protocole,code_methode,annee,id_site,code_parcelle,modalite,cadre,souscadre,bloc,repetition,cedeterterrain,detercodetaxon,code_taxon,gf,stade,incomplet,nbr_vdt,pds,pds_gf,stockage,phrase_fiche_p1,phrase_fiche_p2,commentaires,ab_cor,bm_cor,occupation,modalite_bis,ce",
        "symbol": "csv",
        "definition": "https://www.rfc-editor.org/rfc/pdfrfc/rfc4180.txt.pdf"
    },
    "observedArea": null,
    "phenomenonTime": "2021-09-17T14:56:36Z/2021-09-17T14:56:36Z",
    "resultTime": "2021-09-17T14:56:36Z/2021-09-17T14:56:36Z",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(16)/Observations"
}`,type:"json"}]},filename:"test/apiDocs/apiDocCreateFile.js",groupTitle:"CreateFile"},{type:"infos",url:"/Import",title:"Infos.",version:"1.1.0",name:"InfosCreateFile",group:"CreateFile",description:'<hr>     <div class="text">       <p>       You can import a csv file as an observations.       with one or multiple columns       </p>     </div>',filename:"test/apiDocs/apiDocCreateFile.js",groupTitle:"CreateFile"},{type:"infos",url:"/CreateObservations",title:"Infos.",version:"1.1.0",name:"InfosCreateObservations",group:"CreateObservations",description:'<p>Besides creating Observation entities one by one with multiple HTTP POST requests, there is a need to create multiple Observation entities with a lighter message body in a single HTTP request. In this case, a sensing system can buffer multiple Observations and send them to a SensorThings service in one HTTP request. Here we propose an Action operation CreateObservations. </br>The message body aggregates Observations by Datastreams, which means all the Observations linked to one Datastream SHALL be aggregated in one JSON object. The parameters of each JSON object are shown in the following table. </br></br>As an Observation links to one FeatureOfInterest, to establish the link between an Observation and a FeatureOfInterest, users should include the FeatureOfInterest ids in the dataArray. If no FeatureOfInterest id presented, the FeatureOfInterest will be created based on the Location entities of the linked Thing entity by default. <table> <thead> <tr> <th style="width: 10%">Name</th> <th style="width: 60%">Definition</th> <th style="width: 15%">Data type</th> <th style="width: 15%">Multiplicity and use</th> </tr> </thead> <tbody> <tr> <td>Datastream or MultiDatastream</td> <td><p>The unique identifier of the Datastream or MultiDatastream linking to the group of Observation entities in the dataArray.</p></td> <td><p>The unique identifier of a Datastream or MultiDatastream</p></td> <td>One (mandatory)</td> </tr> <tr> <td>components</td> <td><p>An ordered array of Observation property names whose matched values are included in the dataArray. At least the phenomenonTime and result properties SHALL be included. To establish the link between an Observation and a FeatureOfInterest, the component name is &quot;FeatureOfInterest/id&quot; and the FeatureOfInterest ids should be included in the dataArray array. If no FeatureOfInterest id is presented, the FeatureOfInterest will be created based on the Location entities of the linked Thing entity by default.</p></td> <td><p>An ordered array of Observation property names</p></td> <td>One (mandatory)</td> </tr> <tr> <td>dataArray</td> <td><p>A JSON Array containing Observations. Each Observation is represented by the ordered property values. The ordered property values match with the ordered property names in components.</p></td> <td>JSON Array</td> <td>One (mandatory)</td> </tr> </tbody> </table>  <a href="https://docs.ogc.org/is/18-088/18-088.html#create-observation-dataarray" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{type:"post",url:"CreateObservations",title:"Add datastream",version:"1.1.0",name:"PostCreateObservationsDatastream",group:"CreateObservations",description:"<p>Create Observations with CreateObservations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "Datastream": {
           "@iot.id": 1
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }}' https://sensorthings.geosas.fr/v1.0/CreateObservations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/CreateObservations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "Datastream": {
           "@iot.id": 1
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/CreateObservations', (headers = { "Content-Type": "application/json" }), (data = :{
       "Datastream": {
           "@iot.id": 1
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "Datastream": {
        "@iot.id": 1
    },
    "components": [
        "phenomenonTime",
        "result",
        "resultTime",
        "FeatureOfInterest/id"
    ],
    "dataArray@iot.count": 4,
    "dataArray": [
        [
            "2017-01-13T10:20:00.000Z",
            90,
            "2017-01-13T10:20:00.000Z",
            1
        ],
        [
            "2017-01-13T10:21:00.000Z",
            91,
            "2017-01-13T10:21:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            92,
            "2017-02-13T10:22:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            93,
            "2017-02-13T10:22:00.000Z",
            1
        ]
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "https://sensorthings.geosas.fr/v1.0/Observations(26)",
    "https://sensorthings.geosas.fr/v1.0/Observations(27)",
    "https://sensorthings.geosas.fr/v1.0/Observations(28)",
    "https://sensorthings.geosas.fr/v1.0/Observations(29)"
]`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No datastream or multiDatastream found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{type:"post",url:"CreateObservations",title:"Add datastream duplicate.",version:"1.1.0",name:"PostCreateObservationsDatastreamDuplicate",group:"CreateObservations",description:"<p>Create Observations duplicate with CreateObservations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "Datastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }}' https://sensorthings.geosas.fr/v1.0/CreateObservations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/CreateObservations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "Datastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/CreateObservations', (headers = { "Content-Type": "application/json" }), (data = :{
       "Datastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "Datastream": {
        "@iot.id": 2
    },
    "components": [
        "phenomenonTime",
        "result",
        "resultTime",
        "FeatureOfInterest/id"
    ],
    "dataArray@iot.count": 4,
    "dataArray": [
        [
            "2017-01-13T10:20:00.000Z",
            90,
            "2017-01-13T10:20:00.000Z",
            1
        ],
        [
            "2017-01-13T10:21:00.000Z",
            91,
            "2017-01-13T10:21:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            92,
            "2017-02-13T10:22:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            93,
            "2017-02-13T10:22:00.000Z",
            1
        ]
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "Duplicate (2017-01-13T10:20:00.000Z,90,2017-01-13T10:20:00.000Z,1)",
    "Duplicate (2017-01-13T10:21:00.000Z,91,2017-01-13T10:21:00.000Z,1)",
    "Duplicate (2017-02-13T10:22:00.000Z,92,2017-02-13T10:22:00.000Z,1)",
    "Duplicate (2017-02-13T10:22:00.000Z,93,2017-02-13T10:22:00.000Z,1)"
]`,type:"json"}]},filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{type:"post",url:"CreateObservations",title:"Add datastream duplicate = delete.",version:"1.1.0",name:"PostCreateObservationsDatastreamDuplicateDelete",group:"CreateObservations",description:"<p>Create Observations duplicate delete with CreateObservations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "duplicate": "delete",
       "Datastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }}' https://sensorthings.geosas.fr/v1.0/CreateObservations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/CreateObservations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "duplicate": "delete",
       "Datastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/CreateObservations', (headers = { "Content-Type": "application/json" }), (data = :{
       "duplicate": "delete",
       "Datastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               90,
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               91,
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               92,
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               93,
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "duplicate": "delete",
    "Datastream": {
        "@iot.id": 2
    },
    "components": [
        "phenomenonTime",
        "result",
        "resultTime",
        "FeatureOfInterest/id"
    ],
    "dataArray@iot.count": 4,
    "dataArray": [
        [
            "2017-01-13T10:20:00.000Z",
            90,
            "2017-01-13T10:20:00.000Z",
            1
        ],
        [
            "2017-01-13T10:21:00.000Z",
            91,
            "2017-01-13T10:21:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            92,
            "2017-02-13T10:22:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            93,
            "2017-02-13T10:22:00.000Z",
            1
        ]
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "Duplicate (2017-01-13T10:20:00.000Z,90,2017-01-13T10:20:00.000Z,1)",
    "delete id ==> 30",
    "Duplicate (2017-01-13T10:21:00.000Z,91,2017-01-13T10:21:00.000Z,1)",
    "delete id ==> 31",
    "Duplicate (2017-02-13T10:22:00.000Z,92,2017-02-13T10:22:00.000Z,1)",
    "delete id ==> 32",
    "Duplicate (2017-02-13T10:22:00.000Z,93,2017-02-13T10:22:00.000Z,1)",
    "delete id ==> 33"
]`,type:"json"}]},filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{type:"post",url:"CreateObservations",title:"Add multiDatastream",version:"1.1.0",name:"PostCreateObservationsMultiDatastream",group:"CreateObservations",description:"<p>Create Observations duplicate with CreateObservations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }}' https://sensorthings.geosas.fr/v1.0/CreateObservations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/CreateObservations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/CreateObservations', (headers = { "Content-Type": "application/json" }), (data = :{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "MultiDatastream": {
        "@iot.id": 2
    },
    "components": [
        "phenomenonTime",
        "result",
        "resultTime",
        "FeatureOfInterest/id"
    ],
    "dataArray@iot.count": 4,
    "dataArray": [
        [
            "2017-01-13T10:20:00.000Z",
            [
                591,
                592,
                593
            ],
            "2017-01-13T10:20:00.000Z",
            1
        ],
        [
            "2017-01-13T10:21:00.000Z",
            [
                691,
                692,
                693
            ],
            "2017-01-13T10:21:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            [
                791,
                792,
                793
            ],
            "2017-02-13T10:22:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            [
                891,
                892,
                893
            ],
            "2017-02-13T10:22:00.000Z",
            1
        ]
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "https://sensorthings.geosas.fr/v1.0/Observations(42)",
    "https://sensorthings.geosas.fr/v1.0/Observations(43)",
    "https://sensorthings.geosas.fr/v1.0/Observations(44)",
    "https://sensorthings.geosas.fr/v1.0/Observations(45)"
]`,type:"json"}]},filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{type:"post",url:"CreateObservations",title:"Add multiDatastream duplicate.",version:"1.1.0",name:"PostCreateObservationsMultiDatastreamDuplicate",group:"CreateObservations",description:"<p>Create Observations duplicate with CreateObservations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }}' https://sensorthings.geosas.fr/v1.0/CreateObservations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/CreateObservations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/CreateObservations', (headers = { "Content-Type": "application/json" }), (data = :{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "MultiDatastream": {
        "@iot.id": 2
    },
    "components": [
        "phenomenonTime",
        "result",
        "resultTime",
        "FeatureOfInterest/id"
    ],
    "dataArray@iot.count": 4,
    "dataArray": [
        [
            "2017-01-13T10:20:00.000Z",
            [
                591,
                592,
                593
            ],
            "2017-01-13T10:20:00.000Z",
            1
        ],
        [
            "2017-01-13T10:21:00.000Z",
            [
                691,
                692,
                693
            ],
            "2017-01-13T10:21:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            [
                791,
                792,
                793
            ],
            "2017-02-13T10:22:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            [
                891,
                892,
                893
            ],
            "2017-02-13T10:22:00.000Z",
            1
        ]
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "Duplicate (2017-01-13T10:20:00.000Z,591,592,593,2017-01-13T10:20:00.000Z,1)",
    "Duplicate (2017-01-13T10:21:00.000Z,691,692,693,2017-01-13T10:21:00.000Z,1)",
    "Duplicate (2017-02-13T10:22:00.000Z,791,792,793,2017-02-13T10:22:00.000Z,1)",
    "Duplicate (2017-02-13T10:22:00.000Z,891,892,893,2017-02-13T10:22:00.000Z,1)"
]`,type:"json"}]},filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{type:"post",url:"CreateObservations",title:"Add multiDatastream duplicate = delete.",version:"1.1.0",name:"PostCreateObservationsMultiDatastreamDuplicateDelete",group:"CreateObservations",description:"<p>Create Observations duplicate delete with CreateObservations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "duplicate": "delete",
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }}' https://sensorthings.geosas.fr/v1.0/CreateObservations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/CreateObservations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "duplicate": "delete",
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/CreateObservations', (headers = { "Content-Type": "application/json" }), (data = :{
       "duplicate": "delete",
       "MultiDatastream": {
           "@iot.id": 2
       },
       "components": [
           "phenomenonTime",
           "result",
           "resultTime",
           "FeatureOfInterest/id"
       ],
       "dataArray@iot.count": 4,
       "dataArray": [
           [
               "2017-01-13T10:20:00.000Z",
               [
                   591,
                   592,
                   593
               ],
               "2017-01-13T10:20:00.000Z",
               1
           ],
           [
               "2017-01-13T10:21:00.000Z",
               [
                   691,
                   692,
                   693
               ],
               "2017-01-13T10:21:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   791,
                   792,
                   793
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ],
           [
               "2017-02-13T10:22:00.000Z",
               [
                   891,
                   892,
                   893
               ],
               "2017-02-13T10:22:00.000Z",
               1
           ]
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "duplicate": "delete",
    "MultiDatastream": {
        "@iot.id": 2
    },
    "components": [
        "phenomenonTime",
        "result",
        "resultTime",
        "FeatureOfInterest/id"
    ],
    "dataArray@iot.count": 4,
    "dataArray": [
        [
            "2017-01-13T10:20:00.000Z",
            [
                591,
                592,
                593
            ],
            "2017-01-13T10:20:00.000Z",
            1
        ],
        [
            "2017-01-13T10:21:00.000Z",
            [
                691,
                692,
                693
            ],
            "2017-01-13T10:21:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            [
                791,
                792,
                793
            ],
            "2017-02-13T10:22:00.000Z",
            1
        ],
        [
            "2017-02-13T10:22:00.000Z",
            [
                891,
                892,
                893
            ],
            "2017-02-13T10:22:00.000Z",
            1
        ]
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "Duplicate (2017-01-13T10:20:00.000Z,591,592,593,2017-01-13T10:20:00.000Z,1)",
    "delete id ==> 42",
    "Duplicate (2017-01-13T10:21:00.000Z,691,692,693,2017-01-13T10:21:00.000Z,1)",
    "delete id ==> 43",
    "Duplicate (2017-02-13T10:22:00.000Z,791,792,793,2017-02-13T10:22:00.000Z,1)",
    "delete id ==> 44",
    "Duplicate (2017-02-13T10:22:00.000Z,891,892,893,2017-02-13T10:22:00.000Z,1)",
    "delete id ==> 45"
]`,type:"json"}]},filename:"test/apiDocs/apiDocCreateObservations.js",groupTitle:"CreateObservations"},{success:{fields:{"Success 200":[{group:"Success 200",optional:!1,field:"varname1",description:"<p>No type.</p>"},{group:"Success 200",type:"String",optional:!1,field:"varname2",description:"<p>With type.</p> <p>@param {Object} fields</p>"}]}},type:"",url:"",version:"0.0.0",filename:"server/apidoc/assets/main.bundle.js",groupTitle:"D:\\api\\server\\apidoc\\assets\\main.bundle.js",group:"D:apiserverapidocassetsmain.bundle.js",name:""},{success:{fields:{"Success 200":[{group:"Success 200",optional:!1,field:"varname1",description:"<p>No type.</p>"},{group:"Success 200",type:"String",optional:!1,field:"varname2",description:"<p>With type.</p> <p>@param {Object} fields</p>"}]}},type:"",url:"",version:"0.0.0",filename:"template/src/main.js",groupTitle:"D:\\api\\template\\src\\main.js",group:"D:apitemplatesrcmain.js",name:""},{success:{fields:{"Success 200":[{group:"Success 200",optional:!1,field:"$",description:"<p>{tab}<code>);                     // lines.push(</code>*    @apiSuccess ${tab.replace(&quot;[&quot;, &quot;&quot;).replace(&quot;]&quot;, &quot;&quot;)}<code>);                 });             } else if (key === &quot;apiParam&quot; &amp;&amp; value) {                 value.forEach((tab: string) =&gt; {                     lines.push(</code>*    @apiParam ${tab}<code>);                 });             } else if (key === &quot;apiPermission &quot; &amp;&amp; value) {                 lines.push(</code>*    @apiPermission value<code>);             } else if (key === &quot;apiExample&quot; &amp;&amp; value) {                 Object.keys(value).forEach((elem: string) =&gt; {                     lines.push(</code>*    @${key} {${elem}} ${elem}<code>);                     switch (elem) {                         case &quot;http&quot;:                             createExamplesLines(</code>${proxy}${value[elem]}<code>);                             break;                         case &quot;curl&quot;:                         case &quot;javascript&quot;:                         case &quot;python&quot;:                             createExamplesLines(value[elem].replace(&quot;KEYHTTP&quot;, value.http).replace(&quot;proxy&quot;, proxy).replace(&quot;KEYDATA&quot;, element.apiParamExample));                             break;                         default:                             createExamplesLines(</code>${proxy}${value[elem]}<code>);                             break;                     }                 });             } else if (key === &quot;apiError&quot; &amp;&amp; value) {                 value.forEach((tab: string) =&gt; {                     lines.push(</code>*    @apiError ${tab}<code>);                 });             } else if (Object.keys(_HEADERS).includes(key) &amp;&amp; value) {                 lines.push(</code>*    @${key} ${_HEADERS[key]}<code>);                 const successLines: string[] = value.split(&quot;\\n&quot;);                 successLines.forEach((successLine: string) =&gt; {                     lines.push(</code>*    ${successLine}<code>);                 });             } else if (value) {                 lines.push(</code>*    @${key} ${value}`); } }</p> <pre><code>    lines.push(&quot;\n</code></pre>"}]}},type:"",url:"",version:"0.0.0",filename:"test/integration/constant.ts",groupTitle:"D:\\api\\test\\integration\\constant.ts",group:"D:apitestintegrationconstant.ts",name:""},{type:"delete",url:"Datastreams",title:"Delete one",version:"1.1.0",name:"DeleteDatastreams",group:"Datastreams",description:'<p>Delete a Datastream.<input id="showDeleteDatastreams" type=checkbox> <label for="showDeleteDatastreams">Click for Help</label> <span id="contentDeleteDatastreams"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(15)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/Datastreams(15)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(15)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/Datastreams(15)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 1"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Datastreams",title:"Get all",version:"1.1.0",name:"GetAllDatastreams",group:"Datastreams",description:'<p>Retrieve all Datastreams.<input id="showGetDatastreams" type=checkbox> <label for="showGetDatastreams">Click for Help</label> <span id="contentGetDatastreams">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for Datastream entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>The description of the Datastream entity.</p>"},{group:"Success 200",type:"list",optional:!1,field:"observationType",description:"<p>The type of Observation (with unique result type), which is used by the service to encode observations.</p>"},{group:"Success 200",type:"json",optional:!1,field:"unitOfMeasurement",description:"<p>A JSON Object containing three key-value pairs. The name property presents the full name of the unitOfMeasurement; the symbol property shows the textual form of the unit symbol; and the definition contains the URI defining the unitOfMeasurement.</br></br>The values of these properties SHOULD follow the Unified Code for Unit of Measure (UCUM).</p>"},{group:"Success 200",type:"json",optional:!1,field:"observedArea",description:"<p>The spatial bounding box of the spatial extent of all FeaturesOfInterest that belong to the Observations associated with this Datastream.</p>"},{group:"Success 200",type:"text",optional:!1,field:"phenomenonTime",description:"<p>The temporal interval of the phenomenon times of all observations belonging to this Datastream.</p>"},{group:"Success 200",type:"text",optional:!1,field:"resultTime",description:"<p>The temporal interval of the result times of all observations belonging to this Datastream.</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Thing",description:"<p>A Thing has zero-to-many Datastreams. A Datastream entity SHALL only link to a Thing as a collection of Observations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Sensor",description:"<p>The Observations in a Datastream are performed by one-and-only-one Sensor. One Sensor MAY produce zero-to-many Observations in different Datastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"ObservedProperty",description:"<p>The Observations of a Datastream SHALL observe the same ObservedProperty. The Observations of different Datastreams MAY observe the same ObservedProperty.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Observations",description:"<p>A Datastream has zero-to-many Observations. One Observation SHALL occur in one-and-only-one Datastream.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Loras",description:"<p>The Lora of a Datastream SHALL Have only one.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"FeatureOfInterest",description:""}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 10,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)",
            "name": "air_quality_readings1",
            "description": "Air quality Number one",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
            "resultTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)",
            "name": "air_quality_readings2",
            "description": "Air quality Number two",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
            "resultTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Observations"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Datastreams(:id)",title:"Get All infos",version:"1.1.0",name:"GetAllInfosDatastreams",group:"Datastreams",description:"<p>Get all infos of a datastream.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Thing/Locations,Sensor,ObservedProperty",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Thing/Locations,Sensor,ObservedProperty"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Thing/Locations,Sensor,ObservedProperty", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Thing/Locations,Sensor,ObservedProperty')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Thing/Locations,Sensor,ObservedProperty"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 10,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)",
    "name": "air_quality_readings10",
    "description": "Air quality Number ten",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:00Z",
    "resultTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:05Z",
    "properties": null,
    "Thing": {
        "@iot.id": 6,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
        "name": "SensorWebThing 6",
        "description": "A SensorWeb thing Number six",
        "properties": {
            "owner": "Mozilla version six",
            "organization": "Mozilla"
        },
        "Locations": [
            {
                "@iot.id": 1,
                "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
                "name": "UofC Number six",
                "description": "E.Leclerc VERN SUR SEICHE",
                "encodingType": "application/vnd.geo+json",
                "location": {
                    "type": "Point",
                    "coordinates": [
                        "48.06467042196109",
                        "-1.623116279666956"
                    ]
                },
                "geom": null,
                "properties": null,
                "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
                "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
            }
        ],
        "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/HistoricalLocations",
        "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams",
        "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
    },
    "Sensor": {
        "@iot.id": 5,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)",
        "name": "PM 5 sensor",
        "description": "PM sensor Number five",
        "encodingType": "application/pdf",
        "metadata": "http://particle-sensor.com/",
        "properties": null,
        "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)/Datastreams",
        "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)/MultiDatastreams"
    },
    "ObservedProperty": {
        "@iot.id": 8,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)",
        "name": "PM 8 observedProperties",
        "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
        "description": "PM something Number height",
        "properties": null,
        "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)/Datastreams",
        "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)/MultiDatastreams"
    },
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Datastreams(:id)",title:"Get Expands",version:"1.1.0",name:"GetExpandObservationsDatastreams",group:"Datastreams",description:"<p>Get a specific Datastream with expand Observations and ObservedProperty.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Observations,ObservedProperty",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Observations,ObservedProperty"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Observations,ObservedProperty", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Observations,ObservedProperty')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)?$expand=Observations,ObservedProperty"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 10,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)",
    "name": "air_quality_readings10",
    "description": "Air quality Number ten",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:00Z",
    "resultTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:05Z",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Sensor",
    "ObservedProperty": {
        "@iot.id": 8,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)",
        "name": "PM 8 observedProperties",
        "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
        "description": "PM something Number height",
        "properties": null,
        "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)/Datastreams",
        "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)/MultiDatastreams"
    },
    "Observations": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T18:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/FeatureOfInterest"
        },
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/FeatureOfInterest"
        },
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(9)",
            "phenomenonTime": "2016-11-18T08:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T08:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(9)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(9)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(9)/FeatureOfInterest"
        },
        {
            "@iot.id": 21,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 21.6,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.452429+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)/FeatureOfInterest"
        },
        {
            "@iot.id": 23,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 23,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.497289+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)/FeatureOfInterest"
        },
        {
            "@iot.id": 24,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)",
            "phenomenonTime": "2017-02-07T19:02:00+01:00",
            "result": 21.6,
            "resultTime": "2017-02-07T19:02:05+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:38.517062+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/FeatureOfInterest"
        }
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Datastreams",title:"Get From observations filter",version:"1.1.0",name:"GetObservationFilteDatastreams",group:"Datastreams",description:"<p>Get Datastream(s) from Observations filter.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=Observations/result eq 23",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=Observations/result eq 23"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=Observations/result eq 23", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=Observations/result eq 23')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=Observations/result eq 23"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)",
            "name": "air_quality_readings10",
            "description": "Air quality Number ten",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:00Z",
            "resultTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:05Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"
        }
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Datastreams(:id)",title:"Get one",version:"1.1.0",name:"GetOneDatastreams",group:"Datastreams",description:'<p>Get a specific Datastream.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(1)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(1)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(1)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)",
    "name": "air_quality_readings1",
    "description": "Air quality Number one",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
    "resultTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Datastreams",title:"Get From phenomenonTime search",version:"1.1.0",name:"GetPhenomenonTimeDatastreams",group:"Datastreams",description:"<p>Get Datastream(s) from phenomenonTime filter.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=resultTime eq 2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=resultTime eq 2016-11-18T03:15:15Z/2016-11-18T04:15:15Z"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=resultTime eq 2016-11-18T03:15:15Z/2016-11-18T04:15:15Z", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=resultTime eq 2016-11-18T03:15:15Z/2016-11-18T04:15:15Z')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams?$filter=resultTime eq 2016-11-18T03:15:15Z/2016-11-18T04:15:15Z"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)",
            "name": "air_quality_readings2",
            "description": "Air quality Number two",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
            "resultTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Observations"
        }
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"get",url:"Things(6)/Datastreams",title:"Get one from specific Thing",version:"1.1.0",name:"GetThingsDatastreams",group:"Datastreams",description:"<p>Get Datastream(s) from Things.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(8)",
            "name": "air_quality_readings8",
            "description": "Air quality Number height",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(8)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(8)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(8)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(8)/Observations"
        },
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)",
            "name": "air_quality_readings9",
            "description": "Air quality Number nine",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Observations"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"infos",url:"Datastreams",title:"infos",version:"1.1.0",name:"InfosDatastreams",group:"Datastreams",description:'<p>A Datastream groups a collection of Observations measuring the same ObservedProperty and produced by the same Sensor.  <a href="https://docs.ogc.org/is/18-088/18-088.html#datastream" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"patch",url:"Datastreams",title:"Patch one",version:"1.1.0",name:"PatchDatastreams",group:"Datastreams",description:'<p>Patch a Datastream.<input id="showPatchDatastreams" type=checkbox> <label for="showPatchDatastreams">Click for Help</label> <span id="contentPatchDatastreams"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "unitOfMeasurement": {
           "name": "Degrees Fahrenheit",
           "symbol": "degF",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
       },
       "description": "Water Temperature of Bow river"
   }}' https://sensorthings.geosas.fr/v1.0/Datastreams(10)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(10)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "unitOfMeasurement": {
           "name": "Degrees Fahrenheit",
           "symbol": "degF",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
       },
       "description": "Water Temperature of Bow river"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Datastreams(10)', (headers = { "Content-Type": "application/json" }), (data = :{
       "unitOfMeasurement": {
           "name": "Degrees Fahrenheit",
           "symbol": "degF",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
       },
       "description": "Water Temperature of Bow river"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "unitOfMeasurement": {
        "name": "Degrees Fahrenheit",
        "symbol": "degF",
        "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
    },
    "description": "Water Temperature of Bow river"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 10,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)",
    "name": "air_quality_readings10",
    "description": "Water Temperature of Bow river",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "Degrees Fahrenheit",
        "symbol": "degF",
        "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
    },
    "observedArea": null,
    "phenomenonTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:00Z",
    "resultTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:05Z",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"post",url:"Datastreams",title:"Post with existing Thing",version:"1.1.0",name:"PostDatastreams",group:"Datastreams",description:'<p>Post a new Datastreams.<input id="showPostDatastreams" type=checkbox> <label for="showPostDatastreams">Click for Help</label> <span id="contentPostDatastreams"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "unitOfMeasurement": {
           "symbol": "\u03BCg/m\xB3",
           "name": "PM 2.5 Particulates (ug/m3)",
           "definition": "http://unitsofmeasure.org/ucum.html"
       },
       "description": "Air quality readings Datastreams 10",
       "name": "Air quality readings Datastreams 11",
       "Thing": {
           "@iot.id": 1
       },
       "ObservedProperty": {
           "@iot.id": 1
       },
       "Sensor": {
           "@iot.id": 1
       }
   }}' https://sensorthings.geosas.fr/v1.0/Datastreams`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "unitOfMeasurement": {
           "symbol": "\u03BCg/m\xB3",
           "name": "PM 2.5 Particulates (ug/m3)",
           "definition": "http://unitsofmeasure.org/ucum.html"
       },
       "description": "Air quality readings Datastreams 10",
       "name": "Air quality readings Datastreams 11",
       "Thing": {
           "@iot.id": 1
       },
       "ObservedProperty": {
           "@iot.id": 1
       },
       "Sensor": {
           "@iot.id": 1
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Datastreams', (headers = { "Content-Type": "application/json" }), (data = :{
       "unitOfMeasurement": {
           "symbol": "\u03BCg/m\xB3",
           "name": "PM 2.5 Particulates (ug/m3)",
           "definition": "http://unitsofmeasure.org/ucum.html"
       },
       "description": "Air quality readings Datastreams 10",
       "name": "Air quality readings Datastreams 11",
       "Thing": {
           "@iot.id": 1
       },
       "ObservedProperty": {
           "@iot.id": 1
       },
       "Sensor": {
           "@iot.id": 1
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"text",optional:!1,field:"name",description:""},{group:"Parameter",type:"text",optional:!1,field:"description",description:""},{group:"Parameter",type:"list",optional:!1,field:"observationType",description:""},{group:"Parameter",type:"json",optional:!1,field:"unitOfMeasurement",description:""},{group:"Parameter",type:"json",optional:!0,field:"observedArea",description:""},{group:"Parameter",type:"text",optional:!0,field:"phenomenonTime",description:""},{group:"Parameter",type:"text",optional:!0,field:"resultTime",description:""},{group:"Parameter",type:"json",optional:!0,field:"properties",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Thing",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Sensor",description:""},{group:"Parameter",type:"relation",optional:!0,field:"ObservedProperty",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Observations",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Loras",description:""},{group:"Parameter",type:"relation",optional:!0,field:"FeatureOfInterest",description:""}]},examples:[{title:"Request-Example:",content:`{
    "unitOfMeasurement": {
        "symbol": "\u03BCg/m\xB3",
        "name": "PM 2.5 Particulates (ug/m3)",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "description": "Air quality readings Datastreams 10",
    "name": "Air quality readings Datastreams 11",
    "Thing": {
        "@iot.id": 1
    },
    "ObservedProperty": {
        "@iot.id": 1
    },
    "Sensor": {
        "@iot.id": 1
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 12,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(12)",
    "name": "Air quality readings Datastreams 11",
    "description": "Air quality readings Datastreams 10",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(12)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(12)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(12)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(12)/Observations"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"post",url:"Datastreams",title:"Post with default FOI",version:"1.1.0",name:"PostDatastreamsFOI",group:"Datastreams",description:"<p>Post a new Datastreams with default FOI</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "unitOfMeasurement": {
           "symbol": "\u03BCg/m\xB3",
           "name": "PM 2.5 Particulates (ug/m3)",
           "definition": "http://unitsofmeasure.org/ucum.html"
       },
       "description": "Air quality readings with default",
       "name": "Air quality readings with default FOI",
       "Thing": {
           "@iot.id": 1
       },
       "ObservedProperty": {
           "@iot.id": 1
       },
       "Sensor": {
           "@iot.id": 1
       },
       "FeatureOfInterest": {
           "@iot.id": 2
       }
   }}' https://sensorthings.geosas.fr/v1.0/Datastreams`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "unitOfMeasurement": {
           "symbol": "\u03BCg/m\xB3",
           "name": "PM 2.5 Particulates (ug/m3)",
           "definition": "http://unitsofmeasure.org/ucum.html"
       },
       "description": "Air quality readings with default",
       "name": "Air quality readings with default FOI",
       "Thing": {
           "@iot.id": 1
       },
       "ObservedProperty": {
           "@iot.id": 1
       },
       "Sensor": {
           "@iot.id": 1
       },
       "FeatureOfInterest": {
           "@iot.id": 2
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Datastreams', (headers = { "Content-Type": "application/json" }), (data = :{
       "unitOfMeasurement": {
           "symbol": "\u03BCg/m\xB3",
           "name": "PM 2.5 Particulates (ug/m3)",
           "definition": "http://unitsofmeasure.org/ucum.html"
       },
       "description": "Air quality readings with default",
       "name": "Air quality readings with default FOI",
       "Thing": {
           "@iot.id": 1
       },
       "ObservedProperty": {
           "@iot.id": 1
       },
       "Sensor": {
           "@iot.id": 1
       },
       "FeatureOfInterest": {
           "@iot.id": 2
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "unitOfMeasurement": {
        "symbol": "\u03BCg/m\xB3",
        "name": "PM 2.5 Particulates (ug/m3)",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "description": "Air quality readings with default",
    "name": "Air quality readings with default FOI",
    "Thing": {
        "@iot.id": 1
    },
    "ObservedProperty": {
        "@iot.id": 1
    },
    "Sensor": {
        "@iot.id": 1
    },
    "FeatureOfInterest": {
        "@iot.id": 2
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 13,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(13)",
    "name": "Air quality readings with default FOI",
    "description": "Air quality readings with default",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(13)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(13)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(13)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(13)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"post",url:"Datastreams",title:"Post with a Thing",version:"1.1.0",name:"PostLocationThingDatastreams",group:"Datastreams",description:'<p>POST a new Datastream with existing Thing.  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Air Temperature DS",
       "description": "Datastream for recording temperature [6]",
       "unitOfMeasurement": {
           "name": "Degree Celsius unitOfMeasurement 12",
           "symbol": "degC",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
       },
       "ObservedProperty": {
           "name": "Area Temperature unitOfMeasurement 13",
           "description": "The degree or intensity of heat present in the area",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
       },
       "Sensor": {
           "name": "DHT22 unitOfMeasurement 14",
           "description": "DHT22 temperature sensor [1]",
           "encodingType": "application/pdf",
           "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
       }
   }}' https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Air Temperature DS",
       "description": "Datastream for recording temperature [6]",
       "unitOfMeasurement": {
           "name": "Degree Celsius unitOfMeasurement 12",
           "symbol": "degC",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
       },
       "ObservedProperty": {
           "name": "Area Temperature unitOfMeasurement 13",
           "description": "The degree or intensity of heat present in the area",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
       },
       "Sensor": {
           "name": "DHT22 unitOfMeasurement 14",
           "description": "DHT22 temperature sensor [1]",
           "encodingType": "application/pdf",
           "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Air Temperature DS",
       "description": "Datastream for recording temperature [6]",
       "unitOfMeasurement": {
           "name": "Degree Celsius unitOfMeasurement 12",
           "symbol": "degC",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
       },
       "ObservedProperty": {
           "name": "Area Temperature unitOfMeasurement 13",
           "description": "The degree or intensity of heat present in the area",
           "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
       },
       "Sensor": {
           "name": "DHT22 unitOfMeasurement 14",
           "description": "DHT22 temperature sensor [1]",
           "encodingType": "application/pdf",
           "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "Air Temperature DS",
    "description": "Datastream for recording temperature [6]",
    "unitOfMeasurement": {
        "name": "Degree Celsius unitOfMeasurement 12",
        "symbol": "degC",
        "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
    },
    "ObservedProperty": {
        "name": "Area Temperature unitOfMeasurement 13",
        "description": "The degree or intensity of heat present in the area",
        "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
    },
    "Sensor": {
        "name": "DHT22 unitOfMeasurement 14",
        "description": "DHT22 temperature sensor [1]",
        "encodingType": "application/pdf",
        "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 14,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(14)",
    "name": "Air Temperature DS",
    "description": "Datastream for recording temperature [6]",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "Degree Celsius unitOfMeasurement 12",
        "symbol": "degC",
        "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
    },
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(14)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(14)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(14)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(14)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocDatastreams.js",groupTitle:"Datastreams"},{type:"delete",url:"FeaturesOfInterest",title:"Delete one",version:"1.1.0",name:"DeleteFeaturesOfInterest",group:"FeaturesOfInterest",description:'<p>Delete a FeatureOfInterest.<input id="showDeleteFeaturesOfInterest" type=checkbox> <label for="showDeleteFeaturesOfInterest">Click for Help</label> <span id="contentDeleteFeaturesOfInterest"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"get",url:"FeaturesOfInterest",title:"Get all",version:"1.1.0",name:"GetAllFeaturesOfInterest",group:"FeaturesOfInterest",description:'<p>Retrieve all FeaturesOfInterest.<input id="showGetFeaturesOfInterest" type=checkbox> <label for="showGetFeaturesOfInterest">Click for Help</label> <span id="contentGetFeaturesOfInterest">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>Is the system-generated identifier of an entity. id is unique among the entities of the same entity type in a SensorThings service.</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for FeatureOfInterest entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>The description about the FeatureOfInterest.</p>"},{group:"Success 200",type:"text",optional:!1,field:"encodingType",description:"<p>The encoding type of the feature property.</br>Its value is one of the ValueCode enumeration (see Table 7 for the available ValueCode).</p>"},{group:"Success 200",type:"json",optional:!1,field:"feature",description:"<p>The detailed description of the feature. The data type is defined by encodingType.</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Observations",description:"<p>An Observation observes on one-and-only-one FeatureOfInterest. One FeatureOfInterest could be observed by zero-to-many Observations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:""}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 9,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)",
            "name": "Default Feature of Interest",
            "description": "Default Feature of Interest",
            "encodingType": "application/vnd.geo+json",
            "feature": {},
            "properties": null,
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)/Observations"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(2)",
            "name": "Weather Station 1",
            "description": "This is the weather station Number one",
            "encodingType": "application/vnd.geo+json",
            "feature": {
                "type": "Point",
                "coordinates": [
                    "48.13765198324515",
                    "-1.6956051932646596"
                ]
            },
            "properties": null,
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(2)/Observations"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"get",url:"FeaturesOfInterest(:id)",title:"Get one and expand",version:"1.1.0",name:"GetExpandObservationsFeaturesOfInterest",group:"FeaturesOfInterest",description:"<p>Get a specific Feature of interest and expand Observations</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)?$expand=Observations",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)?$expand=Observations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)",
    "name": "Default Feature of Interest",
    "description": "Default Feature of Interest",
    "encodingType": "application/vnd.geo+json",
    "feature": {},
    "properties": null,
    "Observations": [
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)",
            "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
            "result": 11.666666666666666,
            "resultTime": "2016-11-18T04:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T16:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(2)/FeatureOfInterest"
        },
        {
            "@iot.id": 15,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)",
            "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
            "result": [
                17.5,
                17.5,
                35
            ],
            "resultTime": "2016-11-18T13:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"get",url:"FeaturesOfInterest(:id)",title:"Get one",version:"1.1.0",name:"GetOneFeaturesOfInterest",group:"FeaturesOfInterest",description:'<p>Get a specific Feature of interest.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)",
    "name": "Default Feature of Interest",
    "description": "Default Feature of Interest",
    "encodingType": "application/vnd.geo+json",
    "feature": {},
    "properties": null,
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(1)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"infos",url:"FeaturesOfInterest",title:"infos",version:"1.1.0",name:"InfosFeaturesOfInterest",group:"FeaturesOfInterest",description:'<p>An Observation results in a value being assigned to a phenomenon. The phenomenon is a property of a feature, the latter being the FeatureOfInterest of the Observation [OGC and ISO 19156:2011]. In the context of the Internet of Things, many Observations\u2019 FeatureOfInterest can be the Location of the Thing. For example, the FeatureOfInterest of a wifi-connect thermostat can be the Location of the thermostat (i.e., the living room where the thermostat is located in). In the case of remote sensing, the FeatureOfInterest can be the geographical area or volume that is being sensed.  <a href="https://docs.ogc.org/is/18-088/18-088.html#featureofinterest" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"patch",url:"FeaturesOfInterest",title:"Patch one",version:"1.1.0",name:"PatchFeaturesOfInterest",group:"FeaturesOfInterest",description:'<p>Patch a sensor.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 10,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)",
    "name": "My New Name",
    "description": "This is a weather station located at Au Comptoir V\xE9nitien.",
    "encodingType": "application/vnd.geo+json",
    "feature": {
        "type": "Point",
        "coordinates": [
            48.11829243294942,
            -1.717928984533772
        ]
    },
    "properties": null,
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"post",url:"FeaturesOfInterest",title:"Post basic",version:"1.1.0",name:"PostFeaturesOfInterest",group:"FeaturesOfInterest",description:'<p>Post a new FeaturesOfInterest.<input id="showPostFeaturesOfInterest" type=checkbox> <label for="showPostFeaturesOfInterest">Click for Help</label> <span id="contentPostFeaturesOfInterest"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Weather Station YYC.",
       "description": "This is a weather station located at Au Comptoir V\xE9nitien.",
       "encodingType": "application/vnd.geo+json",
       "feature": {
           "type": "Point",
           "coordinates": [
               48.11829243294942,
               -1.717928984533772
           ]
       }
   }}' https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Weather Station YYC.",
       "description": "This is a weather station located at Au Comptoir V\xE9nitien.",
       "encodingType": "application/vnd.geo+json",
       "feature": {
           "type": "Point",
           "coordinates": [
               48.11829243294942,
               -1.717928984533772
           ]
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Weather Station YYC.",
       "description": "This is a weather station located at Au Comptoir V\xE9nitien.",
       "encodingType": "application/vnd.geo+json",
       "feature": {
           "type": "Point",
           "coordinates": [
               48.11829243294942,
               -1.717928984533772
           ]
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"text",optional:!1,field:"name",description:""},{group:"Parameter",type:"text",optional:!1,field:"description",description:""},{group:"Parameter",type:"text",optional:!1,field:"encodingType",description:""},{group:"Parameter",type:"json",optional:!1,field:"feature",description:""},{group:"Parameter",type:"json",optional:!0,field:"properties",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Observations",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Datastreams",description:""}]},examples:[{title:"Request-Example:",content:`{
    "name": "Weather Station YYC.",
    "description": "This is a weather station located at Au Comptoir V\xE9nitien.",
    "encodingType": "application/vnd.geo+json",
    "feature": {
        "type": "Point",
        "coordinates": [
            48.11829243294942,
            -1.717928984533772
        ]
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 10,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)",
    "name": "Weather Station YYC.",
    "description": "This is a weather station located at Au Comptoir V\xE9nitien.",
    "encodingType": "application/vnd.geo+json",
    "feature": {
        "type": "Point",
        "coordinates": [
            48.11829243294942,
            -1.717928984533772
        ]
    },
    "properties": null,
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/FeaturesOfInterest(10)/Observations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocFeaturesOfInterest.js",groupTitle:"FeaturesOfInterest"},{type:"get",url:"ResultFormat",title:"as csv",version:"1.1.0",name:"FormatCsv",group:"Format",description:'<p>Use $resultFormat=csv to get datas as csv format.<br><img class="tabLogo" src="./assets/csv.jpg" alt="csv result"></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$top=20&$resultFormat=csv",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$top=20&$resultFormat=csv"}],success:{examples:[{title:"Success-Response:",content:`"id";"phenomenonTime";"result";"resultTime";"resultQuality";"validTime";"parameters"
56;"1999-01-01T01:00:00+01:00";0;"1999-01-01T01:00:00+01:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
57;"1999-02-02T02:00:00+01:00";0.1;"1999-02-02T02:00:00+01:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
58;"1999-03-03T03:00:00+01:00";0.2;"1999-03-03T03:00:00+01:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
59;"1999-04-04T04:00:00+02:00";0.3;"1999-04-04T04:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
60;"1999-05-05T05:00:00+02:00";0.4;"1999-05-05T05:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
61;"1999-06-06T06:00:00+02:00";0.5;"1999-06-06T06:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
62;"1999-07-07T07:00:00+02:00";0.6;"1999-07-07T07:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
63;"1999-08-08T08:00:00+02:00";0.7;"1999-08-08T08:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
64;"1999-09-09T09:00:00+02:00";0.8;"1999-09-09T09:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
65;"1999-10-10T10:00:00+02:00";0.9;"1999-10-10T10:00:00+02:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
66;"1999-11-11T11:00:00+01:00";0.1;"1999-11-11T11:00:00+01:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
67;"1999-12-12T12:00:00+01:00";0.11;"1999-12-12T12:00:00+01:00";"{date:23/11/2023 20:52:41,import:simple.csv}";"2023-11-23T20:52:41.328043+01:00";
80;"2000-05-01T09:50:00+02:00";13.1;"2000-05-01T09:50:00+02:00";"{date:23/11/2023 20:52:41,import:multi.csv}";"2023-11-23T20:52:41.468387+01:00";
81;"2000-05-02T10:00:00+02:00";13.2;"2000-05-02T10:00:00+02:00";"{date:23/11/2023 20:52:41,import:multi.csv}";"2023-11-23T20:52:41.468387+01:00";
82;"2000-05-03T10:10:00+02:00";13.3;"2000-05-03T10:10:00+02:00";"{date:23/11/2023 20:52:41,import:multi.csv}";"2023-11-23T20:52:41.468387+01:00";
83;"2000-05-04T10:20:00+02:00";13.4;"2000-05-04T10:20:00+02:00";"{date:23/11/2023 20:52:41,import:multi.csv}";"2023-11-23T20:52:41.468387+01:00";
84;"2000-05-07T10:30:00+02:00";13.5;"2000-05-07T10:30:00+02:00";"{date:23/11/2023 20:52:41,import:multi.csv}";"2023-11-23T20:52:41.468387+01:00";
5;"2016-11-18T03:15:15.79+01:00";11.666666666666666;"2016-11-18T03:15:15.79+01:00";;"2016-11-18T16:30:30.79+01:00";
1;"2016-11-18T07:15:15.79+01:00";17.5;"2016-11-18T07:15:15.79+01:00";;"2016-11-18T19:30:30.79+01:00";
26;"2017-01-13T11:20:00+01:00";90;"2017-01-13T11:20:00+01:00";;"2023-11-23T20:52:40.419911+01:00";
27;"2017-01-13T11:21:00+01:00";91;"2017-01-13T11:21:00+01:00";;"2023-11-23T20:52:40.422662+01:00";
29;"2017-02-13T11:22:00+01:00";93;"2017-02-13T11:22:00+01:00";;"2023-11-23T20:52:40.429419+01:00";
28;"2017-02-13T11:22:00+01:00";92;"2017-02-13T11:22:00+01:00";;"2023-11-23T20:52:40.425757+01:00";`,type:"json"}]},filename:"test/apiDocs/apiDocFormat.js",groupTitle:"Format"},{type:"get",url:"Datastream",title:"Observations as dataArray",version:"1.1.0",name:"FormatDataStreamdataArray",group:"Format",description:"<p>Use $resultFormat=dataArray to get datas as dataArray format.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$resultFormat=dataArray&$select=id,result",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$resultFormat=dataArray&$select=id,result"}],success:{examples:[{title:"Success-Response:",content:`[
    {
        "component": [
            "id",
            "result"
        ],
        "dataArray@iot.count": 23,
        "dataArray": [
            [
                56,
                0
            ],
            [
                57,
                0.1
            ],
            " ... "
        ]
    }
]`,type:"json"}]},filename:"test/apiDocs/apiDocFormat.js",groupTitle:"Format"},{type:"get",url:"ResultFormat",title:"as graph",version:"1.1.0",name:"FormatGraph",group:"Format",description:'<p>Use $resultFormat=graph to get datas into graphical representation.<br><img class="tabLogo" src="./assets/graph.png" alt="graph result"></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$resultFormat=graph",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$resultFormat=graph"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},filename:"test/apiDocs/apiDocFormat.js",groupTitle:"Format"},{type:"get",url:"ResultFormat",title:"as graphDatas",version:"1.1.0",name:"FormatGraphDatas",group:"Format",description:'<p>Use $resultFormat=graphDatas to get datas into echarts compatible format.  <a href="https://echarts.apache.org/en/index.html" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$resultFormat=graphDatas",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations?$resultFormat=graphDatas"}],success:{examples:[{title:"Success-Response:",content:`[
    {
        "infos": "Air quality Number one|PM 2.5 Particulates (ug/m3)|\u03BCg/m\xB3",
        "datas": "[new Date(\\"1999/01/01 01:00\\"), 0],[new Date(\\"1999/02/02 02:00\\"), 0.1],[new Date(\\"1999/03/03 03:00\\"), 0.2],[new Date(\\"1999/04/04 04:00\\"), 0.3],[new Date(\\"1999/05/05 05:00\\"), 0.4],[new Date(\\"1999/06/06 06:00\\"), 0.5],[new Date(\\"1999/07/07 07:00\\"), 0.6],[new Date(\\"1999/08/08 08:00\\"), 0.7],[new Date(\\"1999/09/09 09:00\\"), 0.8],[new Date(\\"1999/10/10 10:00\\"), 0.9],[new Date(\\"1999/11/11 11:00\\"), 0.1],[new Date(\\"1999/12/12 12:00\\"), 0.11],[new Date(\\"2000/05/01 09:50\\"), 13.1],[new Date(\\"2000/05/02 10:00\\"), 13.2],[new Date(\\"2000/05/03 10:10\\"), 13.3],[new Date(\\"2000/05/04 10:20\\"), 13.4],[new Date(\\"2000/05/07 10:30\\"), 13.5],[new Date(\\"2016/11/18 03:15\\"), 11.666666666666666],[new Date(\\"2016/11/18 07:15\\"), 17.5],[new Date(\\"2017/01/13 11:20\\"), 90],[new Date(\\"2017/01/13 11:21\\"), 91],[new Date(\\"2017/02/13 11:22\\"), 93],[new Date(\\"2017/02/13 11:22\\"), 92]"
    }
]`,type:"json"}]},filename:"test/apiDocs/apiDocFormat.js",groupTitle:"Format"},{type:"infos",url:"/Format",title:"Infos.",version:"1.1.0",name:"FormatInfos",group:"Format",description:"<p>Format result json as default, dataArray, csv, txt,  graph or graphDatas, note that $value return result as text.</p>",filename:"test/apiDocs/apiDocFormat.js",groupTitle:"Format"},{type:"get",url:"Things",title:"Things as dataArray",version:"1.1.0",name:"FormatThingdataArray",group:"Format",description:"<p>Use $resultFormat=dataArray to get datas as dataArray format.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$resultFormat=dataArray",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$resultFormat=dataArray"}],success:{examples:[{title:"Success-Response:",content:`[
    {
        "component": [
            "id",
            "name",
            "description",
            "properties"
        ],
        "dataArray@iot.count": 24,
        "dataArray": [
            [
                1,
                "SensorWebThing 1",
                "A SensorThingWeb thing Number one",
                {
                    "owner": "Mozilla version one",
                    "organization": "Mozilla"
                }
            ],
            [
                2,
                "SensorWebThing 2",
                "A SensorThingWeb thing Number two",
                {
                    "owner": "Mozilla version two",
                    "organization": "Mozilla"
                }
            ],
            " ... "
        ]
    }
]`,type:"json"}]},filename:"test/apiDocs/apiDocFormat.js",groupTitle:"Format"},{type:"delete",url:"HistoricalLocations",title:"Delete one",version:"1.1.0",name:"DeleteHistoricalLocations",group:"HistoricalLocations",description:'<p>Delete a HistoricalLocation.<input id="showDeleteHistoricalLocations" type=checkbox> <label for="showDeleteHistoricalLocations">Click for Help</label> <span id="contentDeleteHistoricalLocations"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 1"
}`,type:"json"}]},filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"get",url:"HistoricalLocations",title:"Get all",version:"1.1.0",name:"GetAllHistoricalLocations",group:"HistoricalLocations",description:'<p>Retrieve all HistoricalLocations.<input id="showGetHistoricalLocations" type=checkbox> <label for="showGetHistoricalLocations">Click for Help</label> <span id="contentGetHistoricalLocations">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/HistoricalLocations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/HistoricalLocations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/HistoricalLocations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"none",optional:!1,field:"time",description:"<p>The time when the Thing is known at the Location.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Things",description:"<p>A HistoricalLocation has one-and-only-one Thing. One Thing MAY have zero-to-many HistoricalLocations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Locations",description:"<p>A Location can have zero-to-many HistoricalLocations. One HistoricalLocation SHALL have one or many Locations.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 33,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)",
            "time": "2023-11-23T20:52:37.059565+01:00",
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Things",
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Locations"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(2)",
            "time": "2023-11-23T20:52:37.059565+01:00",
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(2)/Things",
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(2)/Locations"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"get",url:"HistoricalLocations(:id)",title:"Get Expand",version:"1.1.0",name:"GetExpandLocationsHistoricalLocations",group:"HistoricalLocations",description:"<p>Get a specific Historical Location and expand Locations.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$expand=Locations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$expand=Locations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$expand=Locations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$expand=Locations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$expand=Locations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)",
    "time": "2023-11-23T20:52:37.059565+01:00",
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)/Things",
    "Locations": [
        {
            "@iot.id": 6,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(6)",
            "name": "UofC (Created new location) for MultiDatastream Number one",
            "description": "Centre commercial Grand Quartier",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.13765198324515",
                    "-1.6956051932646596"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(6)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(6)/HistoricalLocations"
        }
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"get",url:"HistoricalLocations(:id)",title:"Get One",version:"1.1.0",name:"GetOneHistoricalLocations",group:"HistoricalLocations",description:'<p>Get a specific Historical Location.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)",
    "time": "2023-11-23T20:52:37.059565+01:00",
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Things",
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Locations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"get",url:"HistoricalLocations(:id)",title:"Get Select",version:"1.1.0",name:"GetSelectTimeHistoricalLocations",group:"HistoricalLocations",description:"<p>Retrieve time for a specific Historical Location.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$select=time",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$select=time"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$select=time", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$select=time')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(6)?$select=time"}],success:{examples:[{title:"Success-Response:",content:`{
    "time": "2023-11-23T20:52:37.059565+01:00"
}`,type:"json"}]},filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"infos",url:"HistoricalLocations",title:"infos",version:"1.1.0",name:"InfosHistoricalLocations",group:"HistoricalLocations",description:'<p>A Thing\u2019s HistoricalLocation entity set provides the times of the current (last known) and previous locations of the Thing.  <a href="https://docs.ogc.org/is/18-088/18-088.html#historicallocation" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"patch",url:"HistoricalLocations",title:"Patch one",version:"1.1.0",name:"PatchHistoricalLocations",group:"HistoricalLocations",description:'<p>Patch a HistoricalLocation.<input id="showPatchHistoricalLocations" type=checkbox> <label for="showPatchHistoricalLocations">Click for Help</label> <span id="contentPatchHistoricalLocations"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "time": "2015-02-07T19:22:11.297Z"
   }}' https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "time": "2015-02-07T19:22:11.297Z"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)', (headers = { "Content-Type": "application/json" }), (data = :{
       "time": "2015-02-07T19:22:11.297Z"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "time": "2015-02-07T19:22:11.297Z"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 36,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)",
    "time": "2015-02-07T20:22:11.297+01:00",
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)/Things",
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(36)/Locations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocHistoricalLocations.js",groupTitle:"HistoricalLocations"},{type:"infos",url:"/Import",title:"Infos.",version:"1.1.0",name:"InfosImport",group:"Import",description:'<hr>     <div class="text">       <p>       You can import a csv file in observations. with one or multiple columns       </p>     </div>',filename:"test/apiDocs/Import.js",groupTitle:"Import"},{type:"post",url:"CreateObservations",title:"with multi csv attached file",version:"1.1.0",name:"PostImportMulti",group:"Import",description:"<p>Import multi csv file</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "header": true,
    "nan": true,
    "columns": {
        "1": {
            "Datastream": "1",
            "FeaturesOfInterest": "1"
        },
        "2": {
            "Datastream": "4",
            "FeaturesOfInterest": "2"
        }
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "Add 5 observations from multi.csv"
]`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`[
    "Add 0 observations from multi.csv"
]`,type:"json"}]},filename:"test/apiDocs/Import.js",groupTitle:"Import"},{type:"post",url:"CreateObservations",title:"with simple csv attached file",version:"1.1.0",name:"PostImportSimple",group:"Import",description:"<p>Import simple csv file</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/CreateObservations",type:"http"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "header": false,
    "nan": true,
    "columns": {
        "1": {
            "Datastream": "1",
            "FeaturesOfInterest": "1"
        }
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`[
    "Add 12 observations from simple.csv"
]`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`[
    "Add 0 observations from simple.csv"
]`,type:"json"}]},filename:"test/apiDocs/Import.js",groupTitle:"Import"},{type:"delete",url:"Locations",title:"Delete one",version:"1.1.0",name:"DeleteLocations",group:"Locations",description:'<p>Delete a Location.<input id="showDeleteLocations" type=checkbox> <label for="showDeleteLocations">Click for Help</label> <span id="contentDeleteLocations"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations(24)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/Locations(24)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations(24)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/Locations(24)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"get",url:"Things(:id)/Locations",title:"Get from specific Thing",version:"1.1.0",name:"GetAllFromThingLocations",group:"Locations",description:'<p>Retrieve Locations of a specific Thing.As the entities in different entity sets may hold some relationships, users can request the linked entities by addressing to a navigation property of an entity. The service then returns one or many entities that hold a certain relationship with the specified entity.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-navigation-property" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(5)/Locations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(5)/Locations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(5)/Locations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(5)/Locations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for Location entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>The description about the Location.</p>"},{group:"Success 200",type:"list",optional:!1,field:"encodingType",description:"<p>The encoding type of the Location property. Its value is GeoJSON.</p>"},{group:"Success 200",type:"json",optional:!1,field:"location",description:"<p>The location type is defined by encodingType.</p>"},{group:"Success 200",type:"json",optional:!1,field:"geom",description:"<p>json</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Things",description:"<p>Multiple Things MAY locate at the same Location. A Thing MAY not have a Location.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"HistoricalLocations",description:"<p>A Location can have zero-to-many HistoricalLocations. One HistoricalLocation SHALL have one or many Locations.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 5,
    "value": [
        {
            "@iot.id": 16,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(16)",
            "name": "My Location 6",
            "description": "\xC9comus\xE9e du pays de Rennes",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.07908248444603",
                    "-1.6664475955447595"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(16)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(16)/HistoricalLocations"
        },
        {
            "@iot.id": 17,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(17)",
            "name": "My Location 7",
            "description": "Castorama",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.089982264765595",
                    "-1.7050636226736864"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(17)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(17)/HistoricalLocations"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(5)/Locations"}],filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"get",url:"Locations",title:"Get all",version:"1.1.0",name:"GetAllLocations",group:"Locations",description:'<p>Retrieve all Locations.<input id="showGetLocations" type=checkbox> <label for="showGetLocations">Click for Help</label> <span id="contentGetLocations">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Locations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for Location entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>The description about the Location.</p>"},{group:"Success 200",type:"list",optional:!1,field:"encodingType",description:"<p>The encoding type of the Location property. Its value is GeoJSON.</p>"},{group:"Success 200",type:"json",optional:!1,field:"location",description:"<p>The location type is defined by encodingType.</p>"},{group:"Success 200",type:"json",optional:!1,field:"geom",description:"<p>json</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Things",description:"<p>Multiple Things MAY locate at the same Location. A Thing MAY not have a Location.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"HistoricalLocations",description:"<p>A Location can have zero-to-many HistoricalLocations. One HistoricalLocation SHALL have one or many Locations.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 22,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
            "name": "UofC Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(2)",
            "name": "UofC Number seven",
            "description": "\xC9comus\xE9e du pays de Rennes",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.07908248444603",
                    "-1.6664475955447595"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(2)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(2)/HistoricalLocations"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"get",url:"Locations(:id)",title:"Get one",version:"1.1.0",name:"GetOneLocations",group:"Locations",description:'<p>Get a specific Location.Users can address to a specific entity in an entity set by place the unique identifier of the entity between brace symbol \u201C()\u201D and put after the entity set name. The service then returns the entity with all its properties.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations(1)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Locations(1)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations(1)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Locations(1)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Locations(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
    "name": "UofC Number six",
    "description": "E.Leclerc VERN SUR SEICHE",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            "48.06467042196109",
            "-1.623116279666956"
        ]
    },
    "geom": null,
    "properties": null,
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"infos",url:"Locations",title:"infos",version:"1.1.0",name:"InfosLocations",group:"Locations",description:'<p>The Location entity locates the Thing(s) it associated with.<br>A Thing\u2019s Location entity is defined as the last known location of the Thing.<br> A Thing can have multiple Locations if all Locations are different representations of same Location with different encodingType  <a href="https://docs.ogc.org/is/18-088/18-088.html#location" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"patch",url:"Locations",title:"Patch one",version:"1.1.0",name:"PatchLocations",group:"Locations",description:'<p>Patch a Location.<input id="showPatchLocations" type=checkbox> <label for="showPatchLocations">Click for Help</label> <span id="contentPatchLocations"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations(24)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "name": "My Location has changed",
       "description": "Inrae - Site De Saint-Gilles",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.14523718972358,
               -1.8305352019940178
           ]
       }
   }}' https://sensorthings.geosas.fr/v1.0/Locations(24)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations(24)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "My Location has changed",
       "description": "Inrae - Site De Saint-Gilles",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.14523718972358,
               -1.8305352019940178
           ]
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Locations(24)', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "My Location has changed",
       "description": "Inrae - Site De Saint-Gilles",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.14523718972358,
               -1.8305352019940178
           ]
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "My Location has changed",
    "description": "Inrae - Site De Saint-Gilles",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            48.14523718972358,
            -1.8305352019940178
        ]
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 24,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(24)",
    "name": "My Location has changed",
    "description": "Inrae - Site De Saint-Gilles",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            48.14523718972358,
            -1.8305352019940178
        ]
    },
    "geom": null,
    "properties": null,
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(24)/Things",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(24)/HistoricalLocations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"post",url:"Locations",title:"Post with existing Thing",version:"1.1.0",name:"PostLocationThingLocations",group:"Locations",description:'<p>POST a new Location with existing Thing.A SensorThings API service, that supports entity creation, SHALL support linking new entities to existing entities upon creation. To create a new entity with links to existing entities in a single request, the client SHALL include the unique identifiers of the related entities associated with the corresponding navigation properties in the request body. </br></br>In the case of creating an Observation whose FeatureOfInterest is the Thing\u2019s Location (that means the Thing entity has a related Location entity), the request of creating the Observation SHOULD NOT include a link to a FeatureOfInterest entity. The service will first automatically create a FeatureOfInterest entity from the Location of the Thing and then link to the Observation. </br></br>In the complex use case of a Thing has multiple Location representations, the service SHOULD decide the default Location encoding when an Observation\u2019s FeatureOfInterest is the Thing\u2019s Location.  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)/Locations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Au Comptoir V\xE9nitien Locations 9",
       "description": "Au Comptoir V\xE9nitien",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.11829243294942,
               -1.717928984533772
           ]
       }
   }}' https://sensorthings.geosas.fr/v1.0/Things(1)/Locations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)/Locations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Au Comptoir V\xE9nitien Locations 9",
       "description": "Au Comptoir V\xE9nitien",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.11829243294942,
               -1.717928984533772
           ]
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Things(1)/Locations', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Au Comptoir V\xE9nitien Locations 9",
       "description": "Au Comptoir V\xE9nitien",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.11829243294942,
               -1.717928984533772
           ]
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "Au Comptoir V\xE9nitien Locations 9",
    "description": "Au Comptoir V\xE9nitien",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            48.11829243294942,
            -1.717928984533772
        ]
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 24,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(24)",
    "name": "Au Comptoir V\xE9nitien Locations 9",
    "description": "Au Comptoir V\xE9nitien",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            48.11829243294942,
            -1.717928984533772
        ]
    },
    "geom": null,
    "properties": null,
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(24)/Things",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(24)/HistoricalLocations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"post",url:"Locations",title:"Post basic",version:"1.1.0",name:"PostLocations",group:"Locations",description:'<p>Post a new Location.<input id="showPostLocations" type=checkbox> <label for="showPostLocations">Click for Help</label> <span id="contentPostLocations"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Locations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "My Location",
       "description": "Inrae - Site De Saint-Gilles",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.14523718972358,
               -1.8305352019940178
           ]
       }
   }}' https://sensorthings.geosas.fr/v1.0/Locations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Locations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "My Location",
       "description": "Inrae - Site De Saint-Gilles",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.14523718972358,
               -1.8305352019940178
           ]
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Locations', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "My Location",
       "description": "Inrae - Site De Saint-Gilles",
       "encodingType": "application/vnd.geo+json",
       "location": {
           "type": "Point",
           "coordinates": [
               48.14523718972358,
               -1.8305352019940178
           ]
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"text",optional:!1,field:"name",description:""},{group:"Parameter",type:"text",optional:!1,field:"description",description:""},{group:"Parameter",type:"list",optional:!1,field:"encodingType",description:""},{group:"Parameter",type:"json",optional:!1,field:"location",description:""},{group:"Parameter",type:"json",optional:!0,field:"geom",description:""},{group:"Parameter",type:"json",optional:!0,field:"properties",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Things",description:""},{group:"Parameter",type:"relation",optional:!0,field:"HistoricalLocations",description:""}]},examples:[{title:"Request-Example:",content:`{
    "name": "My Location",
    "description": "Inrae - Site De Saint-Gilles",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            48.14523718972358,
            -1.8305352019940178
        ]
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 23,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(23)",
    "name": "My Location",
    "description": "Inrae - Site De Saint-Gilles",
    "encodingType": "application/vnd.geo+json",
    "location": {
        "type": "Point",
        "coordinates": [
            48.14523718972358,
            -1.8305352019940178
        ]
    },
    "geom": null,
    "properties": null,
    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(23)/Things",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(23)/HistoricalLocations"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLocations.js",groupTitle:"Locations"},{type:"get",url:"Loras",title:"Get all",version:"1.1.0",name:"GetAllLoras",group:"Loras",description:'<p>Retrieve all Loras.<input id="showGetLoras" type=checkbox> <label for="showGetLoras">Click for Help</label> <span id="contentGetLoras">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Loras",type:"http"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 4,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)",
            "name": "Lora Number 1",
            "description": "Lora Number one",
            "properties": null,
            "deveui": "8CF9574000002D1D",
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)/MultiDatastream",
            "Decoder@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)/Decoder"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Loras(2)",
            "name": "Lora Number 2",
            "description": "Lora Number two",
            "properties": null,
            "deveui": "8CF9574000002D2D",
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(2)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(2)/MultiDatastream",
            "Decoder@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(2)/Decoder"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Loras"}],filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"get",url:"Loras(:id)",title:"Get one",version:"1.1.0",name:"GetOneLoras",group:"Loras",description:'<p>Get a specific Lora.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Loras(8CF9574000002D1D)",type:"http"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Loras(8CF9574000002D1D)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)",
    "name": "Lora Number 1",
    "description": "Lora Number one",
    "properties": null,
    "deveui": "8CF9574000002D1D",
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)/MultiDatastream",
    "Decoder@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(1)/Decoder"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : NOTHINGTOFOUND not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"infos",url:"Loras",title:"Infos.",version:"1.1.0",name:"InfosLoras",group:"Loras",description:"<p>Lora is an layer for add observations in sensorThings from LORA sensors, the link with sensor is done by deveui (the unique ID of lora sensor) in things properties</p>",filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"post",url:"Loras",title:"Post Datastream basic",version:"1.1.0",name:"PostLorasDatastream",group:"Loras",description:'<p>Post a new Loras.<input id="showPostLoras" type=checkbox> <label for="showPostLoras">Click for Help</label> <span id="contentPostLoras"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Loras",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "Datastream": {
           "@iot.id": 15
       },
       "Decoder": {
           "@iot.id": 3
       },
       "name": "Lora for datastream",
       "description": "My new Lora Description",
       "deveui": "70b3d5e75e014f06"
   }}' https://sensorthings.geosas.fr/v1.0/Loras`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Loras", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "Datastream": {
           "@iot.id": 15
       },
       "Decoder": {
           "@iot.id": 3
       },
       "name": "Lora for datastream",
       "description": "My new Lora Description",
       "deveui": "70b3d5e75e014f06"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Loras', (headers = { "Content-Type": "application/json" }), (data = :{
       "Datastream": {
           "@iot.id": 15
       },
       "Decoder": {
           "@iot.id": 3
       },
       "name": "Lora for datastream",
       "description": "My new Lora Description",
       "deveui": "70b3d5e75e014f06"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "Datastream": {
        "@iot.id": 15
    },
    "Decoder": {
        "@iot.id": 3
    },
    "name": "Lora for datastream",
    "description": "My new Lora Description",
    "deveui": "70b3d5e75e014f06"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Loras(6)",
    "name": "Lora for datastream",
    "description": "My new Lora Description",
    "properties": null,
    "deveui": "70B3D5E75E014F06",
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(6)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(6)/MultiDatastream",
    "Decoder@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(6)/Decoder"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"post",url:"Loras",title:"Post MultiDatastream basic",version:"1.1.0",name:"PostLorasMultiDatastream",group:"Loras",description:'<p>Post a new Loras.<input id="showPostLoras" type=checkbox> <label for="showPostLoras">Click for Help</label> <span id="contentPostLoras"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Loras",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "Decoder": {
           "@iot.id": 1
       },
       "name": "My new Loras 39",
       "description": "My new Lora Description",
       "deveui": "8cf9574000009L8C"
   }}' https://sensorthings.geosas.fr/v1.0/Loras`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Loras", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "Decoder": {
           "@iot.id": 1
       },
       "name": "My new Loras 39",
       "description": "My new Lora Description",
       "deveui": "8cf9574000009L8C"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Loras', (headers = { "Content-Type": "application/json" }), (data = :{
       "MultiDatastream": {
           "@iot.id": 2
       },
       "Decoder": {
           "@iot.id": 1
       },
       "name": "My new Loras 39",
       "description": "My new Lora Description",
       "deveui": "8cf9574000009L8C"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "MultiDatastream": {
        "@iot.id": 2
    },
    "Decoder": {
        "@iot.id": 1
    },
    "name": "My new Loras 39",
    "description": "My new Lora Description",
    "deveui": "8cf9574000009L8C"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 5,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Loras(5)",
    "name": "My new Loras 39",
    "description": "My new Lora Description",
    "properties": null,
    "deveui": "8CF9574000009L8C",
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(5)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(5)/MultiDatastream",
    "Decoder@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Loras(5)/Decoder"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"post",url:"Loras",title:"Post observation basic",version:"1.1.0",name:"PostLorasObservation",group:"Loras",description:"<p>Post a new Observation in a Lora Thing.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Loras",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "deveui": "8CF9574000002D1D",
       "timestamp": "2021-10-18T14:53:44+02:00",
       "payload_ciphered": null,
       "frame": "010610324200000107103E4900009808"
   }}' https://sensorthings.geosas.fr/v1.0/Loras`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Loras", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "deveui": "8CF9574000002D1D",
       "timestamp": "2021-10-18T14:53:44+02:00",
       "payload_ciphered": null,
       "frame": "010610324200000107103E4900009808"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Loras', (headers = { "Content-Type": "application/json" }), (data = :{
       "deveui": "8CF9574000002D1D",
       "timestamp": "2021-10-18T14:53:44+02:00",
       "payload_ciphered": null,
       "frame": "010610324200000107103E4900009808"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "deveui": "8CF9574000002D1D",
    "timestamp": "2021-10-18T14:53:44+02:00",
    "payload_ciphered": null,
    "frame": "010610324200000107103E4900009808"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 54,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)",
    "phenomenonTime": "\\"2021-10-18T14:53:44+02:00\\"",
    "resultTime": "\\"2021-10-18T14:53:44+02:00\\"",
    "result": [
        18.75,
        16.946,
        null
    ],
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(54)/FeatureOfInterest"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"post",url:"Loras",title:"Post Sort",version:"1.1.0",name:"PostLorasSort",group:"Loras",description:"<p>Post a new Lora Observation Sorted.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Loras",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "data": {
           "Battery": 50,
           "Temperature": 25,
           "moisture": 100
       },
       "deveui": "8cf9574000002d4d",
       "sensor_id": "8cf9574000002d4d",
       "timestamp": "2021-10-15T14:53:44+02:00",
       "payload_ciphered": null
   }}' https://sensorthings.geosas.fr/v1.0/Loras`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Loras", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "data": {
           "Battery": 50,
           "Temperature": 25,
           "moisture": 100
       },
       "deveui": "8cf9574000002d4d",
       "sensor_id": "8cf9574000002d4d",
       "timestamp": "2021-10-15T14:53:44+02:00",
       "payload_ciphered": null
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Loras', (headers = { "Content-Type": "application/json" }), (data = :{
       "data": {
           "Battery": 50,
           "Temperature": 25,
           "moisture": 100
       },
       "deveui": "8cf9574000002d4d",
       "sensor_id": "8cf9574000002d4d",
       "timestamp": "2021-10-15T14:53:44+02:00",
       "payload_ciphered": null
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "data": {
        "Battery": 50,
        "Temperature": 25,
        "moisture": 100
    },
    "deveui": "8cf9574000002d4d",
    "sensor_id": "8cf9574000002d4d",
    "timestamp": "2021-10-15T14:53:44+02:00",
    "payload_ciphered": null
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 55,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)",
    "phenomenonTime": "\\"2021-10-15T14:53:44+02:00\\"",
    "resultTime": "\\"2021-10-15T14:53:44+02:00\\"",
    "result": [
        100,
        25,
        50
    ],
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(55)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocLoras.js",groupTitle:"Loras"},{type:"delete",url:"MultiDatastreams",title:"Delete one",version:"1.1.0",name:"DeleteMultiDatastreams",group:"MultiDatastreams",description:'<p>Delete a MultiDatastream.<input id="showDeleteMultiDatastreams" type=checkbox> <label for="showDeleteMultiDatastreams">Click for Help</label> <span id="contentDeleteMultiDatastreams"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"get",url:"all",title:"MultiDatastreams informations",version:"1.1.0",name:"GetAllFromInfosMultiDatastreams",group:"MultiDatastreams",description:"<p>Get all informations of a MultiDatastreams.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)?$expand=Thing/Locations/FeatureOfInterest,Sensor,ObservedProperties",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)?$expand=Thing/Locations/FeatureOfInterest,Sensor,ObservedProperties"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)?$expand=Thing/Locations/FeatureOfInterest,Sensor,ObservedProperties", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)?$expand=Thing/Locations/FeatureOfInterest,Sensor,ObservedProperties')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)?$expand=Thing/Locations/FeatureOfInterest,Sensor,ObservedProperties"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)",
    "name": "air_quality_readings1",
    "description": "Air quality Number one",
    "unitOfMeasurements": [
        {
            "name": "soil moisture",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/humidity.html"
        },
        {
            "name": "soil temperature",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/temperature.html"
        },
        {
            "name": "battery voltage",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/percentage.html"
        }
    ],
    "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement",
        "Measurement"
    ],
    "observedArea": null,
    "phenomenonTime": "2016-11-18T04:15:15Z/2016-11-18T09:15:15Z",
    "resultTime": "2016-11-18T13:30:30Z/2016-11-18T16:30:30Z",
    "properties": null,
    "Thing": {
        "@iot.id": 12,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(12)",
        "name": "MultiDatastreams SensorWebThing 2",
        "description": "A SensorWeb lora MultiDatastreams Number two",
        "properties": {
            "essai": "8CF9574000002D2D",
            "sensor_id": "zzz8CF9574000002D2D"
        },
        "Locations": [
            {
                "@iot.id": 7,
                "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(7)",
                "name": "UofC (Created new location) for MultiDatastream Number two",
                "description": "Polyclinic Saint Laurent",
                "encodingType": "application/vnd.geo+json",
                "location": {
                    "type": "Point",
                    "coordinates": [
                        "48.139101133693764",
                        "-1.6571222811169917"
                    ]
                },
                "geom": null,
                "properties": null,
                "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(7)/Things",
                "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(7)/HistoricalLocations"
            }
        ],
        "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(12)/HistoricalLocations",
        "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(12)/Datastreams",
        "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(12)/MultiDatastreams"
    },
    "Sensor": {
        "@iot.id": 3,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(3)",
        "name": "PM 3 sensor",
        "description": "PM sensor Number three",
        "encodingType": "application/pdf",
        "metadata": "http://particle-sensor.com/",
        "properties": null,
        "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(3)/Datastreams",
        "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(3)/MultiDatastreams"
    },
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations",
    "ObservedProperties": [
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(11)",
            "name": "battery voltage one",
            "definition": "battery voltage",
            "description": "description",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(11)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(11)/MultiDatastreams"
        },
        {
            "@iot.id": 12,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(12)",
            "name": "soil moisture one",
            "definition": "soil moisture",
            "description": "description",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(12)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(12)/MultiDatastreams"
        }
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"get",url:"Things(15)/MultiDatastreams(:id)",title:"Get from specific Thing",version:"1.1.0",name:"GetAllFromThingMultiDatastreams",group:"MultiDatastreams",description:"<p>Get Multi Datastreams(s) from Thing.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(15)/MultiDatastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(15)/MultiDatastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(15)/MultiDatastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(15)/MultiDatastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(15)/MultiDatastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(8)",
            "name": "air_quality_readings8",
            "description": "Air quality Number height",
            "unitOfMeasurements": [
                {
                    "name": "soil moisture",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/humidity.html"
                },
                {
                    "name": "soil temperature",
                    "symbol": "\xB0",
                    "definition": "http://unitsofmeasure.org/temperature.html"
                },
                {
                    "name": "battery voltage",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/percentage.html"
                }
            ],
            "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
            "multiObservationDataTypes": [
                "Measurement",
                "Measurement",
                "Measurement"
            ],
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(8)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(8)/Sensor",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(8)/Observations",
            "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(8)/ObservedProperties"
        },
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(9)",
            "name": "air_quality_readings9",
            "description": "Air quality Number nine",
            "unitOfMeasurements": [
                {
                    "name": "soil moisture",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/humidity.html"
                },
                {
                    "name": "soil temperature",
                    "symbol": "\xB0",
                    "definition": "http://unitsofmeasure.org/temperature.html"
                },
                {
                    "name": "battery voltage",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/percentage.html"
                }
            ],
            "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
            "multiObservationDataTypes": [
                "Measurement",
                "Measurement",
                "Measurement"
            ],
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(9)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(9)/Sensor",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(9)/Observations",
            "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(9)/ObservedProperties"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"get",url:"MultiDatastreams",title:"Get all",version:"1.1.0",name:"GetAllMultiDatastreams",group:"MultiDatastreams",description:'<p>Retrieve all MultiDatastreams.<input id="showGetMultiDatastreams" type=checkbox> <label for="showGetMultiDatastreams">Click for Help</label> <span id="contentGetMultiDatastreams">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/MultiDatastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/MultiDatastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for Datastream entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>The description of the Datastream entity.</p>"},{group:"Success 200",type:"json",optional:!1,field:"unitOfMeasurements",description:"<p>A JSON array of JSON objects that containing three key-value pairs. The name property presents the full name of the unitOfMeasurement; the symbol property shows the textual form of the unit symbol; and the definition contains the URI defining the unitOfMeasurement. (see Req 42 for the constraints between unitOfMeasurement, multiObservationDataType and result).</p>"},{group:"Success 200",type:"list",optional:!1,field:"observationType",description:"<p>The type of Observation (with unique result type), which is used by the service to encode observations.</p>"},{group:"Success 200",type:"text[]",optional:!1,field:"multiObservationDataTypes",description:"<p>This property defines the observationType of each element of the result of a complex Observation.</p>"},{group:"Success 200",type:"json",optional:!1,field:"observedArea",description:"<p>The spatial bounding box of the spatial extent of all FeatureOfInterests that belong to the Observations associated with this MultiDatastream.</p>"},{group:"Success 200",type:"text",optional:!1,field:"phenomenonTime",description:"<p>The temporal interval of the phenomenon times of all observations belonging to this MultiDatastream.</p>"},{group:"Success 200",type:"text",optional:!1,field:"resultTime",description:"<p>The temporal interval of the result times of all observations belonging to this MultiDatastream.</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Thing",description:"<p>A Thing has zero-to-many MultiDatastream. A MultiDatastream entity SHALL only link to a Thing as a collection of Observations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Sensor",description:"<p>The Observations in a MultiDatastream are performed by one-and-only-one Sensor. One Sensor MAY produce zero-to-many Observations in different MultiDatastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Observations",description:"<p>A MultiDatastream has zero-to-many Observations. One Observation SHALL occur in one-and-only-one MultiDatastream.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"ObservedProperties",description:"<p>The Observations of a MultiDatastream SHALL observe the same ObservedProperties entity set.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Loras",description:"<p>id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"FeatureOfInterest",description:""}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 10,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)",
            "name": "air_quality_readings1",
            "description": "Air quality Number one",
            "unitOfMeasurements": [
                {
                    "name": "soil moisture",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/humidity.html"
                },
                {
                    "name": "soil temperature",
                    "symbol": "\xB0",
                    "definition": "http://unitsofmeasure.org/temperature.html"
                },
                {
                    "name": "battery voltage",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/percentage.html"
                }
            ],
            "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
            "multiObservationDataTypes": [
                "Measurement",
                "Measurement",
                "Measurement"
            ],
            "observedArea": null,
            "phenomenonTime": "2016-11-18T04:15:15Z/2016-11-18T09:15:15Z",
            "resultTime": "2016-11-18T13:30:30Z/2016-11-18T16:30:30Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Sensor",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations",
            "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/ObservedProperties"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(2)",
            "name": "air_quality_readings2",
            "description": "Air quality Number two",
            "unitOfMeasurements": [
                {
                    "name": "soil moisture",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/humidity.html"
                },
                {
                    "name": "soil temperature",
                    "symbol": "\xB0",
                    "definition": "http://unitsofmeasure.org/temperature.html"
                },
                {
                    "name": "battery voltage",
                    "symbol": "%",
                    "definition": "http://unitsofmeasure.org/percentage.html"
                }
            ],
            "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
            "multiObservationDataTypes": [
                "Measurement",
                "Measurement",
                "Measurement"
            ],
            "observedArea": null,
            "phenomenonTime": "2016-11-18T02:15:15Z/2016-11-18T05:15:15Z",
            "resultTime": "2016-11-18T13:30:30Z/2016-11-18T15:30:30Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(2)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(2)/Sensor",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(2)/Observations",
            "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(2)/ObservedProperties"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"get",url:"MultiDatastreams(:id)",title:"Get one",version:"1.1.0",name:"GetOneMultiDatastreams",group:"MultiDatastreams",description:'<p>Get a specific Multi Datastreams.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)",
    "name": "air_quality_readings1",
    "description": "Air quality Number one",
    "unitOfMeasurements": [
        {
            "name": "soil moisture",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/humidity.html"
        },
        {
            "name": "soil temperature",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/temperature.html"
        },
        {
            "name": "battery voltage",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/percentage.html"
        }
    ],
    "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement",
        "Measurement"
    ],
    "observedArea": null,
    "phenomenonTime": "2016-11-18T04:15:15Z/2016-11-18T09:15:15Z",
    "resultTime": "2016-11-18T13:30:30Z/2016-11-18T16:30:30Z",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Sensor",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations",
    "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/ObservedProperties"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"infos",url:"MultiDatastreams",title:"infos",version:"1.1.0",name:"InfosMultiDatastreams",group:"MultiDatastreams",description:'<p>MultiDatastream entity is an extension to handle complex observations when the result is an array.<br><img src="./assets/multi.jpg" alt="MultiDatastream"></br>multi-datastream constraints</br></br>The size and the order of each element of a MultiDatastream\u2019s unitOfMeasurements array (i.e., MultiDatastream(id)/unitOfMeasurements) SHALL match the size and the order of each element of the related ObservedProperties collection (i.e., MultiDatastreams(id)/ObservedProperties).</br></br>The size and the order of each element of a MultiDatastream\u2019s unitOfMeasurements array (i.e., MultiDatastreams(id)/unitOfMeasurements) SHALL match the size and the order of each element of all related Observations\u2019 result (i.e., MultiDatastreams(id)/Observations?$select=result).</br></br>The size and the order of each element of a MultiDatastream\u2019s unitOfMeasurements array (i.e., MultiDatastreams(id)/unitOfMeasurements) SHALL match the size and the order of each element of the MultiDatastream\u2019s multiObservationDataTypes array (i.e., MultiDatastreams(id)/multiObservationDataTypes).</br></br> When a complex result\u2019s element does not have a unit of measurement (e.g., a OM_TruthObservation type), the corresponding unitOfMeasurement element SHALL have null values.  <a href="https://docs.ogc.org/is/18-088/18-088.html#multidatastream-extension" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"patch",url:"MultiDatastreams",title:"Patch one",version:"1.1.0",name:"PatchMultiDatastreams",group:"MultiDatastreams",description:'<p>Patch a MultiDatastream.<input id="showPatchMultiDatastreams" type=checkbox> <label for="showPatchMultiDatastreams">Click for Help</label> <span id="contentPatchMultiDatastreams"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "description": "Modification of the description"
   }}' https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "description": "Modification of the description"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)', (headers = { "Content-Type": "application/json" }), (data = :{
       "description": "Modification of the description"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "description": "Modification of the description"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 13,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)",
    "name": "Air quality readings MultiDatastreams 31",
    "description": "Modification of the description",
    "unitOfMeasurements": [
        {
            "name": "humidity 32",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Temperature 33",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/Sensor",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/Observations",
    "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/ObservedProperties"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"post",url:"MultiDatastreams",title:"Post with existing Thing And Sensor",version:"1.1.0",name:"PostExistingThingMultiDatastreams",group:"MultiDatastreams",description:'<p>Post a new MultiDatastreams.<input id="showPostMultiDatastreams" type=checkbox> <label for="showPostMultiDatastreams">Click for Help</label> <span id="contentPostMultiDatastreams"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 15",
       "Thing": {
           "@iot.id": 2
       },
       "Sensor": {
           "@iot.id": 1
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "humidity 16",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Temperature 17",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 18",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 19",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ]
   }}' https://sensorthings.geosas.fr/v1.0/MultiDatastreams`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 15",
       "Thing": {
           "@iot.id": 2
       },
       "Sensor": {
           "@iot.id": 1
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "humidity 16",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Temperature 17",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 18",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 19",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/MultiDatastreams', (headers = { "Content-Type": "application/json" }), (data = :{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 15",
       "Thing": {
           "@iot.id": 2
       },
       "Sensor": {
           "@iot.id": 1
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "humidity 16",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Temperature 17",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 18",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 19",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"text",optional:!1,field:"name",description:""},{group:"Parameter",type:"text",optional:!0,field:"description",description:""},{group:"Parameter",type:"json",optional:!1,field:"unitOfMeasurements",description:""},{group:"Parameter",type:"list",optional:!1,field:"observationType",description:""},{group:"Parameter",type:"text[]",optional:!0,field:"multiObservationDataTypes",description:""},{group:"Parameter",type:"json",optional:!0,field:"observedArea",description:""},{group:"Parameter",type:"text",optional:!0,field:"phenomenonTime",description:""},{group:"Parameter",type:"text",optional:!0,field:"resultTime",description:""},{group:"Parameter",type:"json",optional:!0,field:"properties",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Thing",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Sensor",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Observations",description:""},{group:"Parameter",type:"relation",optional:!0,field:"ObservedProperties",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Loras",description:""},{group:"Parameter",type:"relation",optional:!0,field:"FeatureOfInterest",description:""}]},examples:[{title:"Request-Example:",content:`{
    "description": "Air quality readings",
    "name": "Air quality readings MultiDatastreams 15",
    "Thing": {
        "@iot.id": 2
    },
    "Sensor": {
        "@iot.id": 1
    },
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "unitOfMeasurements": [
        {
            "symbol": "%",
            "name": "humidity 16",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Temperature 17",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "ObservedProperties": [
        {
            "name": "humidity 18",
            "definition": "humidity",
            "description": "valeur en pourcentage du taux d'humidity de l'air"
        },
        {
            "name": "Temperature 19",
            "definition": "Temperature",
            "description": "valeur en degr\xE9 de la Temperature de l'air"
        }
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 11,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(11)",
    "name": "Air quality readings MultiDatastreams 15",
    "description": "Air quality readings",
    "unitOfMeasurements": [
        {
            "name": "humidity 16",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Temperature 17",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(11)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(11)/Sensor",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(11)/Observations",
    "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(11)/ObservedProperties"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"post",url:"MultiDatastreams",title:"Post with default FOI",version:"1.1.0",name:"PostMultiDatastreamsFOI",group:"MultiDatastreams",description:"<p>Post a new MultiDatastreams with default FOI</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 31",
       "Thing": {
           "@iot.id": 2
       },
       "Sensor": {
           "@iot.id": 1
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "humidity 32",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Temperature 33",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 34",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 35",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ],
       "FeaturesOfInterest": {
           "@iot.id": 2
       }
   }}' https://sensorthings.geosas.fr/v1.0/MultiDatastreams`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 31",
       "Thing": {
           "@iot.id": 2
       },
       "Sensor": {
           "@iot.id": 1
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "humidity 32",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Temperature 33",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 34",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 35",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ],
       "FeaturesOfInterest": {
           "@iot.id": 2
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/MultiDatastreams', (headers = { "Content-Type": "application/json" }), (data = :{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 31",
       "Thing": {
           "@iot.id": 2
       },
       "Sensor": {
           "@iot.id": 1
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "humidity 32",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Temperature 33",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 34",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 35",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ],
       "FeaturesOfInterest": {
           "@iot.id": 2
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "description": "Air quality readings",
    "name": "Air quality readings MultiDatastreams 31",
    "Thing": {
        "@iot.id": 2
    },
    "Sensor": {
        "@iot.id": 1
    },
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "unitOfMeasurements": [
        {
            "symbol": "%",
            "name": "humidity 32",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Temperature 33",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "ObservedProperties": [
        {
            "name": "humidity 34",
            "definition": "humidity",
            "description": "valeur en pourcentage du taux d'humidity de l'air"
        },
        {
            "name": "Temperature 35",
            "definition": "Temperature",
            "description": "valeur en degr\xE9 de la Temperature de l'air"
        }
    ],
    "FeaturesOfInterest": {
        "@iot.id": 2
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 13,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)",
    "name": "Air quality readings MultiDatastreams 31",
    "description": "Air quality readings",
    "unitOfMeasurements": [
        {
            "name": "humidity 32",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Temperature 33",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/Sensor",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/Observations",
    "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(13)/ObservedProperties"
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"post",url:"MultiDatastreams",title:"Post With Thing and Sensor",version:"1.1.0",name:"PostThingSensorMultiDatastreams",group:"MultiDatastreams",description:'<p>Post a new Multi Datastream With New Thing and Sensor.  <a href="https://docs.ogc.org/is/18-088/18-088.html#create-related-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 20",
       "Thing": {
           "description": "A New SensorWeb thing",
           "name": "\\"SensorWebThing Thing 21",
           "properties": {
               "organization": "Mozilla",
               "owner": "Mozilla"
           }
       },
       "Sensor": {
           "name": "DHT72",
           "description": "DHT72 soil temperature 22",
           "encodingType": "application/pdf",
           "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT72.pdf"
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "Soil soil humidity 23",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Soil soil temperature 24",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 25",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 26",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ]
   }}' https://sensorthings.geosas.fr/v1.0/MultiDatastreams`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 20",
       "Thing": {
           "description": "A New SensorWeb thing",
           "name": "\\"SensorWebThing Thing 21",
           "properties": {
               "organization": "Mozilla",
               "owner": "Mozilla"
           }
       },
       "Sensor": {
           "name": "DHT72",
           "description": "DHT72 soil temperature 22",
           "encodingType": "application/pdf",
           "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT72.pdf"
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "Soil soil humidity 23",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Soil soil temperature 24",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 25",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 26",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/MultiDatastreams', (headers = { "Content-Type": "application/json" }), (data = :{
       "description": "Air quality readings",
       "name": "Air quality readings MultiDatastreams 20",
       "Thing": {
           "description": "A New SensorWeb thing",
           "name": "\\"SensorWebThing Thing 21",
           "properties": {
               "organization": "Mozilla",
               "owner": "Mozilla"
           }
       },
       "Sensor": {
           "name": "DHT72",
           "description": "DHT72 soil temperature 22",
           "encodingType": "application/pdf",
           "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT72.pdf"
       },
       "multiObservationDataTypes": [
           "Measurement",
           "Measurement"
       ],
       "unitOfMeasurements": [
           {
               "symbol": "%",
               "name": "Soil soil humidity 23",
               "definition": "http://unitsofmeasure.org/ucum.html"
           },
           {
               "name": "Soil soil temperature 24",
               "symbol": "\xB0",
               "definition": "http://unitsofmeasure.org/blank.html"
           }
       ],
       "ObservedProperties": [
           {
               "name": "humidity 25",
               "definition": "humidity",
               "description": "valeur en pourcentage du taux d'humidity de l'air"
           },
           {
               "name": "Temperature 26",
               "definition": "Temperature",
               "description": "valeur en degr\xE9 de la Temperature de l'air"
           }
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "description": "Air quality readings",
    "name": "Air quality readings MultiDatastreams 20",
    "Thing": {
        "description": "A New SensorWeb thing",
        "name": "\\"SensorWebThing Thing 21",
        "properties": {
            "organization": "Mozilla",
            "owner": "Mozilla"
        }
    },
    "Sensor": {
        "name": "DHT72",
        "description": "DHT72 soil temperature 22",
        "encodingType": "application/pdf",
        "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT72.pdf"
    },
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "unitOfMeasurements": [
        {
            "symbol": "%",
            "name": "Soil soil humidity 23",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Soil soil temperature 24",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "ObservedProperties": [
        {
            "name": "humidity 25",
            "definition": "humidity",
            "description": "valeur en pourcentage du taux d'humidity de l'air"
        },
        {
            "name": "Temperature 26",
            "definition": "Temperature",
            "description": "valeur en degr\xE9 de la Temperature de l'air"
        }
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 12,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(12)",
    "name": "Air quality readings MultiDatastreams 20",
    "description": "Air quality readings",
    "unitOfMeasurements": [
        {
            "name": "Soil soil humidity 23",
            "symbol": "%",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        {
            "name": "Soil soil temperature 24",
            "symbol": "\xB0",
            "definition": "http://unitsofmeasure.org/blank.html"
        }
    ],
    "observationType": "http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation",
    "multiObservationDataTypes": [
        "Measurement",
        "Measurement"
    ],
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(12)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(12)/Sensor",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(12)/Observations",
    "ObservedProperties@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(12)/ObservedProperties"
}`,type:"json"}]},filename:"test/apiDocs/apiDocMultiDatastreams.js",groupTitle:"MultiDatastreams"},{type:"delete",url:"Observations",title:"Delete one",version:"1.1.0",name:"DeleteObservations",group:"Observations",description:'<p>Delete a Observation.<input id="showDeleteObservations" type=checkbox> <label for="showDeleteObservations">Click for Help</label> <span id="contentDeleteObservations"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(25)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/Observations(25)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(25)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/Observations(25)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Observations",title:"Get all",version:"1.1.0",name:"GetAllObservations",group:"Observations",description:'<p>Retrieve all Observations.<input id="showGetObservations" type=checkbox> <label for="showGetObservations">Click for Help</label> <span id="contentGetObservations">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"date",optional:!1,field:"phenomenonTime",description:"<p>The time instant or period of when the Observation happens.</br> Note: Many resource-constrained sensing devices do not have a clock. As a result, a client may omit phenonmenonTime when POST new Observations, even though phenonmenonTime is a mandatory property. When a SensorThings service receives a POST Observations without phenonmenonTime, the service SHALL assign the current server time to the value of the phenomenonTime.</p>"},{group:"Success 200",type:"number",optional:!1,field:"result",description:"<p>The estimated value of an ObservedProperty from the Observation. Any (depends on the observationType defined in the associated Datastream or MultiDatastream)</p>"},{group:"Success 200",type:"date",optional:!1,field:"resultTime",description:"<p>The time of the Observation\u2019s result was generated.</br>Note: Many resource-constrained sensing devices do not have a clock. As a result, a client may omit resultTime when POST new Observations, even though resultTime is a mandatory property. When a SensorThings service receives a POST Observations without resultTime, the service SHALL assign a null value to the resultTime.</p>"},{group:"Success 200",type:"json",optional:!1,field:"resultQuality",description:"<p>Describes the quality of the result.</p>"},{group:"Success 200",type:"date",optional:!1,field:"validTime",description:"<p>The time period during which the result may be used.</p>"},{group:"Success 200",type:"json",optional:!1,field:"parameters",description:"<p>Key-value pairs showing the environmental conditions during measurement.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Datastream",description:"<p>A Datastream can have zero-to-many Observations. One Observation SHALL occur in one-and-only-one Datastream.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastream",description:"<p>A MultiDatastream can have zero-to-many Observations. One Observation SHALL occur in one-and-only-one MultiDatastream.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"FeatureOfInterest",description:"<p>An Observation observes on one-and-only-one FeatureOfInterest. One FeatureOfInterest could be observed by zero-to-many Observations.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 20,
    "value": [
        {
            "@iot.id": 3,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": 8.75,
            "resultTime": "2016-11-18T02:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T12:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/FeatureOfInterest"
        },
        {
            "@iot.id": 11,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)",
            "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
            "result": [
                35,
                35,
                35
            ],
            "resultTime": "2016-11-18T13:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(11)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Datastreams(10)/Observations",title:"Get all from Datastream",version:"1.1.0",name:"GetDatastreamsObservations",group:"Observations",description:"<p>Get Observations from Datastream.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T18:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(8)/FeatureOfInterest"
        },
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 45,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(10)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Observations(:id)",title:"Get and expands Datastreams",version:"1.1.0",name:"GetExpandDatastreamsObservations",group:"Observations",description:"<p>Get a specific Observation and expand Datastream.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(1)?$expand=Datastream",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations(1)?$expand=Datastream"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(1)?$expand=Datastream", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations(1)?$expand=Datastream')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations(1)?$expand=Datastream"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(1)",
    "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
    "result": 17.5,
    "resultTime": "2016-11-18T07:15:15.79+01:00",
    "resultQuality": null,
    "validTime": "2016-11-18T19:30:30.79+01:00",
    "parameters": null,
    "Datastream": {
        "@iot.id": 1,
        "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)",
        "name": "air_quality_readings1",
        "description": "Air quality Number one",
        "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
        "unitOfMeasurement": {
            "name": "PM 2.5 Particulates (ug/m3)",
            "symbol": "\u03BCg/m\xB3",
            "definition": "http://unitsofmeasure.org/ucum.html"
        },
        "observedArea": null,
        "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
        "resultTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
        "properties": null,
        "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Thing",
        "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Sensor",
        "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/ObservedProperty",
        "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations"
    },
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(1)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(1)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Observations(:id)",title:"Get one",version:"1.1.0",name:"GetOneObservations",group:"Observations",description:'<p>Get a specific Observations.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(3)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations(3)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(3)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations(3)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations(3)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 3,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)",
    "phenomenonTime": "2016-11-18T02:15:15.79+01:00",
    "result": 8.75,
    "resultTime": "2016-11-18T02:15:15.79+01:00",
    "resultQuality": null,
    "validTime": "2016-11-18T12:30:30.79+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(3)/FeatureOfInterest"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 3 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Observations",title:"with Standard Results",version:"1.1.0",name:"GetSelectObservationsMultiStandardResult",group:"Observations",description:"<p>Retrieve observations with multi result.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(14)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations(14)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(14)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations(14)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations(14)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 14,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)",
    "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
    "result": [
        8.75,
        11.666666666666666,
        17.5
    ],
    "resultTime": "2016-11-18T12:30:30.79+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:37.059565+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Observations",title:"with Multi keyValue Results",version:"1.1.0",name:"GetSelectObservationsMultikeyValueResult",group:"Observations",description:"<p>Retrieve observations with keyValue result.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(14)?$valuesKeys=true",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations(14)?$valuesKeys=true"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(14)?$valuesKeys=true", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations(14)?$valuesKeys=true')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations(14)?$valuesKeys=true"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 14,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)",
    "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
    "result": {
        "soil moisture": 8.75,
        "battery voltage": 17.5,
        "soil temperature": 11.666666666666666
    },
    "resultTime": "2016-11-18T12:30:30.79+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:37.059565+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(14)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Get",title:"with Split Results",version:"1.1.0",name:"GetSelectObservationsSplitResultAll",group:"Observations",description:"<p>Retrieve observations with splitted multi result.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult=all",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult=all"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult=all", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult=all')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult=all"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 13,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)",
            "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
            "resultTime": "2016-11-18T16:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "soil moisture": 8.75,
            "soil temperature": 17.5,
            "battery voltage": 8.75,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)/FeatureOfInterest"
        },
        {
            "@iot.id": 15,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)",
            "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
            "resultTime": "2016-11-18T13:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "soil moisture": 17.5,
            "soil temperature": 17.5,
            "battery voltage": 35,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Get",title:"with Split Result Property",version:"1.1.0",name:"GetSelectObservationsSplitResultTemp",group:"Observations",description:"<p>Retrieve observations with splitted Temperature result.</p>",examples:[{title:"http",content:'https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult="soil temperature"',type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult="soil temperature""',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult="soil temperature"", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult="soil temperature"')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:'https://sensorthings.geosas.fr/v1.0/MultiDatastreams(1)/Observations?$splitResult="soil temperature"'}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 3,
    "value": [
        {
            "@iot.id": 13,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)",
            "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
            "resultTime": "2016-11-18T16:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "result": 17.5,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(13)/FeatureOfInterest"
        },
        {
            "@iot.id": 15,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)",
            "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
            "resultTime": "2016-11-18T13:30:30.79+01:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:37.059565+01:00",
            "parameters": null,
            "result": 17.5,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(15)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"get",url:"Observations(:id)",title:"Get with Multi Select",version:"1.1.0",name:"GetSelectPhenomenonTimeObservations",group:"Observations",description:"<p>Retrieve specified phenomenonTime, result for a specific Observations.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(1)?$select=phenomenonTime,result",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations(1)?$select=phenomenonTime,result"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(1)?$select=phenomenonTime,result", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations(1)?$select=phenomenonTime,result')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations(1)?$select=phenomenonTime,result"}],success:{examples:[{title:"Success-Response:",content:`{
    "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
    "result": 17.5
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"infos",url:"Observations",title:"infos",version:"1.1.0",name:"InfosObservations",group:"Observations",description:'<p>An Observation is the act of measuring or otherwise determining the value of a property.<br>An Observation in SensorThings represents a single Sensor reading of an ObservedProperty.<br>A physical device, a Sensor, sends Observations to a specified Datastream.<br>An Observation requires a FeatureOfInterest entity, if none is provided in the request, the Location of the Thing associated with the Datastream, will be assigned to the new Observation as the FeatureOfInterest  <a href="https://docs.ogc.org/is/18-088/18-088.html#observation" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"patch",url:"Observations",title:"Patch with Datastream",version:"1.1.0",name:"PatchDatastreamObservations",group:"Observations",description:'<p>Patch an Observation with Datastream.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(25)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "phenomenonTime": "2016-11-18T11:04:15.790Z",
       "resultTime": "2016-11-18T11:04:15.790Z",
       "result": 20.4,
       "Datastream": {
           "@iot.id": 6
       }
   }}' https://sensorthings.geosas.fr/v1.0/Observations(25)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(25)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "phenomenonTime": "2016-11-18T11:04:15.790Z",
       "resultTime": "2016-11-18T11:04:15.790Z",
       "result": 20.4,
       "Datastream": {
           "@iot.id": 6
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Observations(25)', (headers = { "Content-Type": "application/json" }), (data = :{
       "phenomenonTime": "2016-11-18T11:04:15.790Z",
       "resultTime": "2016-11-18T11:04:15.790Z",
       "result": 20.4,
       "Datastream": {
           "@iot.id": 6
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "phenomenonTime": "2016-11-18T11:04:15.790Z",
    "resultTime": "2016-11-18T11:04:15.790Z",
    "result": 20.4,
    "Datastream": {
        "@iot.id": 6
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 25,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)",
    "phenomenonTime": "2016-11-18T12:04:15.79+01:00",
    "result": 20.4,
    "resultTime": "2016-11-18T12:04:15.79+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:38.616+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"patch",url:"Observations",title:"Patch one",version:"1.1.0",name:"PatchObservations",group:"Observations",description:'<p>Patch a Observation.<input id="showPatchObservations" type=checkbox> <label for="showPatchObservations">Click for Help</label> <span id="contentPatchObservations"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations(25)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "phenomenonTime": "2016-11-18T11:04:15.790Z",
       "resultTime": "2016-11-18T11:04:15.790Z"
   }}' https://sensorthings.geosas.fr/v1.0/Observations(25)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations(25)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "phenomenonTime": "2016-11-18T11:04:15.790Z",
       "resultTime": "2016-11-18T11:04:15.790Z"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Observations(25)', (headers = { "Content-Type": "application/json" }), (data = :{
       "phenomenonTime": "2016-11-18T11:04:15.790Z",
       "resultTime": "2016-11-18T11:04:15.790Z"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "phenomenonTime": "2016-11-18T11:04:15.790Z",
    "resultTime": "2016-11-18T11:04:15.790Z"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 25,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)",
    "phenomenonTime": "2016-11-18T12:04:15.79+01:00",
    "result": [
        10.1,
        10.2,
        10.3
    ],
    "resultTime": "2016-11-18T12:04:15.79+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:38.577+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(25)/FeatureOfInterest"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"post",url:"Observations",title:"Post from Datastream",version:"1.1.0",name:"PostDatastreamsObservations",group:"Observations",description:'<p>POST Observation with existing Datastream.  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 23
   }}' https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 23
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations', (headers = { "Content-Type": "application/json" }), (data = :{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 23
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "phenomenonTime": "2017-02-07T18:02:00.000Z",
    "resultTime": "2017-02-07T18:02:05.000Z",
    "result": 23
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 23,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)",
    "phenomenonTime": "2017-02-07T19:02:00+01:00",
    "result": 23,
    "resultTime": "2017-02-07T19:02:05+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:38.497289+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(23)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"post",url:"Observations",title:"Post with FOI",version:"1.1.0",name:"PostNewFoiObservations",group:"Observations",description:'<p>Post a new Observation.  <a href="https://docs.ogc.org/is/18-088/18-088.html#create-related-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "FeatureOfInterest": {
           "name": "Au Comptoir V\xE9nitien (Created new location)",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "feature": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       },
       "Datastream": {
           "@iot.id": 6
       }
   }}' https://sensorthings.geosas.fr/v1.0/Observations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "FeatureOfInterest": {
           "name": "Au Comptoir V\xE9nitien (Created new location)",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "feature": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       },
       "Datastream": {
           "@iot.id": 6
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Observations', (headers = { "Content-Type": "application/json" }), (data = :{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "FeatureOfInterest": {
           "name": "Au Comptoir V\xE9nitien (Created new location)",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "feature": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       },
       "Datastream": {
           "@iot.id": 6
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "phenomenonTime": "2017-02-07T18:02:00.000Z",
    "resultTime": "2017-02-07T18:02:05.000Z",
    "result": 21.6,
    "FeatureOfInterest": {
        "name": "Au Comptoir V\xE9nitien (Created new location)",
        "description": "Au Comptoir V\xE9nitien",
        "encodingType": "application/vnd.geo+json",
        "feature": {
            "type": "Point",
            "coordinates": [
                48.11829243294942,
                -1.717928984533772
            ]
        }
    },
    "Datastream": {
        "@iot.id": 6
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 22,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)",
    "phenomenonTime": "2017-02-07T19:02:00+01:00",
    "result": 21.6,
    "resultTime": "2017-02-07T19:02:05+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:38.481838+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(22)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"post",url:"Observations",title:"Post with existing FOI",version:"1.1.0",name:"PostObservations",group:"Observations",description:'<p>Post a new Observations.<input id="showPostObservations" type=checkbox> <label for="showPostObservations">Click for Help</label> <span id="contentPostObservations"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "Datastream": {
           "@iot.id": 10
       }
   }}' https://sensorthings.geosas.fr/v1.0/Observations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "Datastream": {
           "@iot.id": 10
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Observations', (headers = { "Content-Type": "application/json" }), (data = :{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "Datastream": {
           "@iot.id": 10
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"date",optional:!1,field:"phenomenonTime",description:""},{group:"Parameter",type:"number",optional:!0,field:"result",description:""},{group:"Parameter",type:"date",optional:!1,field:"resultTime",description:""},{group:"Parameter",type:"json",optional:!0,field:"resultQuality",description:""},{group:"Parameter",type:"date",optional:!0,field:"validTime",description:""},{group:"Parameter",type:"json",optional:!0,field:"parameters",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Datastream",description:""},{group:"Parameter",type:"relation",optional:!0,field:"MultiDatastream",description:""},{group:"Parameter",type:"relation",optional:!0,field:"FeatureOfInterest",description:""}]},examples:[{title:"Request-Example:",content:`{
    "phenomenonTime": "2017-02-07T18:02:00.000Z",
    "resultTime": "2017-02-07T18:02:05.000Z",
    "result": 21.6,
    "Datastream": {
        "@iot.id": 10
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 21,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)",
    "phenomenonTime": "2017-02-07T19:02:00+01:00",
    "result": 21.6,
    "resultTime": "2017-02-07T19:02:05+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:38.452429+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(21)/FeatureOfInterest"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"post",url:"Observations",title:"Post from Datastream and FOI",version:"1.1.0",name:"PostObservationsDatastreamsFOIObservations",group:"Observations",description:'<p>POST Observation with existing Datastream.  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "FeatureOfInterest": {
           "name": "Au Comptoir V\xE9nitien [7]",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "feature": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       }
   }}' https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "FeatureOfInterest": {
           "name": "Au Comptoir V\xE9nitien [7]",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "feature": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations', (headers = { "Content-Type": "application/json" }), (data = :{
       "phenomenonTime": "2017-02-07T18:02:00.000Z",
       "resultTime": "2017-02-07T18:02:05.000Z",
       "result": 21.6,
       "FeatureOfInterest": {
           "name": "Au Comptoir V\xE9nitien [7]",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "feature": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "phenomenonTime": "2017-02-07T18:02:00.000Z",
    "resultTime": "2017-02-07T18:02:05.000Z",
    "result": 21.6,
    "FeatureOfInterest": {
        "name": "Au Comptoir V\xE9nitien [7]",
        "description": "Au Comptoir V\xE9nitien",
        "encodingType": "application/vnd.geo+json",
        "feature": {
            "type": "Point",
            "coordinates": [
                48.11829243294942,
                -1.717928984533772
            ]
        }
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 24,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)",
    "phenomenonTime": "2017-02-07T19:02:00+01:00",
    "result": 21.6,
    "resultTime": "2017-02-07T19:02:05+01:00",
    "resultQuality": null,
    "validTime": "2023-11-23T20:52:38.517062+01:00",
    "parameters": null,
    "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/Datastream",
    "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/MultiDatastream",
    "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(24)/FeatureOfInterest"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservations.js",groupTitle:"Observations"},{type:"delete",url:"ObservedProperties",title:"Delete one",version:"1.1.0",name:"DeleteObservedProperties",group:"ObservedProperties",description:'<p>Delete a ObservedProperty.<input id="showDeleteObservedProperties" type=checkbox> <label for="showDeleteObservedProperties">Click for Help</label> <span id="contentDeleteObservedProperties"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"get",url:"ObservedProperties",title:"Get all",version:"1.1.0",name:"GetAllObservedProperties",group:"ObservedProperties",description:'<p>Retrieve all ObservedProperties.<input id="showGetObservedProperties" type=checkbox> <label for="showGetObservedProperties">Click for Help</label> <span id="contentGetObservedProperties">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/ObservedProperties"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/ObservedProperties')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for ObservedProperty entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"definition",description:"<p>The URI of the ObservedProperty. Dereferencing this URI SHOULD result in a representation of the definition of the ObservedProperty.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>A description about the ObservedProperty.</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:"<p>The Observations of a Datastream observe the same ObservedProperty. The Observations of different Datastreams MAY observe the same ObservedProperty.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastreams",description:"<p>The Observations of a MultiDatastreams observe the same ObservedProperty. The Observations of different MultiDatastreams MAY observe the same ObservedProperty.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 49,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)",
            "name": "PM 1 observedProperties",
            "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
            "description": "PM something Number one",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)/MultiDatastreams"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)",
            "name": "PM 2 observedProperties",
            "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
            "description": "PM something Number two",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/ObservedProperties"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"get",url:"Datastream(10/ObservedProperties",title:"Get from a specific Datastream",version:"1.1.0",name:"GetDatastreamObservedProperties",group:"ObservedProperties",description:"<p>Get observed Property from Datastream</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 8,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)",
            "name": "PM 8 observedProperties",
            "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
            "description": "PM something Number height",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(8)/MultiDatastreams"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"get",url:"ObservedProperties(:id)",title:"Get Expand Datastreams",version:"1.1.0",name:"GetExpandDatastreamsObservedProperties",group:"ObservedProperties",description:"<p>`Get a specific observed Property and expand Datastreams.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$expand=Datastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$expand=Datastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$expand=Datastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$expand=Datastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$expand=Datastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)",
    "name": "PM 1 observedProperties",
    "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
    "description": "PM something Number one",
    "properties": null,
    "Datastreams": [
        {
            "@iot.id": 6,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(6)",
            "name": "air_quality_readings6",
            "description": "Air quality Number six",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2017-02-07T19:02:00Z/2017-02-07T19:02:00Z",
            "resultTime": "2017-02-07T19:02:05Z/2017-02-07T19:02:05Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(6)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(6)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(6)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(6)/Observations"
        },
        {
            "@iot.id": 7,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(7)",
            "name": "air_quality_readings7",
            "description": "Air quality Number seven",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(7)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(7)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(7)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(7)/Observations"
        },
        "..."
    ],
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"get",url:"ObservedProperties(:id)",title:"Get one",version:"1.1.0",name:"GetOneObservedProperties",group:"ObservedProperties",description:'<p>Get a specific observed Property.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 2,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)",
    "name": "PM 2 observedProperties",
    "definition": "https://airnow.gov/index.cfm?action=aqibasics.particle",
    "description": "PM something Number two",
    "properties": null,
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(2)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 2 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"get",url:"ObservedProperties(:id)",title:"Get from a Select",version:"1.1.0",name:"GetSelectDescriptionObservedProperties",group:"ObservedProperties",description:"<p>Retrieve specified properties for a specific observed Property.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$select=description",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$select=description"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$select=description", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$select=description')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(1)?$select=description"}],success:{examples:[{title:"Success-Response:",content:`{
    "description": "PM something Number one"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"infos",url:"ObservedProperties",title:"infos",version:"1.1.0",name:"InfosObservedProperties",group:"ObservedProperties",description:'<p>An ObservedProperty specifies the phenomenon of an Observation.  <a href="https://docs.ogc.org/is/18-088/18-088.html#observedproperty" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"patch",url:"ObservedProperties",title:"Patch one",version:"1.1.0",name:"PatchObservedProperties",group:"ObservedProperties",description:'<p>Patch a ObservedProperty.<input id="showPatchObservedProperties" type=checkbox> <label for="showPatchObservedProperties">Click for Help</label> <span id="contentPatchObservedProperties"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "name": "New PM 2.5 ObservedProperties 38"
   }}' https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "New PM 2.5 ObservedProperties 38"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "New PM 2.5 ObservedProperties 38"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "New PM 2.5 ObservedProperties 38"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 50,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)",
    "name": "New PM 2.5 ObservedProperties 38",
    "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature",
    "description": "The degree or intensity of heat present in the area",
    "properties": null,
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"post",url:"ObservedProperties",title:"Post basic",version:"1.1.0",name:"PostObservedProperties",group:"ObservedProperties",description:'<p>Post a new ObservedProperties.<input id="showPostObservedProperties" type=checkbox> <label for="showPostObservedProperties">Click for Help</label> <span id="contentPostObservedProperties"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/ObservedProperties",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Area ObservedProperties 37",
       "description": "The degree or intensity of heat present in the area",
       "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
   }}' https://sensorthings.geosas.fr/v1.0/ObservedProperties`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/ObservedProperties", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Area ObservedProperties 37",
       "description": "The degree or intensity of heat present in the area",
       "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/ObservedProperties', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Area ObservedProperties 37",
       "description": "The degree or intensity of heat present in the area",
       "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"text",optional:!1,field:"name",description:""},{group:"Parameter",type:"text",optional:!1,field:"definition",description:""},{group:"Parameter",type:"text",optional:!1,field:"description",description:""},{group:"Parameter",type:"json",optional:!0,field:"properties",description:""},{group:"Parameter",type:"relation",optional:!0,field:"Datastreams",description:""},{group:"Parameter",type:"relation",optional:!0,field:"MultiDatastreams",description:""}]},examples:[{title:"Request-Example:",content:`{
    "name": "Area ObservedProperties 37",
    "description": "The degree or intensity of heat present in the area",
    "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 50,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)",
    "name": "Area ObservedProperties 37",
    "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature",
    "description": "The degree or intensity of heat present in the area",
    "properties": null,
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/ObservedProperties(50)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocObservedProperties.js",groupTitle:"ObservedProperties"},{type:"infos",url:"/Odata",title:"Infos",version:"1.1.0",name:"InfosOdata",group:"Odata",description:'<p>The use of query options allows refining the requests to help get the required information about the SensorThings entities in an easy and efficient manner. Each of the listed query options are available for each SensorThings entity, however the options for each may differ.<br> SensorThings query options can be categorized to two different groups.<br> -  The first group specifies the properties to be returned by the request. $expand and $select are query options of this group.<br> -  The second group is limiting, filtering, or re-ordering the request results. This group contains $orderby, $top, $skip, $count, and $filter  <a href="http://docs.opengeospatial.org/is/15-078r6/15-078r6.html#19" target="_blank">[reference]</a></p>',filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Observations",title:"count",version:"1.1.0",name:"OdataCountWithSkiTop",group:"Odata",description:'<p>Use count.The $count system query option with a value of true specifies that the total count of items within a collection matching the request SHALL be returned along with the result. A $count query option with a value of false (or not specified) hints that the service SHALL not return a count. </br></br>The service SHALL return an HTTP Status code of 400 Bad Request if a value other than true or false is specified. </br></br>The $count system query option SHALL ignore any $top, $skip, or $expand query options, and SHALL return the total count of results across all pages including only those results matching any specified $filter. Clients should be aware that the count returned inline may not exactly equal the actual number of items returned, due to latency between calculating the count and enumerating the last value or due to inexact calculations on the service.  <a href="http://docs.opengeospatial.org/is/15-078r6/15-078r6.html#53" target="_blank">[reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$skip=3&$top=2&$count=true",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$skip=3&$top=2&$count=true"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$skip=3&$top=2&$count=true", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$skip=3&$top=2&$count=true')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$skip=3&$top=2&$count=true"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 76,
    "@iot.nextLink": "https://sensorthings.geosas.fr/v1.0/Observations?$count=true&$top=2&$skip=5",
    "@iot.prevLink": "https://sensorthings.geosas.fr/v1.0/Observations?$count=true&$top=2&$skip=1",
    "value": [
        {
            "@iot.id": 59,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)",
            "phenomenonTime": "1999-04-04T04:00:00+02:00",
            "result": 0.3,
            "resultTime": "1999-04-04T04:00:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)/FeatureOfInterest"
        },
        {
            "@iot.id": 60,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)",
            "phenomenonTime": "1999-05-05T05:00:00+02:00",
            "result": 0.4,
            "resultTime": "1999-05-05T05:00:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Things(:id)",title:"Expand",version:"1.1.0",name:"OdataExpand",group:"Odata",description:'<p>Use $expand query option to request inline information for related entities of the requested entity collection.The $expand system query option indicates the related entities to be represented inline. The value of the $expand query option SHALL be a comma separated list of navigation property names. Additionally, each navigation property can be followed by a forward slash and another navigation property to enable identifying a multi-level relationship.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
    "name": "SensorWebThing 6",
    "description": "A SensorWeb thing Number six",
    "properties": {
        "owner": "Mozilla version six",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/HistoricalLocations",
    "Datastreams": [
        [
            null,
            null,
            "..."
        ],
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)",
            "name": "air_quality_readings9",
            "description": "Air quality Number nine",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Observations"
        },
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)",
            "name": "air_quality_readings10",
            "description": "Water Temperature of Bow river",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "Degrees Fahrenheit",
                "symbol": "degF",
                "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:00Z",
            "resultTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:05Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"
        }
    ],
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"things(:id)",title:"expand with inner select",version:"1.1.0",name:"OdataExpandSelect",group:"Odata",description:'<p>Get datastream and expand obvervations with complex select.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams?$expand=Observations($select=phenomenonTime,result;$orderby=phenomenonTime desc;$top=10)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams?$expand=Observations($select=phenomenonTime,result;$orderby=phenomenonTime desc;$top=10)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams?$expand=Observations($select=phenomenonTime,result;$orderby=phenomenonTime desc;$top=10)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams?$expand=Observations($select=phenomenonTime,result;$orderby=phenomenonTime desc;$top=10)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams?$expand=Observations($select=phenomenonTime,result;$orderby=phenomenonTime desc;$top=10)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 14,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)",
            "name": "air_quality_readings1",
            "description": "Air quality Number one",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "1999-01-01T01:00:00Z/2017-02-13T11:22:00Z",
            "resultTime": "1999-01-01T01:00:00Z/2017-02-13T11:22:00Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/ObservedProperty",
            "Observations": [
                {
                    "phenomenonTime": "2017-02-13T11:22:00+01:00",
                    "result": 93
                },
                {
                    "phenomenonTime": "2017-02-13T11:22:00+01:00",
                    "result": 92
                },
                {
                    "phenomenonTime": "2017-01-13T11:21:00+01:00",
                    "result": 91
                },
                {
                    "phenomenonTime": "2017-01-13T11:20:00+01:00",
                    "result": 90
                },
                {
                    "phenomenonTime": "2016-11-18T07:15:15.79+01:00",
                    "result": 17.5
                },
                {
                    "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
                    "result": 11.666666666666666
                },
                {
                    "phenomenonTime": "2000-05-07T10:30:00+02:00",
                    "result": 13.5
                },
                {
                    "phenomenonTime": "2000-05-04T10:20:00+02:00",
                    "result": 13.4
                },
                {
                    "phenomenonTime": "2000-05-03T10:10:00+02:00",
                    "result": 13.3
                },
                {
                    "phenomenonTime": "2000-05-02T10:00:00+02:00",
                    "result": 13.2
                }
            ]
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)",
            "name": "air_quality_readings2",
            "description": "Air quality Number two",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
            "resultTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/ObservedProperty",
            "Observations": [
                {
                    "phenomenonTime": "2016-11-18T04:15:15.79+01:00",
                    "result": 11.666666666666666
                },
                {
                    "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
                    "result": 17.5
                }
            ]
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Things(:id)",title:"Expand sub Entity",version:"1.1.0",name:"OdataExpandSub",group:"Odata",description:'<p>$expand comma separated list of sub-entity names or sub-entity names separated by forward slash.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams/Sensor",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams/Sensor"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams/Sensor", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams/Sensor')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Datastreams/Sensor"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
    "name": "SensorWebThing 6",
    "description": "A SensorWeb thing Number six",
    "properties": {
        "owner": "Mozilla version six",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/HistoricalLocations",
    "Datastreams": [
        [
            null,
            null,
            "..."
        ],
        {
            "@iot.id": 9,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)",
            "name": "air_quality_readings9",
            "description": "Air quality Number nine",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "/",
            "resultTime": "/",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Thing",
            "Sensor": {
                "@iot.id": 5,
                "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)",
                "name": "PM 5 sensor",
                "description": "PM sensor Number five",
                "encodingType": "application/pdf",
                "metadata": "http://particle-sensor.com/",
                "properties": null,
                "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)/Datastreams",
                "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)/MultiDatastreams"
            },
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(9)/Observations"
        },
        {
            "@iot.id": 10,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)",
            "name": "air_quality_readings10",
            "description": "Water Temperature of Bow river",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "Degrees Fahrenheit",
                "symbol": "degF",
                "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeFahrenheit"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:00Z",
            "resultTime": "2016-11-18T03:15:15Z/2017-02-07T19:02:05Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Thing",
            "Sensor": {
                "@iot.id": 5,
                "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)",
                "name": "PM 5 sensor",
                "description": "PM sensor Number five",
                "encodingType": "application/pdf",
                "metadata": "http://particle-sensor.com/",
                "properties": null,
                "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)/Datastreams",
                "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(5)/MultiDatastreams"
            },
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(10)/Observations"
        }
    ],
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"things(:id)",title:"expand with empty result",version:"1.1.0",name:"OdataExpandSubEmpty",group:"Odata",description:'<p>Get list of locations and return list if is empty.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)?$expand=MultiDatastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(1)?$expand=MultiDatastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)?$expand=MultiDatastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(1)?$expand=MultiDatastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(1)?$expand=MultiDatastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(1)",
    "name": "SensorWebThing 1",
    "description": "A SensorThingWeb thing Number one",
    "properties": {
        "owner": "Mozilla version one",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams",
    "MultiDatastreams": []
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"things(:id)",title:"expand with inner filter",version:"1.1.0",name:"OdataExpandWithFilter",group:"Odata",description:'<p>Get datastream and expand obvervations with filter.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Datastreams(2)?$expand=Observations($filter=result eq 17.5)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Datastreams(2)?$expand=Observations($filter=result eq 17.5)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Datastreams(2)?$expand=Observations($filter=result eq 17.5)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Datastreams(2)?$expand=Observations($filter=result eq 17.5)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Datastreams(2)?$expand=Observations($filter=result eq 17.5)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 2,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)",
    "name": "air_quality_readings2",
    "description": "Air quality Number two",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
    "resultTime": "2016-11-18T03:15:15Z/2016-11-18T04:15:15Z",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(2)/ObservedProperty",
    "Observations": [
        {
            "@iot.id": 7,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)",
            "phenomenonTime": "2016-11-18T03:15:15.79+01:00",
            "result": 17.5,
            "resultTime": "2016-11-18T03:15:15.79+01:00",
            "resultQuality": null,
            "validTime": "2016-11-18T19:30:30.79+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(7)/FeatureOfInterest"
        }
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Thing",title:"filter date greater than and less than",version:"1.1.0",name:"OdataFilterDateGtAndLt",group:"Odata",description:'<p>Use filter gt with date  <a href="https://docs.ogc.org/is/18-088/18-088.html#requirement-request-data-filter" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=phenomenonTime gt '2021-01-01' and phenomenonTime lt '2021-10-16'",type:"http"},{title:"curl",content:`curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$filter=phenomenonTime gt '2021-01-01' and phenomenonTime lt '2021-10-16'"`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$filter=phenomenonTime gt '2021-01-01' and phenomenonTime lt '2021-10-16'", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$filter=phenomenonTime gt '2021-01-01' and phenomenonTime lt '2021-10-16'')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$filter=phenomenonTime gt '2021-01-01' and phenomenonTime lt '2021-10-16'"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 25,
    "value": [
        {
            "@iot.id": 148,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(148)",
            "phenomenonTime": "2021-09-17T14:56:36+02:00",
            "result": {
                "ce": null,
                "gf": null,
                "id": 24,
                "pds": "0",
                "bloc": null,
                "date": null,
                "hour": null,
                "annee": "2010",
                "cadre": null,
                "stade": null,
                "ab_cor": "0",
                "bm_cor": "0",
                "pds_gf": null,
                "id_site": "ED",
                "nbr_vdt": "0",
                "modalite": "ATE_2",
                "stockage": null,
                "incomplet": null,
                "programme": "AF",
                "protocole": "FTM",
                "souscadre": null,
                "code_taxon": null,
                "occupation": "GC",
                "repetition": "3",
                "code_methode": "F",
                "commentaires": null,
                "modalite_bis": "Control",
                "code_parcelle": null,
                "cedeterterrain": null,
                "detercodetaxon": null,
                "phrase_fiche_p1": null,
                "phrase_fiche_p2": null
            },
            "resultTime": "2021-09-17T14:56:36+02:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:41.741562+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(148)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(148)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(148)/FeatureOfInterest"
        },
        {
            "@iot.id": 125,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(125)",
            "phenomenonTime": "2021-09-17T14:56:36+02:00",
            "result": {
                "ce": null,
                "gf": "ANS",
                "id": 1,
                "pds": "3.3822",
                "bloc": null,
                "date": null,
                "hour": null,
                "annee": "2020",
                "cadre": null,
                "stade": "AD",
                "ab_cor": "1",
                "bm_cor": "3.3822",
                "pds_gf": null,
                "id_site": "ED",
                "nbr_vdt": "1",
                "modalite": "ATE_1",
                "stockage": null,
                "incomplet": "COMPLET",
                "programme": "AF",
                "protocole": "FTM",
                "souscadre": "2",
                "code_taxon": "NLL",
                "occupation": "GC",
                "repetition": "2",
                "code_methode": "F",
                "commentaires": null,
                "modalite_bis": "Control",
                "code_parcelle": null,
                "cedeterterrain": null,
                "detercodetaxon": "NLL",
                "phrase_fiche_p1": null,
                "phrase_fiche_p2": null
            },
            "resultTime": "2021-09-17T14:56:36+02:00",
            "resultQuality": null,
            "validTime": "2023-11-23T20:52:41.741562+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(125)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(125)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(125)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Things",title:"OrderBy",version:"1.1.0",name:"OdataOrderBy",group:"Odata",description:'<p>Use $orderby query option to sort the response based on properties of requested entity in ascending (asc) or descending (desc) order.The $orderby system query option specifies the order in which items are returned from the service. The value of the $orderby system query option SHALL contain a comma-separated list of expressions whose primitive result values are used to sort the items. A special case of such an expression is a property path terminating on a primitive property. </br></br> The expression MAY include the suffix asc for ascending or desc for descending, separated from the property name by one or more spaces. If asc or desc is not specified, the service SHALL order by the specified property in ascending order. </br></br> Null values SHALL come before non-null values when sorting in ascending order and after non-null values when sorting in descending order. </br></br>Items SHALL be sorted by the result values of the first expression, and then items with the same value for the first expression SHALL be sorted by the result value of the second expression, and so on.  <a href="https://docs.ogc.org/is/18-088/18-088.html#orderby" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$orderby=name desc",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$orderby=name desc"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$orderby=name desc", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$orderby=name desc')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$orderby=name desc"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 24,
    "value": [
        {
            "@iot.id": 23,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(23)",
            "name": "Temperature Monitoring Things 3",
            "description": "Sensor (POST with existing Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/MultiDatastreams"
        },
        {
            "@iot.id": 22,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(22)",
            "name": "Temperature Monitoring Things 2",
            "description": "Things (POST with new Location)",
            "properties": {
                "Case Used": "Radiation shield",
                "Deployment Condition": "Deployed in a third floor balcony"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Things(:id)",title:"Select",version:"1.1.0",name:"OdataSelect",group:"Odata",description:'<p>Retrieve specified properties for a specific Things.The $select system query option requests the service to return only the properties explicitly requested by the client. The value of a $select query option SHALL be a comma-separated list of selection clauses. Each selection clause SHALL be a property name (including navigation property names). In the response, the service SHALL return the specified content, if available, along with any available expanded navigation properties.  <a href="https://docs.ogc.org/is/18-088/18-088.html#select4" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)?$select=description",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(1)?$select=description"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)?$select=description", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(1)?$select=description')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(1)?$select=description"}],success:{examples:[{title:"Success-Response:",content:`{
    "description": "A SensorThingWeb thing Number one"
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Things(:id)",title:"Select multi",version:"1.1.0",name:"OdataSelectMulti",group:"Odata",description:'<p>Retrieve name and description for Things.  <a href="https://docs.ogc.org/is/18-088/18-088.html#select4" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$select=name,description",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$select=name,description"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$select=name,description", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$select=name,description')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$select=name,description"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 24,
    "value": [
        {
            "name": "SensorWebThing 1",
            "description": "A SensorThingWeb thing Number one"
        },
        {
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Observations",title:"Skip",version:"1.1.0",name:"OdataSkip",group:"Odata",description:'<p>Use $skip to specify the number of entities that should be skipped before returning the requested entities.The $skip system query option specifies the number for the items of the queried collection that SHALL be excluded from the result. The value of $skip system query option SHALL be a non-negative integer n. The service SHALL return items starting at position n+1. </br></br>Where $top and $skip are used together, $skip SHALL be applied before $top, regardless of the order in which they appear in the request. </br></br>If no unique ordering is imposed through an $orderby query option, the service SHALL impose a stable ordering across requests that include $skip.  <a href="https://docs.ogc.org/is/18-088/18-088.html#skip" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$skip=3",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$skip=3"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$skip=3", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$skip=3')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$skip=3"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 73,
    "value": [
        {
            "@iot.id": 59,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)",
            "phenomenonTime": "1999-04-04T04:00:00+02:00",
            "result": 0.3,
            "resultTime": "1999-04-04T04:00:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(59)/FeatureOfInterest"
        },
        {
            "@iot.id": 60,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)",
            "phenomenonTime": "1999-05-05T05:00:00+02:00",
            "result": 0.4,
            "resultTime": "1999-05-05T05:00:00+02:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(60)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"get",url:"Observations",title:"Top",version:"1.1.0",name:"OdataTop",group:"Odata",description:'<p>Use $top query option to limit the number of requested entities.The $top system query option specifies the limit on the number of items returned from a collection of entities. The value of the $top system query option SHALL be a non-negative integer n. The service SHALL return the number of available items up to but not greater than the specified value n. </br></br>If no unique ordering is imposed through an $orderby query option, the service SHALL impose a stable ordering across requests that include $top. </br></br>In addition, if the $top value exceeds the service-driven pagination limitation (i.e., the largest number of entities the service can return in a single response), the $top query option SHALL be discarded and the server-side pagination limitation SHALL be imposed.  <a href="https://docs.ogc.org/is/18-088/18-088.html#top" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Observations?$top=5",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Observations?$top=5"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Observations?$top=5", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Observations?$top=5')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Observations?$top=5"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 5,
    "@iot.nextLink": "https://sensorthings.geosas.fr/v1.0/Observations?$top=5&$skip=5",
    "value": [
        {
            "@iot.id": 56,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)",
            "phenomenonTime": "1999-01-01T01:00:00+01:00",
            "result": 0,
            "resultTime": "1999-01-01T01:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(56)/FeatureOfInterest"
        },
        {
            "@iot.id": 57,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)",
            "phenomenonTime": "1999-02-02T02:00:00+01:00",
            "result": 0.1,
            "resultTime": "1999-02-02T02:00:00+01:00",
            "resultQuality": {
                "date": "23/11/2023 20:52:41",
                "import": "simple.csv"
            },
            "validTime": "2023-11-23T20:52:41.328043+01:00",
            "parameters": null,
            "Datastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/Datastream",
            "MultiDatastream@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/MultiDatastream",
            "FeatureOfInterest@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Observations(57)/FeatureOfInterest"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocOdata.js",groupTitle:"Odata"},{type:"infos",url:"/SensorThings",title:"Infos",version:"1.1.0",name:"InfosSensorThings",group:"SensorThings",description:'<p><img src="./assets/logo.png" alt="Stean"></br> <span class="tabLogo">SensorThings Enhanced API Node</span></br></br> <a class="tabLogo" href="https://github.com/Mario-35/STEAN" target="_blank"><img src="./assets/github.png" alt="github"></a><span class="tabLink">https://github.com/Mario-35/STEAN</span></br></br> <a class="tabLogo" href="mailto: sensorThings@inrae.fr"><img src="./assets/mail.png" alt="mail"></a><span class="tabLink">sensorThings@inrae.fr</span></br></br> <a class="tabLogo" href="https://sensorthings.wiki.inrae.fr" target="_blank"><img src="./assets/wiki.png" alt="wiki"></a><span class="tabLink">https://sensorthings.wiki.inrae.fr</span></br></br> <div class="text"> <p>Welcome to API documentation for the Open Geospatial Consortium (OGC) SensorThings international standard. This API provides an open and unified way to interconnect Internet of Things (IoT) devices over the Web as well as interfaces to interact with and analyze their observations. Part 1:Sensing was released in 2016 and allowed management and reception of observations or measurements made by IoT sensors. Part 2: Tasking Core, which was released in 2019, provides a mechanism to tell the sensor/actuator what to do.</p> </br> <p>The foundation of the SensorThings API are the relational connections between entities in the system and the way they are used to model systems in the real world. The entities have a natural relationship which enables any IoT sensing device from any vertical industry to be modelled in the system. An IoT device or system is modelled as a Thing. A Thing has a Location with one or more Datastreams. Each Datastream observes one ObservedProperty with one Sensor and has many Observations from the Sensor. Each Observation read by the Sensor observes one particular FeatureOfInterest. Together, these relationships provide a flexible standard way to describe and model any sensing system. It allows SensorThings to be a single data exchange system for heterogeneous devices within any organization.</p> </div></br><img src="./assets/entities.png" alt="Model">  <a href="https://docs.ogc.org/is/18-088/18-088.html" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiSensorThings.js",groupTitle:"SensorThings"},{type:"get",url:"resource",title:"result",version:"1.1.0",name:"resultSensorThings",group:"SensorThings",description:'<p>Stean use differents type of result : List of some code values used for identifying observations result types defined in the Datastream or MultiDatastream observationType.</b> <table> <thead> <tr> <th style="width: 20%">Type (O&amp;M 2.0)</th> <th style="width: 70%">Value Code</th> <th style="width: 10%">Result</th> </tr> </thead> <tbody> <tr> <td>OM_CategoryObservation</td> <td>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_CategoryObservation</td> <td>URI</td> </tr> <tr> <td>OM_CountObservation</td> <td>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_CountObservation</td> <td>integer</td> </tr> <tr> <td>OM_Measurement</td> <td>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement</td> <td>double</td> <tr> <td>OM_complexObservation</td> <td>http://www.opengis.net/def/observation-type/ogc-om/2.0/om_complex-observation</td> <td>array of double</td> </tr> <tr> <td>OM_Observation</td> <td>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Observation</td> <td>any</td> </tr> <tr> <td>OM_TruthObservation</td> <td>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation</td> <td>boolean</td> </tr> <tr> <td>OM_SWEArrayObservation</td> <td>http://www.opengis.net/def/observation-type/ogc-omxml/2.0/swe-array-observation</td> <td>array</td> </tr> </tbody> </table>  <a href="https://docs.ogc.org/is/18-088/18-088.html#resource-path" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/",type:"http"}],success:{fields:{"Success 200":[{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:"<p>Get all datastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastreams",description:"<p>Get all multidatastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"FeaturesOfInterest",description:"<p>Get all features of interest.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"HistoricalLocation",description:"<p>Get all historical locations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Locations",description:"<p>Get all locations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Observations",description:"<p>Get all observations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"ObservedProperties",description:"<p>Get all observed property.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Sensors",description:"<p>Get all sensors.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Things",description:"<p>Get all things.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Loras",description:"<p>Get all loras.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Decoders",description:"<p>Get all decoders.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "value": [
        {
            "name": "Datastreams",
            "url": "http://127.0.0.1:62337/test/v1.0/Datastreams"
        },
        {
            "name": "MultiDatastreams",
            "url": "http://127.0.0.1:62337/test/v1.0/MultiDatastreams"
        },
        {
            "name": "FeaturesOfInterest",
            "url": "http://127.0.0.1:62337/test/v1.0/FeaturesOfInterest"
        },
        {
            "name": "HistoricalLocations",
            "url": "http://127.0.0.1:62337/test/v1.0/HistoricalLocations"
        },
        {
            "name": "Locations",
            "url": "http://127.0.0.1:62337/test/v1.0/Locations"
        },
        {
            "name": "Observations",
            "url": "http://127.0.0.1:62337/test/v1.0/Observations"
        },
        {
            "name": "ObservedProperties",
            "url": "http://127.0.0.1:62337/test/v1.0/ObservedProperties"
        },
        {
            "name": "Sensors",
            "url": "http://127.0.0.1:62337/test/v1.0/Sensors"
        },
        {
            "name": "Things",
            "url": "http://127.0.0.1:62337/test/v1.0/Things"
        },
        {
            "name": "Loras",
            "url": "http://127.0.0.1:62337/test/v1.0/Loras"
        },
        {
            "name": "Decoders",
            "url": "http://127.0.0.1:62337/test/v1.0/Decoders"
        }
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/"}],filename:"test/apiDocs/apiSensorThings.js",groupTitle:"SensorThings"},{type:"get",url:"resource",title:"path",version:"1.1.0",name:"rootSensorThings",group:"SensorThings",description:'<p>Access to all resources begins at the base resource path.  <a href="https://docs.ogc.org/is/18-088/18-088.html#resource-path" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/",type:"http"}],success:{fields:{"Success 200":[{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:"<p>Get all datastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastreams",description:"<p>Get all multidatastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"FeaturesOfInterest",description:"<p>Get all features of interest.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"HistoricalLocation",description:"<p>Get all historical locations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Locations",description:"<p>Get all locations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Observations",description:"<p>Get all observations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"ObservedProperties",description:"<p>Get all observed property.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Sensors",description:"<p>Get all sensors.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Things",description:"<p>Get all things.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Loras",description:"<p>Get all loras.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Decoders",description:"<p>Get all decoders.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "value": [
        {
            "name": "Datastreams",
            "url": "http://127.0.0.1:62333/test/v1.0/Datastreams"
        },
        {
            "name": "MultiDatastreams",
            "url": "http://127.0.0.1:62333/test/v1.0/MultiDatastreams"
        },
        {
            "name": "FeaturesOfInterest",
            "url": "http://127.0.0.1:62333/test/v1.0/FeaturesOfInterest"
        },
        {
            "name": "HistoricalLocations",
            "url": "http://127.0.0.1:62333/test/v1.0/HistoricalLocations"
        },
        {
            "name": "Locations",
            "url": "http://127.0.0.1:62333/test/v1.0/Locations"
        },
        {
            "name": "Observations",
            "url": "http://127.0.0.1:62333/test/v1.0/Observations"
        },
        {
            "name": "ObservedProperties",
            "url": "http://127.0.0.1:62333/test/v1.0/ObservedProperties"
        },
        {
            "name": "Sensors",
            "url": "http://127.0.0.1:62333/test/v1.0/Sensors"
        },
        {
            "name": "Things",
            "url": "http://127.0.0.1:62333/test/v1.0/Things"
        },
        {
            "name": "Loras",
            "url": "http://127.0.0.1:62333/test/v1.0/Loras"
        },
        {
            "name": "Decoders",
            "url": "http://127.0.0.1:62333/test/v1.0/Decoders"
        }
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/"}],filename:"test/apiDocs/apiSensorThings.js",groupTitle:"SensorThings"},{type:"get",url:"resource",title:"path",version:"1.1.0",name:"rootSensorThings",group:"SensorThings",description:'<p>Access to all resources begins at the base resource path.  <a href="https://docs.ogc.org/is/18-088/18-088.html#resource-path" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/",type:"http"}],success:{fields:{"Success 200":[{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:"<p>Get all datastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastreams",description:"<p>Get all multidatastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"FeaturesOfInterest",description:"<p>Get all features of interest.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"HistoricalLocation",description:"<p>Get all historical locations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Locations",description:"<p>Get all locations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Observations",description:"<p>Get all observations.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"ObservedProperties",description:"<p>Get all observed property.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Sensors",description:"<p>Get all sensors.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Things",description:"<p>Get all things.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Loras",description:"<p>Get all loras.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Decoders",description:"<p>Get all decoders.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "value": [
        {
            "name": "Datastreams",
            "url": "http://127.0.0.1:62335/test/v1.0/Datastreams"
        },
        {
            "name": "MultiDatastreams",
            "url": "http://127.0.0.1:62335/test/v1.0/MultiDatastreams"
        },
        {
            "name": "FeaturesOfInterest",
            "url": "http://127.0.0.1:62335/test/v1.0/FeaturesOfInterest"
        },
        {
            "name": "HistoricalLocations",
            "url": "http://127.0.0.1:62335/test/v1.0/HistoricalLocations"
        },
        {
            "name": "Locations",
            "url": "http://127.0.0.1:62335/test/v1.0/Locations"
        },
        {
            "name": "Observations",
            "url": "http://127.0.0.1:62335/test/v1.0/Observations"
        },
        {
            "name": "ObservedProperties",
            "url": "http://127.0.0.1:62335/test/v1.0/ObservedProperties"
        },
        {
            "name": "Sensors",
            "url": "http://127.0.0.1:62335/test/v1.0/Sensors"
        },
        {
            "name": "Things",
            "url": "http://127.0.0.1:62335/test/v1.0/Things"
        },
        {
            "name": "Loras",
            "url": "http://127.0.0.1:62335/test/v1.0/Loras"
        },
        {
            "name": "Decoders",
            "url": "http://127.0.0.1:62335/test/v1.0/Decoders"
        }
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/"}],filename:"test/apiDocs/apiSensorThings.js",groupTitle:"SensorThings"},{type:"delete",url:"Sensors",title:"Delete one",version:"1.1.0",name:"DeleteSensors",group:"Sensors",description:'<p>Delete a Sensor.<input id="showDeleteSensors" type=checkbox> <label for="showDeleteSensors">Click for Help</label> <span id="contentDeleteSensors"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Sensors(12)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/Sensors(12)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Sensors(12)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/Sensors(12)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : "
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"get",url:"Sensors",title:"Get all",version:"1.1.0",name:"GetAllSensors",group:"Sensors",description:'<p>Retrieve all Sensors.<input id="showGetSensors" type=checkbox> <label for="showGetSensors">Click for Help</label> <span id="contentGetSensors">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Sensors",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Sensors"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Sensors", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Sensors')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>Is the system-generated identifier of an entity. id is unique among the entities of the same entity type in a SensorThings service.</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for Sensor entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>The description of the Sensor entity.</p>"},{group:"Success 200",type:"list",optional:!1,field:"encodingType",description:"<p>The encoding type of the metadata property. Its value is one of the ValueCode enumeration (see Table 15 for the available ValueCode).</p>"},{group:"Success 200",type:"text",optional:!1,field:"metadata",description:"<p>The detailed description of the Sensor or system. The metadata type is defined by encodingType.</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:"<p>The Observations of a Datastream are measured with the same Sensor. One Sensor MAY produce zero-to-many Observations in different Datastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastreams",description:"<p>The Observations of a MultiDatastreams are measured with the same Sensor. One Sensor MAY produce zero-to-many Observations in different MultiDatastreams.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 11,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)",
            "name": "PM 1 sensor",
            "description": "PM sensor Number one",
            "encodingType": "application/pdf",
            "metadata": "http://particle-sensor.com/",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)/MultiDatastreams"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(2)",
            "name": "PM 2 sensor",
            "description": "PM sensor Number two",
            "encodingType": "application/pdf",
            "metadata": "http://particle-sensor.com/",
            "properties": null,
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(2)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(2)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Sensors"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"get",url:"Sensors(:id)",title:"Get Expands",version:"1.1.0",name:"GetExpandDatastreamsSensors",group:"Sensors",description:"<p>Get a specific Sensor and expand Datastreams.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Sensors(1)?$expand=Datastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Sensors(1)?$expand=Datastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Sensors(1)?$expand=Datastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Sensors(1)?$expand=Datastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Sensors(1)?$expand=Datastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)",
    "name": "PM 1 sensor",
    "description": "PM sensor Number one",
    "encodingType": "application/pdf",
    "metadata": "http://particle-sensor.com/",
    "properties": null,
    "Datastreams": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)",
            "name": "air_quality_readings1",
            "description": "Air quality Number one",
            "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
            "unitOfMeasurement": {
                "name": "PM 2.5 Particulates (ug/m3)",
                "symbol": "\u03BCg/m\xB3",
                "definition": "http://unitsofmeasure.org/ucum.html"
            },
            "observedArea": null,
            "phenomenonTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
            "resultTime": "2016-11-18T03:15:15Z/2016-11-18T07:15:15Z",
            "properties": null,
            "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Thing",
            "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Sensor",
            "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/ObservedProperty",
            "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(1)/Observations"
        },
        null,
        "..."
    ],
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"get",url:"Sensors(:id)",title:"Get one",version:"1.1.0",name:"GetOneSensors",group:"Sensors",description:'<p>Get a specific Sensor.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Sensors(1)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Sensors(1)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Sensors(1)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Sensors(1)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Sensors(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)",
    "name": "PM 1 sensor",
    "description": "PM sensor Number one",
    "encodingType": "application/pdf",
    "metadata": "http://particle-sensor.com/",
    "properties": null,
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(1)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"get",url:"Sensors(:id)",title:"Get Select",version:"1.1.0",name:"GetSelectDescriptionSensors",group:"Sensors",description:"<p>Retrieve specified properties for a specific Sensor.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Sensors(1)?$select=description",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Sensors(1)?$select=description"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Sensors(1)?$select=description", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Sensors(1)?$select=description')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Sensors(1)?$select=description"}],success:{examples:[{title:"Success-Response:",content:`{
    "description": "PM sensor Number one"
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"infos",url:"Sensors",title:"infos",version:"1.1.0",name:"InfosSensors",group:"Sensors",description:'<p>A Sensor is an instrument that observes a property or phenomenon with the goal of producing an estimate of the value of the property3.  <a href="https://docs.ogc.org/is/18-088/18-088.html#sensor" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"patch",url:"Sensors",title:"Get one",version:"1.1.0",name:"PatchSensors",group:"Sensors",description:"<p>Patch a sensor.</p>",parameter:{fields:{Parameter:[{group:"Parameter",type:"String",optional:!0,field:"name",description:"<p>name of the Thing.</p>"},{group:"Parameter",type:"String",optional:!1,field:"description",description:"<p>description of the Thing.</p>"},{group:"Parameter",type:"ValueCode",optional:!1,field:"encodingType",description:"<p>encodingType ValueCode.</p>"},{group:"Parameter",type:"metadata",optional:!1,field:"metadata",description:"<p>depending on the value of the encodingType</p>"}]}},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 12,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(12)",
    "name": "PM25 Sensors 36",
    "description": "This is a new PM 2.5 sensor",
    "encodingType": "application/pdf",
    "metadata": "http://particle-sensor.com/",
    "properties": null,
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(12)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(12)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 9007199254740991"
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"post",url:"Sensors",title:"Post basic",version:"1.1.0",name:"PostSensors",group:"Sensors",description:'<p>Post a new Sensors.<input id="showPostSensors" type=checkbox> <label for="showPostSensors">Click for Help</label> <span id="contentPostSensors"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Sensors",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "description": "PM 2.5 sensor",
       "name": "PM25 Sensors 36",
       "encodingType": "application/pdf",
       "metadata": "http://particle-sensor.com/"
   }}' https://sensorthings.geosas.fr/v1.0/Sensors`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Sensors", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "description": "PM 2.5 sensor",
       "name": "PM25 Sensors 36",
       "encodingType": "application/pdf",
       "metadata": "http://particle-sensor.com/"
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Sensors', (headers = { "Content-Type": "application/json" }), (data = :{
       "description": "PM 2.5 sensor",
       "name": "PM25 Sensors 36",
       "encodingType": "application/pdf",
       "metadata": "http://particle-sensor.com/"
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"String",optional:!0,field:"name",description:"<p>name of the Thing.</p>"},{group:"Parameter",type:"String",optional:!1,field:"description",description:"<p>description of the Thing.</p>"},{group:"Parameter",type:"ValueCode",optional:!1,field:"encodingType",description:"<p>encodingType ValueCode.</p>"},{group:"Parameter",type:"metadata",optional:!1,field:"metadata",description:"<p>depending on the value of the encodingType</p>"}]},examples:[{title:"Request-Example:",content:`{
    "description": "PM 2.5 sensor",
    "name": "PM25 Sensors 36",
    "encodingType": "application/pdf",
    "metadata": "http://particle-sensor.com/"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 12,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Sensors(12)",
    "name": "PM25 Sensors 36",
    "description": "PM 2.5 sensor",
    "encodingType": "application/pdf",
    "metadata": "http://particle-sensor.com/",
    "properties": null,
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(12)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Sensors(12)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocSensors.js",groupTitle:"Sensors"},{type:"delete",url:"Things",title:"Delete one",version:"1.1.0",name:"DeleteThings",group:"Things",description:'<p>Delete a Thing.<input id="showDeleteThings" type=checkbox> <label for="showDeleteThings">Click for Help</label> <span id="contentDeleteThings"></br> A successful DELETE request to an entity\u2019s edit URL deletes the entity. The request body SHOULD be empty. Services SHALL implicitly remove relations to and from an entity when deleting it; clients need not delete the relations explicitly. </br>Services MAY implicitly delete or modify related entities if required by integrity constraints. <table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Delete a Thing entity</td> <td>Delete all the Datastream and HistoricalLocation entities linked to the Thing entity.</td> </tr> <tr> <td>Delete a Location entity</td> <td>Delete all the HistoricalLocation entities linked to the Location entity</td> </tr> <tr> <td>Delete a Datastream entity</td> <td>Delete all the Observation entities linked to the Datastream entity.</td> </tr> <tr> <td>Delete a Sensor entity</td> <td>Delete all the Datastream entities linked to the Sensor entity.</td> </tr> <tr> <td>Delete an ObservedProperty entity</td> <td>Delete all the Datastream entities linked to the ObservedProperty entity.</td> </tr> <tr> <td>Delete an Observation entity</td> <td></td> </tr> <tr> <td>Delete a FeatureOfInterest entity</td> <td>Delete all the Observation entities linked to the FeatureOfInterest entity.</td> </tr> <tr> <td>Delete a HistoricalLocation entity entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_3" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(25)",type:"http"},{title:"curl",content:'curl -DELETE "https://sensorthings.geosas.fr/v1.0/Things(25)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(25)", {
   method: "DELETE"
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.delete('https://sensorthings.geosas.fr/v1.0/Things(25)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{examples:[{title:"Success-Response:",content:"{}",type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 0"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things",title:"Get all",version:"1.1.0",name:"GetAllThings",group:"Things",description:'<p>Retrieve all Things.<input id="showGetThings" type=checkbox> <label for="showGetThings">Click for Help</label> <span id="contentGetThings">To address to an entity set, users can simply put the entity set name after the service root URI. The service returns a JSON object with a property of value. The value of the property SHALL be a list of the entities in the specified entity set.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-collection-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],success:{fields:{"Success 200":[{group:"Success 200",type:"number",optional:!1,field:"id",description:"<p>@iot.id</p>"},{group:"Success 200",type:"relation",optional:!1,field:"selfLink",description:"<p>@iot.selfLink</p>"},{group:"Success 200",type:"text",optional:!1,field:"name",description:"<p>A property provides a label for Thing entity, commonly a descriptive name.</p>"},{group:"Success 200",type:"text",optional:!1,field:"description",description:"<p>This is a short description of the corresponding Thing entity.</p>"},{group:"Success 200",type:"json",optional:!1,field:"properties",description:"<p>A JSON Object containing user-annotated properties as key-value pairs.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Locations",description:"<p>The Location entity locates the Thing. Multiple Things MAY be located at the same Location. A Thing MAY not have a Location. A Thing SHOULD have only one Location.</br> However, in some complex use cases, a Thing MAY have more than one Location representations. In such case, the Thing MAY have more than one Locations. These Locations SHALL have different encodingTypes and the encodingTypes SHOULD be in different spaces (e.g., one encodingType in Geometrical space and one encodingType in Topological space).</p>"},{group:"Success 200",type:"relation",optional:!1,field:"HistoricalLocations",description:"<p>A Thing has zero-to-many HistoricalLocations. A HistoricalLocation has one-and-only-one Thing.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"Datastreams",description:"<p>A Thing MAY have zero-to-many Datastreams.</p>"},{group:"Success 200",type:"relation",optional:!1,field:"MultiDatastreams",description:"<p>A Thing MAY have zero-to-many MultiDatastreams.</p>"}]},examples:[{title:"Success-Response:",content:`{
    "@iot.count": 20,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(1)",
            "name": "SensorWebThing 1",
            "description": "A SensorThingWeb thing Number one",
            "properties": {
                "owner": "Mozilla version one",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/MultiDatastreams"
        },
        {
            "@iot.id": 2,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(2)",
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two",
            "properties": {
                "owner": "Mozilla version two",
                "organization": "Mozilla"
            },
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Locations",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/HistoricalLocations",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Datastreams",
            "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/MultiDatastreams"
        },
        "..."
    ]
}`,type:"json"}]},sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things"}],error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get only a property",version:"1.1.0",name:"GetNameThings",group:"Things",description:'<p>Get the name of a specific Thing.Users can address to a property of an entity by specifying the property name after the URI addressing to the entity. The service then returns the value of the specified property. If the property has a complex type value, properties of that value can be addressed by further property name composition.</br>If the property is single-valued and has the null value, the service SHALL respond with 204 No Content. If the property is not available, for example due to permissions, the service SHALL respond with 404 Not Found.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-property-of-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)/name",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(1)/name"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)/name", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(1)/name')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(1)/name"}],success:{examples:[{title:"Success-Response:",content:`{
    "name": "SensorWebThing 1"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 9007199254740991 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get only the value of a property",version:"1.1.0",name:"GetNameValueThings",group:"Things",description:'<p>Get the value of the property of a specific Thing.To address the raw value of a primitive property, clients append a path segment containing the string $value to the property URL.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-value-of-property" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)/name/$value",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(1)/name/$value"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)/name/$value", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(1)/name/$value')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(1)/name/$value"}],success:{examples:[{title:"Success-Response:",content:"'SensorWebThing 1'",type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get one",version:"1.1.0",name:"GetOneThings",group:"Things",description:'<p>Get a specific Thing.Users can address to a specific entity in an entity set by place the unique identifier of the entity between brace symbol \u201C()\u201D and put after the entity set name. The service then returns the entity with all its properties.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-entity" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(1)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(1)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(1)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(1)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(1)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 1,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(1)",
    "name": "SensorWebThing 1",
    "description": "A SensorThingWeb thing Number one",
    "properties": {
        "owner": "Mozilla version one",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "id : 1 not found"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Expand Locations",version:"1.1.0",name:"GetThingsExpand",group:"Things",description:'<p>Get Expand Locations of a specific Thing.The $expand system query option indicates the related entities to be represented inline. The value of the $expand query option SHALL be a comma separated list of navigation property names. Additionally, each navigation property can be followed by a forward slash and another navigation property to enable identifying a multi-level relationship.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/test/v1.0/Things(6)?$expand=Locations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/test/v1.0/Things(6)?$expand=Locations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/test/v1.0/Things(6)?$expand=Locations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/test/v1.0/Things(6)?$expand=Locations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/test/v1.0/Things(6)?$expand=Locations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
    "name": "SensorWebThing 6",
    "description": "A SensorWeb thing Number six",
    "properties": {
        "owner": "Mozilla version six",
        "organization": "Mozilla"
    },
    "Locations": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
            "name": "UofC Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
        }
    ],
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Expand coma separation",version:"1.1.0",name:"GetThingsExpandComaHistorical",group:"Things",description:'<p>Get Expand Locations and Historical Location of a specific Thing..The $expand system query option indicates the related entities to be represented inline. The value of the $expand query option SHALL be a comma separated list of navigation property names. Additionally, each navigation property can be followed by a forward slash and another navigation property to enable identifying a multi-level relationship.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations,HistoricalLocations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations,HistoricalLocations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations,HistoricalLocations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations,HistoricalLocations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations,HistoricalLocations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
    "name": "SensorWebThing 6",
    "description": "A SensorWeb thing Number six",
    "properties": {
        "owner": "Mozilla version six",
        "organization": "Mozilla"
    },
    "Locations": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
            "name": "UofC Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
        }
    ],
    "HistoricalLocations": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)",
            "time": "2023-11-23T20:52:37.059565+01:00",
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Things",
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Locations"
        },
        {
            "@iot.id": 29,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(29)",
            "time": "2014-12-21T08:59:59+01:00",
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(29)/Things",
            "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(29)/Locations"
        }
    ],
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Expand with Select",version:"1.1.0",name:"GetThingsExpandSelect",group:"Things",description:'<p>Get Expand Locations of a specific Thing with a select inside.The $expand system query option indicates the related entities to be represented inline. The value of the $expand query option SHALL be a comma separated list of navigation property names. Additionally, each navigation property can be followed by a forward slash and another navigation property to enable identifying a multi-level relationship.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations($select=location)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations($select=location)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations($select=location)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations($select=location)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations($select=location)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
    "name": "SensorWebThing 6",
    "description": "A SensorWeb thing Number six",
    "properties": {
        "owner": "Mozilla version six",
        "organization": "Mozilla"
    },
    "Locations": [
        {
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            }
        }
    ],
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Expand  slash separation",version:"1.1.0",name:"GetThingsExpandSlashHistorical",group:"Things",description:`<p>Get Expand Locations and it's Historical Location of a specific Thing..The $expand system query option indicates the related entities to be represented inline. The value of the $expand query option SHALL be a comma separated list of navigation property names. Additionally, each navigation property can be followed by a forward slash and another navigation property to enable identifying a multi-level relationship.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>`,examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations/HistoricalLocations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations/HistoricalLocations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations/HistoricalLocations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations/HistoricalLocations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)?$expand=Locations/HistoricalLocations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 6,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(6)",
    "name": "SensorWebThing 6",
    "description": "A SensorWeb thing Number six",
    "properties": {
        "owner": "Mozilla version six",
        "organization": "Mozilla"
    },
    "Locations": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
            "name": "UofC Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
            "HistoricalLocations": [
                {
                    "@iot.id": 1,
                    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)",
                    "time": "2023-11-23T20:52:37.059565+01:00",
                    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Things",
                    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(1)/Locations"
                },
                {
                    "@iot.id": 29,
                    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(29)",
                    "time": "2014-12-21T08:59:59+01:00",
                    "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(29)/Things",
                    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/HistoricalLocations(29)/Locations"
                }
            ]
        }
    ],
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(6)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)/entity(:id)",title:"Get nested resource path",version:"1.1.0",name:"GetThingsNestedPath",group:"Things",description:'<p>Get nested resources of all Things..As users can use navigation properties to link from one entity set to another, users can further extend the resource path with unique identifiers, properties, or links (i.e., Usage 3, 4 and 6).  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-nested-resource-path" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/test/v1.0/Things(2)/Datastreams(5)",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/test/v1.0/Things(2)/Datastreams(5)"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/test/v1.0/Things(2)/Datastreams(5)", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/test/v1.0/Things(2)/Datastreams(5)')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/test/v1.0/Things(2)/Datastreams(5)"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 5,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(5)",
    "name": "air_quality_readings5",
    "description": "Air quality Number five",
    "observationType": "http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement",
    "unitOfMeasurement": {
        "name": "PM 2.5 Particulates (ug/m3)",
        "symbol": "\u03BCg/m\xB3",
        "definition": "http://unitsofmeasure.org/ucum.html"
    },
    "observedArea": null,
    "phenomenonTime": "/",
    "resultTime": "/",
    "properties": null,
    "Thing@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(5)/Thing",
    "Sensor@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(5)/Sensor",
    "ObservedProperty@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(5)/ObservedProperty",
    "Observations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Datastreams(5)/Observations"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get only references",version:"1.1.0",name:"GetThingsRefLinks",group:"Things",description:'<p>Get only references of all Things.As the entities in different entity sets may hold some relationships, users can request the linked entities\u2019 selfLinks by addressing to an association link of an entity. An associationLink can be used to retrieve a reference to an entity or an entity set related to the current entity. Only the selfLinks of related entities are returned when resolving associationLinks.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-associationlink" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things/$ref",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things/$ref"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things/$ref", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things/$ref')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things/$ref"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 20,
    "value": [
        {
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(1)"
        },
        {
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(2)"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Select with @iot.id",version:"1.1.0",name:"GetThingsSelectIot",group:"Things",description:'<p>Get with select with @iot.id.  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,@iot.id",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,@iot.id"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,@iot.id", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,@iot.id')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,@iot.id"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 20,
    "value": [
        {
            "name": "SensorWebThing 1",
            "description": "A SensorThingWeb thing Number one",
            "@iot.id": 1
        },
        {
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two",
            "@iot.id": 2
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Select with navigation link",version:"1.1.0",name:"GetThingsSelectNavLink",group:"Things",description:'<p>Get select with navigation link  <a href="https://docs.ogc.org/is/18-088/18-088.html#expand" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,Datastreams",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,Datastreams"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,Datastreams", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,Datastreams')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things?$select=name,description,Datastreams"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 20,
    "value": [
        {
            "name": "SensorWebThing 1",
            "description": "A SensorThingWeb thing Number one",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(1)/Datastreams"
        },
        {
            "name": "SensorWebThing 2",
            "description": "A SensorThingWeb thing Number two",
            "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(2)/Datastreams"
        },
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"get",url:"Things(:id)",title:"Get Subentity Locations",version:"1.1.0",name:"GetThingsSubentity",group:"Things",description:'<p>Get Subentity Locations of a specific Thing.As the entities in different entity sets may hold some relationships, users can request the linked entities by addressing to a navigation property of an entity. The service then returns one or many entities that hold a certain relationship with the specified entity.  <a href="https://docs.ogc.org/is/18-088/18-088.html#usage-address-navigation-property" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(6)/Locations",type:"http"},{title:"curl",content:'curl -GET "https://sensorthings.geosas.fr/v1.0/Things(6)/Locations"',type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(6)/Locations", {
   method: "GET",
   headers: {
       "Content-Type": "application/json",
   },
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.get('https://sensorthings.geosas.fr/v1.0/Things(6)/Locations')
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/Things(6)/Locations"}],success:{examples:[{title:"Success-Response:",content:`{
    "@iot.count": 1,
    "value": [
        {
            "@iot.id": 1,
            "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)",
            "name": "UofC Number six",
            "description": "E.Leclerc VERN SUR SEICHE",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    "48.06467042196109",
                    "-1.623116279666956"
                ]
            },
            "geom": null,
            "properties": null,
            "Things@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/Things",
            "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Locations(1)/HistoricalLocations"
        },
        null,
        "..."
    ]
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"infos",url:"Things",title:"infos",version:"1.1.0",name:"InfosThings",group:"Things",description:'<p>A Thing is an object of the physical world (physical Things) or the information world (virtual Things) that is capable of being identified and integrated into communication networks<br>Thing is a good starting point to start creating the SensorThings model structure.<br><br>A Thing has Locations and one or more Datastreams to collect Observations. A minimal Thing can be created without a Location and Datastream and there are options to create a Things with a nested linked Location and Datastream.  <a href="https://docs.ogc.org/is/18-088/18-088.html#thing" target="_blank">[OGC reference]</a></p>',filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"patch",url:"Things",title:"Patch with existing Location",version:"1.1.0",name:"PatchExistLocationThings",group:"Things",description:'<p>Patch a Thing and only location change.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(25)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "Locations": [
           {
               "@iot.id": 2
           }
       ]
   }}' https://sensorthings.geosas.fr/v1.0/Things(25)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(25)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "Locations": [
           {
               "@iot.id": 2
           }
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Things(25)', (headers = { "Content-Type": "application/json" }), (data = :{
       "Locations": [
           {
               "@iot.id": 2
           }
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "Locations": [
        {
            "@iot.id": 2
        }
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 25,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(25)",
    "name": "New SensorWebThing back",
    "description": "Sensor system monitoring area temperature Hot",
    "properties": {
        "owner": "Mozilla",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"patch",url:"Things",title:"Patch with New location",version:"1.1.0",name:"PatchLocationThings",group:"Things",description:'<p>Modify location of a Thing.  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(25)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "name": "New SensorWebThing back",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       },
       "Locations": [
           {
               "@iot.id": 10
           }
       ]
   }}' https://sensorthings.geosas.fr/v1.0/Things(25)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(25)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "New SensorWebThing back",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       },
       "Locations": [
           {
               "@iot.id": 10
           }
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Things(25)', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "New SensorWebThing back",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       },
       "Locations": [
           {
               "@iot.id": 10
           }
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "New SensorWebThing back",
    "properties": {
        "organization": "Mozilla",
        "owner": "Mozilla"
    },
    "Locations": [
        {
            "@iot.id": 10
        }
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 25,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(25)",
    "name": "New SensorWebThing back",
    "description": "Sensor system monitoring area temperature Hot",
    "properties": {
        "owner": "Mozilla",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/MultiDatastreams"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"patch",url:"Things",title:"Patch a Thing",version:"1.1.0",name:"PatchThings",group:"Things",description:'<p>Patch a Thing.<input id="showPatchThings" type=checkbox> <label for="showPatchThings">Click for Help</label> <span id="contentPatchThings"></br></br>In SensorThings PATCH is the preferred means of updating an entity. PATCH provides more resiliency between clients and services by directly modifying only those values specified by the client. </br></br>The semantics of PATCH, as defined in [RFC5789], are to merge the content in the request payload with the entity\u2019s current state, applying the update only to those components specified in the request body. The properties provided in the payload corresponding to updatable properties SHALL replace the value of the corresponding property in the entity. Missing properties of the containing entity or complex property SHALL NOT be directly altered. </br></br>Services MAY additionally support PUT, but should be aware of the potential for data-loss in round-tripping properties that the client may not know about in advance, such as open or added properties, or properties not specified in metadata. Services that do not support PUT SHALL respond with an HTTP code 501 Not Implemented. </br></br>Key and other non-updatable properties that are not tied to key properties of the principal entity, can be omitted from the request. If the request contains a value for one of these properties, the service SHALL ignore that value when applying the update. </br></br>On success, the response SHALL be a valid success response.</span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request_2" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things(25)",type:"http"},{title:"curl",content:`curl -X PATCH -H 'Content-Type: application/json' -d '{
       "name": "New SensorWebThing Patch",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       }
   }}' https://sensorthings.geosas.fr/v1.0/Things(25)`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things(25)", {
   method: "PATCH",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "New SensorWebThing Patch",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.patch('https://sensorthings.geosas.fr/v1.0/Things(25)', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "New SensorWebThing Patch",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "New SensorWebThing Patch",
    "properties": {
        "organization": "Mozilla",
        "owner": "Mozilla"
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 25,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(25)",
    "name": "New SensorWebThing Patch",
    "description": "Sensor system monitoring area temperature Hot",
    "properties": {
        "owner": "Mozilla",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 404,
    "message": "Not Found",
    "detail": "No id found for : 0"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"post",url:"Things",title:"Post with existing Location",version:"1.1.0",name:"PostThingExistLocation",group:"Things",description:'<p>Create a Thing with existing location.A SensorThings API service, that supports entity creation, SHALL support linking new entities to existing entities upon creation. To create a new entity with links to existing entities in a single request, the client SHALL include the unique identifiers of the related entities associated with the corresponding navigation properties in the request body. </br></br>In the case of creating an Observation whose FeatureOfInterest is the Thing\u2019s Location (that means the Thing entity has a related Location entity), the request of creating the Observation SHOULD NOT include a link to a FeatureOfInterest entity. The service will first automatically create a FeatureOfInterest entity from the Location of the Thing and then link to the Observation. </br></br>In the complex use case of a Thing has multiple Location representations, the service SHOULD decide the default Location encoding when an Observation\u2019s FeatureOfInterest is the Thing\u2019s Location.  <a href="https://docs.ogc.org/is/18-088/18-088.html#link-existing-entities-when-creating" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Temperature Monitoring Things 3",
       "description": "Sensor (POST with existing Location)",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": [
           {
               "@iot.id": "1"
           }
       ]
   }}' https://sensorthings.geosas.fr/v1.0/Things`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Temperature Monitoring Things 3",
       "description": "Sensor (POST with existing Location)",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": [
           {
               "@iot.id": "1"
           }
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Things', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Temperature Monitoring Things 3",
       "description": "Sensor (POST with existing Location)",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": [
           {
               "@iot.id": "1"
           }
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "Temperature Monitoring Things 3",
    "description": "Sensor (POST with existing Location)",
    "properties": {
        "Deployment Condition": "Deployed in a third floor balcony",
        "Case Used": "Radiation shield"
    },
    "Locations": [
        {
            "@iot.id": "1"
        }
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 23,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(23)",
    "name": "Temperature Monitoring Things 3",
    "description": "Sensor (POST with existing Location)",
    "properties": {
        "Case Used": "Radiation shield",
        "Deployment Condition": "Deployed in a third floor balcony"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(23)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request",
    "detail": "La ligne en \xE9chec contient (24, null)."
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"post",url:"Things",title:"Post with Location and Datastream",version:"1.1.0",name:"PostThingLocationDatastream",group:"Things",description:'<p>Create a Thing with new location &amp; datastream.  <a href="https://docs.ogc.org/is/18-088/18-088.html#create-related-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Temperature Monitoring[4]",
       "description": "Sensor system monitoring area temperature Hot",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": [
           {
               "name": "Au Comptoir V\xE9nitien  location 5",
               "description": "Au Comptoir V\xE9nitien",
               "encodingType": "application/vnd.geo+json",
               "location": {
                   "type": "Point",
                   "coordinates": [
                       48.11829243294942,
                       -1.717928984533772
                   ]
               }
           }
       ],
       "Datastreams": [
           {
               "name": "Air Temperature DS",
               "description": "Datastream for recording temperature",
               "observationType": "Measurement",
               "unitOfMeasurement": {
                   "name": "Degree Celsius unitOfMeasurement 6",
                   "symbol": "degC",
                   "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
               },
               "ObservedProperty": {
                   "name": "Area Temperature unitOfMeasurement 7",
                   "description": "The degree or intensity of heat present in the area",
                   "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
               },
               "Sensor": {
                   "name": "DHT22 unitOfMeasurement 8",
                   "description": "DHT22 temperature sensor",
                   "encodingType": "application/pdf",
                   "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
               }
           }
       ]
   }}' https://sensorthings.geosas.fr/v1.0/Things`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Temperature Monitoring[4]",
       "description": "Sensor system monitoring area temperature Hot",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": [
           {
               "name": "Au Comptoir V\xE9nitien  location 5",
               "description": "Au Comptoir V\xE9nitien",
               "encodingType": "application/vnd.geo+json",
               "location": {
                   "type": "Point",
                   "coordinates": [
                       48.11829243294942,
                       -1.717928984533772
                   ]
               }
           }
       ],
       "Datastreams": [
           {
               "name": "Air Temperature DS",
               "description": "Datastream for recording temperature",
               "observationType": "Measurement",
               "unitOfMeasurement": {
                   "name": "Degree Celsius unitOfMeasurement 6",
                   "symbol": "degC",
                   "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
               },
               "ObservedProperty": {
                   "name": "Area Temperature unitOfMeasurement 7",
                   "description": "The degree or intensity of heat present in the area",
                   "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
               },
               "Sensor": {
                   "name": "DHT22 unitOfMeasurement 8",
                   "description": "DHT22 temperature sensor",
                   "encodingType": "application/pdf",
                   "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
               }
           }
       ]
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Things', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Temperature Monitoring[4]",
       "description": "Sensor system monitoring area temperature Hot",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": [
           {
               "name": "Au Comptoir V\xE9nitien  location 5",
               "description": "Au Comptoir V\xE9nitien",
               "encodingType": "application/vnd.geo+json",
               "location": {
                   "type": "Point",
                   "coordinates": [
                       48.11829243294942,
                       -1.717928984533772
                   ]
               }
           }
       ],
       "Datastreams": [
           {
               "name": "Air Temperature DS",
               "description": "Datastream for recording temperature",
               "observationType": "Measurement",
               "unitOfMeasurement": {
                   "name": "Degree Celsius unitOfMeasurement 6",
                   "symbol": "degC",
                   "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
               },
               "ObservedProperty": {
                   "name": "Area Temperature unitOfMeasurement 7",
                   "description": "The degree or intensity of heat present in the area",
                   "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
               },
               "Sensor": {
                   "name": "DHT22 unitOfMeasurement 8",
                   "description": "DHT22 temperature sensor",
                   "encodingType": "application/pdf",
                   "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
               }
           }
       ]
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "Temperature Monitoring[4]",
    "description": "Sensor system monitoring area temperature Hot",
    "properties": {
        "Deployment Condition": "Deployed in a third floor balcony",
        "Case Used": "Radiation shield"
    },
    "Locations": [
        {
            "name": "Au Comptoir V\xE9nitien  location 5",
            "description": "Au Comptoir V\xE9nitien",
            "encodingType": "application/vnd.geo+json",
            "location": {
                "type": "Point",
                "coordinates": [
                    48.11829243294942,
                    -1.717928984533772
                ]
            }
        }
    ],
    "Datastreams": [
        {
            "name": "Air Temperature DS",
            "description": "Datastream for recording temperature",
            "observationType": "Measurement",
            "unitOfMeasurement": {
                "name": "Degree Celsius unitOfMeasurement 6",
                "symbol": "degC",
                "definition": "http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelsius"
            },
            "ObservedProperty": {
                "name": "Area Temperature unitOfMeasurement 7",
                "description": "The degree or intensity of heat present in the area",
                "definition": "http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"
            },
            "Sensor": {
                "name": "DHT22 unitOfMeasurement 8",
                "description": "DHT22 temperature sensor",
                "encodingType": "application/pdf",
                "metadata": "https://cdn-shop.adafruit.com/datasheets/DHT22.pdf"
            }
        }
    ]
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 25,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(25)",
    "name": "Temperature Monitoring[4]",
    "description": "Sensor system monitoring area temperature Hot",
    "properties": {
        "Case Used": "Radiation shield",
        "Deployment Condition": "Deployed in a third floor balcony"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(25)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"post",url:"Things",title:"Post basic",version:"1.1.0",name:"PostThings",permission:[{name:"admin:computer",title:'User access only");',description:"<p>lines.push(&quot;* This optional description belong to to the group admin.&quot;); lines.push(&quot;</p>"}],group:"Things",description:'<p>Post a new Things.<input id="showPostThings" type=checkbox> <label for="showPostThings">Click for Help</label> <span id="contentPostThings"></br></br>To create an entity in a collection, the client SHALL send a HTTP POST request to that collection\u2019s URL. The POST body SHALL contain a single valid entity representation. </br></br>If the target URL for the collection is a navigationLink, the new entity is automatically linked to the entity containing the navigationLink. </br></br>Upon successful completion, the response SHALL contain a HTTP location header that contains the selfLink of the created entity. </br></br>Upon successful completion the service SHALL respond with either 201 Created, or 204 No Content. </br></br>In addition, the link between entities SHALL be established upon creating an entity. Two use cases SHALL be considered: (1) link to existing entities when creating an entity, and (2) create related entities when creating an entity. The requests for these two use cases are described in the following subsection. </br></br>When clients create resources in a SensorThings service, they SHALL follow the integrity constraints listed in Table 24. For example, a Datastream entity SHALL link to a Thing entity. When a client wants to create a Datastream entity, the client needs to either (1) create a linked Thing entity in the same request or (2) link to an already created Thing entity. The complete integrity constraints for creating resources are shown in the following table. </br></br>Special case #1 - When creating an Observation entity that links to a FeatureOfInterest entity: Sometimes the FeatureOfInterest of an Observation is the Location of the Thing. For example, a wifi-connected thermostat\u2019s temperature observation\u2019s feature-of-interest can be the location of the smart thermostat, that is the room where the smart thermostat is located in. </br></br>In this case, when a client creates an Observation entity, the client SHOULD omit the link to a FeatureOfInterest entity in the POST body message and SHOULD not create a related FeatureOfInterest entity with deep insert. And if the service detects that there is no link to a FeatureOfInterest entity in the POST body message that creates an Observation entity, the service SHALL either (1) create a FeatureOfInterest entity by using the location property from the Location of the Thing entity when there is no FeatureOfInterest whose location property is from the Location of the Thing entity or (2) link to the FeatureOfInterest whose location property is from the Location of the Thing entity. </br></br>Special case #2: In the context of IoT, many Observations\u2019 resultTime and phenomenonTime cannot be distinguished or the resultTime is not available. In this case, when a client creates an Observation entity, the client MAY omit the resultTime and the service SHOULD assign a null value to the resultTime. </br><table> <thead> <tr> <th style="width: 30%">Scenario</th> <th style="width: 70%">Integrity Constraints</th> </tr> </thead> <tbody> <tr> <td>Create a Thing entity</td> <td></td> </tr> <tr> <td>Create a Location entity</td> <td></td> </tr> <tr> <td>Create a Datastream entity</td> <td>SHALL link to a Thing entity</br>SHALL link to a Sensor entity.</br>SHALL link to an ObservedProperty entity.</td> </tr> <tr> <td>Create a Sensor entity</td> <td></td> </tr> <tr> <td>Create an ObservedProperty entity</td> <td></td> </tr> <tr> <td>Create an Observation entity</td> <td>SHALL link to a Datastream or MultiDatastream entity.</br>SHALL link to a FeatureOfInterest entity. If no link specified, the service SHALL create a FeatureOfInterest entity from the content of the Location entities.</td> </tr> <tr> <td>Create a FeatureOfInterest entity</td> <td></td> </tr> </tbody> </table></span>  <a href="https://docs.ogc.org/is/18-088/18-088.html#_request" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "description": "Create a new thing",
       "name": "name of new Things 1",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       }
   }}' https://sensorthings.geosas.fr/v1.0/Things`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "description": "Create a new thing",
       "name": "name of new Things 1",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Things', (headers = { "Content-Type": "application/json" }), (data = :{
       "description": "Create a new thing",
       "name": "name of new Things 1",
       "properties": {
           "organization": "Mozilla",
           "owner": "Mozilla"
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{fields:{Parameter:[{group:"Parameter",type:"text",optional:!1,field:"name",description:"<p>CharacterString</p>"},{group:"Parameter",type:"text",optional:!1,field:"description",description:"<p>CharacterString</p>"},{group:"Parameter",type:"json",optional:!0,field:"properties",description:"<p>JSON Object</p>"},{group:"Parameter",type:"relation",optional:!0,field:"Locations",description:"<p>Many optional to many optional</p>"},{group:"Parameter",type:"relation",optional:!0,field:"HistoricalLocations",description:"<p>One mandatory to many optional</p>"},{group:"Parameter",type:"relation",optional:!0,field:"Datastreams",description:"<p>One mandatory to many optional</p>"},{group:"Parameter",type:"relation",optional:!0,field:"MultiDatastreams",description:"<p>One mandatory to many optional</p>"}]},examples:[{title:"Request-Example:",content:`{
    "description": "Create a new thing",
    "name": "name of new Things 1",
    "properties": {
        "organization": "Mozilla",
        "owner": "Mozilla"
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 21,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(21)",
    "name": "name of new Things 1",
    "description": "Create a new thing",
    "properties": {
        "owner": "Mozilla",
        "organization": "Mozilla"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(21)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"post",url:"Things",title:"Post with new Location",version:"1.1.0",name:"PostThingsLocation",group:"Things",description:'<p>A Location entity can be linked to a Thing at its creation time. The Location provided will be a new Location in the system.</br></br>A request to create an entity that includes related entities, represented using the appropriate inline representation, is referred to as a &quot;deep insert&quot;. A SensorThings service that supports entity creation SHALL support deep insert. </br></br>If the inline representation contains a value for a computed property (i.e., id), the service SHALL ignore that value when creating the related entity. </br></br>On success, the service SHALL create all entities and relate them. On failure, the service SHALL NOT create any of the entities.  <a href="https://docs.ogc.org/is/18-088/18-088.html#create-related-entities" target="_blank">[OGC reference]</a></p>',examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/Things",type:"http"},{title:"curl",content:`curl -X POST -H 'Content-Type: application/json' -d '{
       "name": "Temperature Monitoring Things 2",
       "description": "Things (POST with new Location)",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": {
           "name": "Au Comptoir V\xE9nitien [new created]",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "location": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       }
   }}' https://sensorthings.geosas.fr/v1.0/Things`,type:"curl"},{title:"javascript",content:`const response = await fetch("https://sensorthings.geosas.fr/v1.0/Things", {
   method: "POST",
   headers: {
       "Content-Type": "application/json",
   },
   body:{
       "name": "Temperature Monitoring Things 2",
       "description": "Things (POST with new Location)",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": {
           "name": "Au Comptoir V\xE9nitien [new created]",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "location": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       }
   }
});
const valueJson = await response.json();
const valueTxt = await response.text();`,type:"javascript"},{title:"python",content:`import requests
import json
response_API = requests.post('https://sensorthings.geosas.fr/v1.0/Things', (headers = { "Content-Type": "application/json" }), (data = :{
       "name": "Temperature Monitoring Things 2",
       "description": "Things (POST with new Location)",
       "properties": {
           "Deployment Condition": "Deployed in a third floor balcony",
           "Case Used": "Radiation shield"
       },
       "Locations": {
           "name": "Au Comptoir V\xE9nitien [new created]",
           "description": "Au Comptoir V\xE9nitien",
           "encodingType": "application/vnd.geo+json",
           "location": {
               "type": "Point",
               "coordinates": [
                   48.11829243294942,
                   -1.717928984533772
               ]
           }
       }
   }))
data = response_API.text
parse_json = json.loads(data)
print(parse_json)`,type:"python"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "name": "Temperature Monitoring Things 2",
    "description": "Things (POST with new Location)",
    "properties": {
        "Deployment Condition": "Deployed in a third floor balcony",
        "Case Used": "Radiation shield"
    },
    "Locations": {
        "name": "Au Comptoir V\xE9nitien [new created]",
        "description": "Au Comptoir V\xE9nitien",
        "encodingType": "application/vnd.geo+json",
        "location": {
            "type": "Point",
            "coordinates": [
                48.11829243294942,
                -1.717928984533772
            ]
        }
    }
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "@iot.id": 22,
    "@iot.selfLink": "https://sensorthings.geosas.fr/v1.0/Things(22)",
    "name": "Temperature Monitoring Things 2",
    "description": "Things (POST with new Location)",
    "properties": {
        "Case Used": "Radiation shield",
        "Deployment Condition": "Deployed in a third floor balcony"
    },
    "Locations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Locations",
    "HistoricalLocations@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/HistoricalLocations",
    "Datastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/Datastreams",
    "MultiDatastreams@iot.navigationLink": "https://sensorthings.geosas.fr/v1.0/Things(22)/MultiDatastreams"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 400,
    "message": "Bad Request"
}`,type:"json"}]},filename:"test/apiDocs/apiDocThings.js",groupTitle:"Things"},{type:"infos",url:"/Identification",title:"Infos",version:"1.1.0",name:"InfosToken",group:"Token",description:'<hr>     <div class="text">       <p>You have to be registered to be able to POST PUT OR DELETE datas.</p>     </div>',filename:"test/apiDocs/apiDocToken.js",groupTitle:"Token"},{type:"post",url:"login",title:"get a new token",version:"1.1.0",name:"TokenLogin",group:"Token",description:"<p>Get a new token.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/login",type:"http"},{title:"curl",content:"curl -X POST /v1.0/login/login -H 'cache-control: no-cache' -H 'content-type: application/x-www-form-urlencoded' -d 'username=sensorapi&password=mario29'",type:"curl"}],parameter:{examples:[{title:"Request-Example:",content:`{
    "username": "myUserName",
    "password": "*************"
}`,type:"json"}]},success:{examples:[{title:"Success-Response:",content:`{
    "message": "Login succeeded",
    "user": "sensorapi",
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImlkIjoiMiIsInVzZXJuYW1lIjoic2Vuc29yYXBpIiwicGFzc3dvcmQiOiJtYXJpbzI5IiwiUERDVUFTIjpbdHJ1ZSx0cnVlLHRydWUsdHJ1ZSx0cnVlLGZhbHNlXX0sImV4cCI6MTcwMDc3Mjc1NywiaWF0IjoxNzAwNzY5MTU3fQ.NpIImWvVRxgtm-v4JgN_rVViHLnxSJCI2UCHJKSShZs"
}`,type:"json"}]},error:{examples:[{title:"Error-Response:",content:`{
    "code": 401,
    "message": "Unauthorized"
}`,type:"json"}]},filename:"test/apiDocs/apiDocToken.js",groupTitle:"Token"},{type:"get",url:"logout",title:"logout actual connection.",version:"1.1.0",name:"TokenLogout",group:"Token",description:"<p>Logout actual connection.</p>",examples:[{title:"http",content:"https://sensorthings.geosas.fr/v1.0/logout",type:"http"},{title:"curl",content:"curl -X GET /v1.0/logout/logout",type:"curl"}],sampleRequest:[{url:"https://sensorthings.geosas.fr/v1.0/logout"}],success:{examples:[{title:"Success-Response:",content:`{
    "message": "Logout succeeded"
}`,type:"json"}]},filename:"test/apiDocs/apiDocToken.js",groupTitle:"Token"}];const Q={name:"Acme project",version:"0.0.0",description:"REST Api",sampleUrl:!1,defaultVersion:"0.0.0",apidoc:"0.3.0",generator:{name:"apidoc",time:"Thu Nov 23 2023 20:56:23 GMT+0100 (heure normale d\u2019Europe centrale)",url:"https://apidocjs.com",version:"0.50.2"}};xn();const pt=c().compile(g()("#template-header").html()),Lt=c().compile(g()("#template-footer").html()),nt=c().compile(g()("#template-article").html()),mt=c().compile(g()("#template-compare-article").html()),ct=c().compile(g()("#template-generator").html()),Ot=c().compile(g()("#template-project").html()),Rt=c().compile(g()("#template-sections").html()),qt=c().compile(g()("#template-sidenav").html());Q.template||(Q.template={}),Q.template.withCompare==null&&(Q.template.withCompare=!0),Q.template.withGenerator==null&&(Q.template.withGenerator=!0),Q.template.forceLanguage&&mn(Q.template.forceLanguage),Q.template.aloneDisplay==null&&(Q.template.aloneDisplay=!1);const Ft=(0,r.groupBy)(ft,Tt=>Tt.group),Ct={};g().each(Ft,(Tt,ht)=>{Ct[Tt]=(0,r.groupBy)(ht,wt=>wt.name)});const Zt=[];g().each(Ct,(Tt,ht)=>{let wt=[];g().each(ht,(Et,Xt)=>{const ie=Xt[0].title;ie&&wt.push(ie.toLowerCase()+"#~#"+Et)}),wt.sort(),Q.order&&(wt=He(wt,Q.order,"#~#")),wt.forEach(Et=>{const ie=Et.split("#~#")[1];ht[ie].forEach(Gt=>{Zt.push(Gt)})})}),ft=Zt;let Jt={};const N={};let U={};U[Q.version]=1,g().each(ft,(Tt,ht)=>{Jt[ht.group]=1,N[ht.group]=ht.groupTitle||ht.group,U[ht.version]=1}),Jt=Object.keys(Jt),Jt.sort(),Q.order&&(Jt=We(N,Q.order)),U=Object.keys(U),U.sort(s().compare),U.reverse();const K=[];Jt.forEach(Tt=>{K.push({group:Tt,isHeader:!0,title:N[Tt]});let ht="";ft.forEach(wt=>{wt.group===Tt&&(ht!==wt.name?K.push({title:wt.title,group:Tt,name:wt.name,type:wt.type,version:wt.version,url:wt.url}):K.push({title:wt.title,group:Tt,hidden:!0,name:wt.name,type:wt.type,version:wt.version,url:wt.url}),ht=wt.name)})});function X(Tt,ht,wt){let Et=!1;if(!ht)return Et;const Xt=ht.match(/<h(1|2).*?>(.+?)<\/h(1|2)>/gi);return Xt&&Xt.forEach(function(ie){const Gt=ie.substring(2,3),$e=ie.replace(/<.+?>/g,""),tn=ie.match(/id="api-([^-]+)(?:-(.+))?"/),Ln=tn?tn[1]:null,Fn=tn?tn[2]:null;Gt==="1"&&$e&&Ln&&(Tt.splice(wt,0,{group:Ln,isHeader:!0,title:$e,isFixed:!0}),wt++,Et=!0),Gt==="2"&&$e&&Ln&&Fn&&(Tt.splice(wt,0,{group:Ln,name:Fn,isHeader:!1,title:$e,isFixed:!1,version:"1.0"}),wt++)}),Et}let st;if(Q.header&&(st=X(K,Q.header.content,0),st||K.unshift({group:"_header",isHeader:!0,title:Q.header.title==null?Te("General"):Q.header.title,isFixed:!0})),Q.footer){const Tt=K.length;st=X(K,Q.footer.content,K.length),!st&&Q.footer.title!=null&&K.splice(Tt,0,{group:"_footer",isHeader:!0,title:Q.footer.title,isFixed:!0})}const vt=Q.title?Q.title:"apiDoc: "+Q.name+" - "+Q.version;g()(document).attr("title",vt),g()("#loader").remove();const gt={nav:K};g()("#sidenav").append(qt(gt)),g()("#generator").append(ct(Q)),(0,r.extend)(Q,{versions:U}),g()("#project").append(Ot(Q)),Q.header&&g()("#header").append(pt(Q.header)),Q.footer&&(g()("#footer").append(Lt(Q.footer)),Q.template.aloneDisplay&&document.getElementById("api-_footer").classList.add("hide"));const Dt={};let yt="";Jt.forEach(function(Tt){const ht=[];let wt="",Et={},Xt=Tt,ie="";Dt[Tt]={},ft.forEach(function(Gt){Tt===Gt.group&&(wt!==Gt.name?(ft.forEach(function($e){Tt===$e.group&&Gt.name===$e.name&&(Object.prototype.hasOwnProperty.call(Dt[Gt.group],Gt.name)||(Dt[Gt.group][Gt.name]=[]),Dt[Gt.group][Gt.name].push($e.version))}),Et={article:Gt,versions:Dt[Gt.group][Gt.name]}):Et={article:Gt,hidden:!0,versions:Dt[Gt.group][Gt.name]},Q.sampleUrl&&Q.sampleUrl===!0&&(Q.sampleUrl=window.location.origin),Q.url&&Et.article.url.substr(0,4).toLowerCase()!=="http"&&(Et.article.url=Q.url+Et.article.url),le(Et,Gt),Gt.groupTitle&&(Xt=Gt.groupTitle),Gt.groupDescription&&(ie=Gt.groupDescription),ht.push({article:nt(Et),group:Gt.group,name:Gt.name,aloneDisplay:Q.template.aloneDisplay}),wt=Gt.name)}),Et={group:Tt,title:Xt,description:ie,articles:ht,aloneDisplay:Q.template.aloneDisplay},yt+=Rt(Et)}),g()("#sections").append(yt),Q.template.aloneDisplay||(document.body.dataset.spy="scroll",g()("body").scrollspy({target:"#scrollingNav"})),g()(".form-control").on("focus change",function(){g()(this).removeClass("border-danger")}),g()(".sidenav").find("a").on("click",function(Tt){Tt.preventDefault();const ht=this.getAttribute("href");if(Q.template.aloneDisplay){const wt=document.querySelector(".sidenav > li.active");wt&&wt.classList.remove("active"),this.parentNode.classList.add("active")}else{const wt=document.querySelector(ht);wt&&g()("html,body").animate({scrollTop:wt.offsetTop},400)}window.location.hash=ht});function kt(Tt){let ht=!1;return g().each(Tt,wt=>{ht=ht||(0,r.some)(Tt[wt],Et=>Et.type)}),ht}function Mt(){g()('button[data-toggle="popover"]').popover().click(function(ht){ht.preventDefault()});const Tt=g()("#version strong").html();if(g()("#sidenav li").removeClass("is-new"),Q.template.withCompare&&g()("#sidenav li[data-version='"+Tt+"']").each(function(){const ht=g()(this).data("group"),wt=g()(this).data("name"),Et=g()("#sidenav li[data-group='"+ht+"'][data-name='"+wt+"']").length,Xt=g()("#sidenav li[data-group='"+ht+"'][data-name='"+wt+"']").index(g()(this));(Et===1||Xt===Et-1)&&g()(this).addClass("is-new")}),g()(".nav-tabs-examples a").click(function(ht){ht.preventDefault(),g()(this).tab("show")}),g()(".nav-tabs-examples").find("a:first").tab("show"),g()(".sample-request-content-type-switch").change(function(){g()(this).val()==="body-form-data"?(g()("#sample-request-body-json-input-"+g()(this).data("id")).hide(),g()("#sample-request-body-form-input-"+g()(this).data("id")).show()):(g()("#sample-request-body-form-input-"+g()(this).data("id")).hide(),g()("#sample-request-body-json-input-"+g()(this).data("id")).show())}),Q.template.aloneDisplay&&(g()(".show-group").click(function(){const ht="."+g()(this).attr("data-group")+"-group",wt="."+g()(this).attr("data-group")+"-article";g()(".show-api-group").addClass("hide"),g()(ht).removeClass("hide"),g()(".show-api-article").addClass("hide"),g()(wt).removeClass("hide")}),g()(".show-api").click(function(){const ht=this.getAttribute("href").substring(1),wt=document.getElementById("version").textContent.trim(),Et=`.${this.dataset.name}-article`,Xt=`[id="${ht}-${wt}"]`,ie=`.${this.dataset.group}-group`;g()(".show-api-group").addClass("hide"),g()(ie).removeClass("hide"),g()(".show-api-article").addClass("hide");let Gt=g()(Et);g()(Xt).length&&(Gt=g()(Xt).parent()),Gt.removeClass("hide"),ht.match(/_(header|footer)/)&&document.getElementById(ht).classList.remove("hide")})),Q.template.aloneDisplay||g()("body").scrollspy("refresh"),Q.template.aloneDisplay){const ht=window.location.hash;if(ht!=null&&ht.length!==0){const wt=document.getElementById("version").textContent.trim(),Et=document.querySelector(`li .${ht.slice(1)}-init`),Xt=document.querySelector(`li[data-version="${wt}"] .show-api.${ht.slice(1)}-init`);let ie=Et;Xt&&(ie=Xt),ie.click()}}}function Ht(Tt){typeof Tt=="undefined"?Tt=g()("#version strong").html():g()("#version strong").html(Tt),g()("article").addClass("hide"),g()("#sidenav li:not(.nav-fixed)").addClass("hide");const ht={};document.querySelectorAll("article[data-version]").forEach(wt=>{const Et=wt.dataset.group,Xt=wt.dataset.name,ie=wt.dataset.version,Gt=Et+Xt;!ht[Gt]&&s().lte(ie,Tt)&&(ht[Gt]=!0,document.querySelector(`article[data-group="${Et}"][data-name="${Xt}"][data-version="${ie}"]`).classList.remove("hide"),document.querySelector(`#sidenav li[data-group="${Et}"][data-name="${Xt}"][data-version="${ie}"]`).classList.remove("hide"),document.querySelector(`#sidenav li.nav-header[data-group="${Et}"]`).classList.remove("hide"))}),g()("article[data-version]").each(function(wt){const Et=g()(this).data("group");g()("section#api-"+Et).removeClass("hide"),g()("section#api-"+Et+" article:visible").length===0?g()("section#api-"+Et).addClass("hide"):g()("section#api-"+Et).removeClass("hide")})}if(Ht(),g()("#versions li.version a").on("click",function(Tt){Tt.preventDefault(),Ht(g()(this).html())}),g()("#compareAllWithPredecessor").on("click",Nt),g()("article .versions li.version a").on("click",Kt),g().urlParam=function(Tt){const ht=new RegExp("[\\?&amp;]"+Tt+"=([^&amp;#]*)").exec(window.location.href);return ht&&ht[1]?ht[1]:null},g().urlParam("compare")&&g()("#compareAllWithPredecessor").trigger("click"),window.location.hash){const Tt=decodeURI(window.location.hash);g()(Tt).length>0&&g()("html,body").animate({scrollTop:parseInt(g()(Tt).offset().top)},0)}g()("#scrollingNav .sidenav-search input.search").focus(),g()('[data-action="filter-search"]').on("keyup",Tt=>{const ht=Tt.currentTarget.value;g()(".sidenav").find("a.nav-list-item").each((wt,Et)=>{g()(Et).show(),Et.innerText.toLowerCase().includes(ht)||g()(Et).hide()})}),g()("span.search-reset").on("click",function(){g()("#scrollingNav .sidenav-search input.search").val("").focus(),g()(".sidenav").find("a.nav-list-item").show()});function Kt(Tt){Tt.preventDefault();const ht=g()(this).parents("article"),wt=g()(this).html(),Et=ht.find(".version"),Xt=Et.find("strong").html();Et.find("strong").html(wt);const ie=ht.data("group"),Gt=ht.data("name"),$e=ht.data("version"),tn=ht.data("compare-version");if(tn!==wt&&!(!tn&&$e===wt)){if(tn&&Dt[ie][Gt][0]===wt||$e===wt)Ee(ie,Gt,$e);else{let Ln={},Fn={};g().each(Ct[ie][Gt],function(Pr,es){es.version===$e&&(Ln=es),es.version===wt&&(Fn=es)});const ge={article:Ln,compare:Fn,versions:Dt[ie][Gt]};ge.article.id=ge.article.group+"-"+ge.article.name+"-"+ge.article.version,ge.article.id=ge.article.id.replace(/\./g,"_"),ge.compare.id=ge.compare.group+"-"+ge.compare.name+"-"+ge.compare.version,ge.compare.id=ge.compare.id.replace(/\./g,"_");let fe=Ln;fe.parameter&&fe.parameter.fields&&(ge._hasTypeInParameterFields=kt(fe.parameter.fields)),fe.error&&fe.error.fields&&(ge._hasTypeInErrorFields=kt(fe.error.fields)),fe.success&&fe.success.fields&&(ge._hasTypeInSuccessFields=kt(fe.success.fields)),fe.info&&fe.info.fields&&(ge._hasTypeInInfoFields=kt(fe.info.fields)),fe=Fn,ge._hasTypeInParameterFields!==!0&&fe.parameter&&fe.parameter.fields&&(ge._hasTypeInParameterFields=kt(fe.parameter.fields)),ge._hasTypeInErrorFields!==!0&&fe.error&&fe.error.fields&&(ge._hasTypeInErrorFields=kt(fe.error.fields)),ge._hasTypeInSuccessFields!==!0&&fe.success&&fe.success.fields&&(ge._hasTypeInSuccessFields=kt(fe.success.fields)),ge._hasTypeInInfoFields!==!0&&fe.info&&fe.info.fields&&(ge._hasTypeInInfoFields=kt(fe.info.fields));const Cs=mt(ge);ht.after(Cs),ht.next().find(".versions li.version a").on("click",Kt),g()("#sidenav li[data-group='"+ie+"'][data-name='"+Gt+"'][data-version='"+Xt+"']").addClass("has-modifications"),ht.remove()}v().highlightAll()}}function Nt(Tt){Tt.preventDefault(),g()("article:visible .versions").each(function(){const wt=g()(this).parents("article").data("version");let Et=null;g()(this).find("li.version a").each(function(){g()(this).html()<wt&&!Et&&(Et=g()(this))}),Et&&Et.trigger("click")})}function le(Tt,ht){Tt.id=Tt.article.group+"-"+Tt.article.name+"-"+Tt.article.version,Tt.id=Tt.id.replace(/\./g,"_"),ht.header&&ht.header.fields&&(Tt._hasTypeInHeaderFields=kt(ht.header.fields)),ht.parameter&&ht.parameter.fields&&(Tt._hasTypeInParameterFields=kt(ht.parameter.fields)),ht.error&&ht.error.fields&&(Tt._hasTypeInErrorFields=kt(ht.error.fields)),ht.success&&ht.success.fields&&(Tt._hasTypeInSuccessFields=kt(ht.success.fields)),ht.info&&ht.info.fields&&(Tt._hasTypeInInfoFields=kt(ht.info.fields)),Tt.template=Q.template}function Ce(Tt,ht,wt){let Et={};g().each(Ct[Tt][ht],function(ie,Gt){Gt.version===wt&&(Et=Gt)});const Xt={article:Et,versions:Dt[Tt][ht]};return le(Xt,Et),nt(Xt)}function Ee(Tt,ht,wt){const Et=g()("article[data-group='"+Tt+"'][data-name='"+ht+"']:visible"),Xt=Ce(Tt,ht,wt);Et.after(Xt),Et.next().find(".versions li.version a").on("click",Kt),g()("#sidenav li[data-group='"+Tt+"'][data-name='"+ht+"'][data-version='"+wt+"']").removeClass("has-modifications"),Et.remove()}function He(Tt,ht,wt){const Et=[];return ht.forEach(function(Xt){wt?Tt.forEach(function(ie){const Gt=ie.split(wt);(Gt[0]===Xt||Gt[1]===Xt)&&Et.push(ie)}):Tt.forEach(function(ie){ie===Xt&&Et.push(Xt)})}),Tt.forEach(function(Xt){Et.indexOf(Xt)===-1&&Et.push(Xt)}),Et}function We(Tt,ht){const wt=[];return ht.forEach(Et=>{Object.keys(Tt).forEach(Xt=>{Tt[Xt].replace(/_/g," ")===Et&&wt.push(Xt)})}),Object.keys(Tt).forEach(Et=>{wt.indexOf(Et)===-1&&wt.push(Et)}),wt}Mt()}})()})();
