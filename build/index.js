"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.server=exports.app=void 0;const koa_1=__importDefault(require("koa")),koa_bodyparser_1=__importDefault(require("koa-bodyparser")),koa_logger_1=__importDefault(require("koa-logger")),koa_helmet_1=__importDefault(require("koa-helmet")),koa_compress_1=__importDefault(require("koa-compress")),koa_json_1=__importDefault(require("koa-json")),routes_1=require("./routes/"),cors_1=__importDefault(require("@koa/cors")),helpers_1=require("./helpers"),koa_static_1=__importDefault(require("koa-static")),path_1=__importDefault(require("path")),constants_1=require("./constants"),configuration_1=require("./configuration"),koa_favicon_1=__importDefault(require("koa-favicon")),models_1=require("./models"),log_1=require("./log"),zlib_1=require("zlib");exports.app=new koa_1.default,exports.app.use((0,koa_favicon_1.default)(__dirname+"/favicon.ico")),exports.app.use((0,koa_static_1.default)(path_1.default.join(__dirname,"/apidoc"))),exports.app.use(koa_helmet_1.default.contentSecurityPolicy({directives:constants_1.HELMET_CONFIG})),exports.app.use((0,koa_bodyparser_1.default)({enableTypes:["json","text","form"]})),exports.app.use((0,koa_compress_1.default)({filter:function(e){return/json/i.test(e)||/text/i.test(e)},threshold:1024,gzip:{flush:zlib_1.constants.Z_NO_FLUSH,level:zlib_1.constants.Z_BEST_COMPRESSION}})),exports.app.use(routes_1.routerHandle),(0,helpers_1.isTest)()||exports.app.use((0,koa_logger_1.default)(e=>process.stdout.write((new Date).toLocaleString()+(e+"\n")))),exports.app.use((0,koa_json_1.default)()),exports.app.use((0,cors_1.default)()),exports.app.use(routes_1.unProtectedRoutes.routes()),exports.app.use((e,t)=>(e.state.secret=constants_1.APP_KEY,e.body=e.request.body,t())),exports.app.use(routes_1.protectedRoutes.routes()),models_1.models.init(),log_1.log.init(),exports.server=(0,helpers_1.isTest)()?exports.app.listen(configuration_1.serverConfig.getConfig(constants_1.TEST).port,async()=>{await configuration_1.serverConfig.addToServer(constants_1.ADMIN),configuration_1.serverConfig.createDbConnectionFromConfigName(constants_1.TEST)}):configuration_1.serverConfig.init();