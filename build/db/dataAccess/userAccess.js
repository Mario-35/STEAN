"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.userAccess=void 0;const helpers_1=require("../../helpers"),configuration_1=require("../../configuration"),constants_1=require("../../constants"),models_1=require("../../models"),logger_1=require("../../logger"),cols=()=>Object.keys(models_1.models.DBAdmin(configuration_1.serverConfig.getConfig(constants_1.ADMIN)).Users.columns);exports.userAccess={getAll:async()=>{var e=await configuration_1.serverConfig.connection(constants_1.ADMIN)`SELECT ${configuration_1.serverConfig.connection(constants_1.ADMIN)(cols())} FROM ${configuration_1.serverConfig.connection(constants_1.ADMIN)(models_1.models.DBAdmin(configuration_1.serverConfig.getConfig(constants_1.ADMIN)).Users.table)} ORDER BY id`;return e[0]},getSingle:async e=>{e="number"==typeof e?String(e):e;e=await configuration_1.serverConfig.connection(constants_1.ADMIN)`SELECT ${configuration_1.serverConfig.connection(constants_1.ADMIN)(cols())} FROM ${configuration_1.serverConfig.connection(constants_1.ADMIN)(models_1.models.DBAdmin(configuration_1.serverConfig.getConfig(constants_1.ADMIN)).Users.table)} WHERE id = ${+e} LIMIT 1`;if(1===e.length)return e[0]},post:async(n,a)=>configuration_1.serverConfig.connection(n).unsafe(`INSERT INTO "user" ("username", "email", "password", "database", "canPost", "canDelete", "canCreateUser", "canCreateDb", "superAdmin", "admin") 
       VALUES ('${a.username}', '${a.email}', '${(0,helpers_1.encrypt)(a.password)}', '${a.database||"all"}', ${a.canPost||!1}, ${a.canDelete||!1}, ${a.canCreateUser||!1}, ${a.canCreateDb||!1}, ${a.superAdmin||!1}, ${a.admin||!1}) 
      RETURNING *`).catch(async e=>{if("23505"===e.code){e=await configuration_1.serverConfig.connection(n).unsafe(`SELECT id FROM "user" WHERE "username" = '${a.username}'`);if(e[0])return a.id=e[0].id,configuration_1.serverConfig.connection(n).unsafe(`UPDATE "user" SET "username" = '${a.username}', "email" = '${a.email}', "database" = '${a.database}', "canPost" = ${a.canPost||!1}, "canDelete" = ${a.canDelete||!1}, "canCreateUser" = ${a.canCreateUser||!1}, "canCreateDb" = ${a.canCreateDb||!1}, "superAdmin" = ${a.superAdmin||!1}, "admin" = ${a.admin||!1} WHERE "id" = ${a.id} RETURNING *`)}}),update:async(e,n)=>configuration_1.serverConfig.connection(e).unsafe(`UPDATE "user" SET "username" = '${n.username}', "email" = '${n.email}', "database" = '${n.database}', "canPost" = ${n.canPost||!1}, "canDelete" = ${n.canDelete||!1}, "canCreateUser" = ${n.canCreateUser||!1}, "canCreateDb" = ${n.canCreateDb||!1}, "superAdmin" = ${n.superAdmin||!1}, "admin" = ${n.admin||!1} WHERE "id" = ${n.id} RETURNING *`)};