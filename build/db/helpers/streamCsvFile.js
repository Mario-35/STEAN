"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.streamCsvFile=void 0;const logger_1=require("../../logger"),fs_1=require("fs"),stream_1=require("stream"),configuration_1=require("../../configuration"),_1=require("."),log_1=require("../../log");async function streamCsvFile(o,a,e){const r=[],i=new AbortController,t=(0,fs_1.createReadStream)(a.filename),n=(e.columns.forEach(e=>r.push(`"${e}" varchar(255) NULL`)),await(0,_1.executeSql)(o.config,`CREATE TABLE "${a.tempTable}" ( id serial4 NOT NULL, ${r}, CONSTRAINT ${a.tempTable}_pkey PRIMARY KEY (id));`).catch(e=>{}),configuration_1.serverConfig.connection(o.config.name).unsafe(`COPY "${a.tempTable}" (${e.columns.join(",")}) FROM STDIN WITH(FORMAT csv, DELIMITER ';'${a.header})`).writable());return new Promise(async function(r,e){t.pipe((0,stream_1.addAbortSignal)(i.signal,await n)).on("finish",async e=>{await(0,_1.executeSqlValues)(o.config,`SELECT count(id) FROM "${a.tempTable}"`).then(e=>{r(+e[0])}).catch(e=>{log_1.log.error(e),r(-1)})}).on("error",e=>{log_1.log.error(e),r(-1)})})}exports.streamCsvFile=streamCsvFile;