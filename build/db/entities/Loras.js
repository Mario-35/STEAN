"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Loras=void 0;const common_1=require("./common"),index_1=require("../../helpers/index"),constants_1=require("../../constants"),logger_1=require("../../logger"),messages_1=require("../../messages/"),enums_1=require("../../enums"),queries_1=require("../queries"),lora_1=require("../../lora"),helpers_1=require("../helpers");class Loras extends common_1.Common{synonym={};stean={};constructor(e){super(e)}async prepareInputResult(e){const s={},a=["deveui","DevEUI","sensor_id","frame"];return(0,index_1.notNull)(e.payload_deciphered)&&(this.stean.frame=e.payload_deciphered.toUpperCase()),Object.entries(e).forEach(([e,t])=>s[a.includes(e)?e.toLowerCase():e]=a.includes(e)?t.toUpperCase():t),isNaN(e.timestamp)||(s.timestamp=new Date(1e3*e.timestamp).toISOString()),s}createListQuery(e,t){t=t.split("COLUMN");return t[0].concat('"',e.join(`"${t[1]}${t[0]}"`),'"',t[1])}async post(t,a){var e=e=>this.stean[e]=t[e];if(t&&(this.stean=await this.prepareInputResult(t)),(0,index_1.notNull)(t.MultiDatastream)){if(!(0,index_1.notNull)(this.stean.deveui)){if(a)return this.formatReturnResult({body:messages_1.errors.deveuiMessage});this.ctx.throw(400,{code:400,detail:messages_1.errors.deveuiMessage})}return e("MultiDatastream"),super.post(this.stean)}if((0,index_1.notNull)(t.Datastream)){if(!(0,index_1.notNull)(t.deveui)){if(a)return this.formatReturnResult({body:messages_1.errors.deveuiMessage});this.ctx.throw(400,{code:400,detail:messages_1.errors.deveuiMessage})}return e("Datastream"),super.post(this.stean)}if(!(0,index_1.notNull)(this.stean.deveui)){if(a)return this.formatReturnResult({body:messages_1.errors.deveuiMessage});this.ctx.throw(400,{code:400,detail:messages_1.errors.deveuiMessage})}e=await(0,helpers_1.executeSql)(this.ctx.config,(0,queries_1.streamFromDeveui)(this.stean.deveui)).then(e=>null!=e[0].multidatastream?e[0].multidatastream[0]:null!=e[0].datastream?e[0].datastream[0]:void this.ctx.throw(400,{code:400,detail:(0,messages_1.msg)(messages_1.errors.deveuiNotFound,this.stean.deveui)}));if((0,index_1.notNull)(this.stean.frame)){var s=await(0,lora_1.decodeloraDeveuiPayload)(this.ctx,this.stean.deveui,this.stean.frame);if(!s)return this.ctx.throw(400,{code:400,detail:"dons ton cul lulu"});if(s&&s.error){if(a)return this.formatReturnResult({body:s.error});this.ctx.throw(400,{code:400,detail:s.error})}this.stean.decodedPayload=s.result,!1===this.stean.decodedPayload.valid&&this.ctx.throw(400,{code:400,detail:messages_1.errors.InvalidPayload})}s=(0,queries_1.multiDatastreamFromDeveui)(this.stean.deveui);if(this.stean.formatedDatas={},e.multidatastream){if(this.stean.decodedPayload&&(0,index_1.notNull)(this.stean.decodedPayload.datas)&&Object.keys(this.stean.decodedPayload.datas).forEach(e=>{this.stean.formatedDatas[e.toLowerCase()]=this.stean.decodedPayload.datas[e]}),(0,index_1.notNull)(t.data)&&Object.keys(t.data).forEach(e=>{this.stean.formatedDatas[e.toLowerCase()]=t.data[e]}),!(0,index_1.notNull)(this.stean.formatedDatas)){if(a)return this.formatReturnResult({body:messages_1.errors.dataMessage});this.ctx.throw(400,{code:400,detail:messages_1.errors.dataMessage})}}else if(this.stean.decodedPayload&&this.stean.decodedPayload.datas)this.stean.formatedDatas=this.stean.decodedPayload.datas;else if(!this.stean.value){if(a)return this.formatReturnResult({body:messages_1.errors.dataMessage});this.ctx.throw(400,{code:400,detail:messages_1.errors.dataMessage})}if(this.stean.date=t.datetime?String(t.datetime):t.phenomenonTime?String(t.phenomenonTime):t.timestamp?String(new Date(1e3*t.timestamp)):void 0,!this.stean.date){if(a)return this.formatReturnResult({body:messages_1.errors.noValidDate});this.ctx.throw(400,{code:400,detail:messages_1.errors.noValidDate})}if(e.multidatastream){const o={};if(e.keys.forEach(s=>{o[s]=null;var e=s.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"");this.stean.formatedDatas[e]?o[s]=this.stean.formatedDatas[e]:Object.keys(this.stean.formatedDatas).forEach(t=>{s.toUpperCase().includes(t.toUpperCase())?o[s]=this.stean.formatedDatas[t]:this.synonym[s]&&this.synonym[s].forEach(e=>{e.toUpperCase().includes(t.toUpperCase())&&(o[s]=this.stean.formatedDatas[t])})})}),Object.values(o).filter(e=>null!=e).length<1){var i=`${messages_1.errors.dataNotCorresponding} [${e.keys}] with [${Object.keys(this.stean.formatedDatas)}]`;if(a)return this.formatReturnResult({body:i});this.ctx.throw(400,{code:400,detail:i})}var i=(0,index_1.getBigIntFromString)(t.FeatureOfInterest),r=o;if(r&&"object"==typeof r){r=Object.keys(r).length;if(r!=e.keys.length){r=(0,messages_1.msg)(messages_1.errors.sizeListKeys,String(r),e.keys.length);if(a)return this.formatReturnResult({body:r});this.ctx.throw(400,{code:400,detail:r})}}r=`'${JSON.stringify({value:Object.values(o),valueskeys:(0,constants_1.ESCAPE_SIMPLE_QUOTE)(JSON.stringify(o)),payload:this.stean.frame})}'::jsonb`;const n={featureofinterest_id:i?`SELECT COALESCE((SELECT "id" FROM "featureofinterest" WHERE "id" = ${i}), ${i})`:"(SELECT multidatastream1._default_foi FROM multidatastream1)",multidatastream_id:"(SELECT multidatastream1.id FROM multidatastream1)",phenomenonTime:`to_timestamp('${this.stean.timestamp}','${enums_1.EnumDatesType.dateWithOutTimeZone}')::timestamp`,resultTime:`to_timestamp('${this.stean.timestamp}','${enums_1.EnumDatesType.dateWithOutTimeZone}')::timestamp`,result:r};i=Object.keys(n).slice(0,-1).map(e=>`"${e}" = ${n[e]} AND `).concat('"result" = '+r).join("");const d=`WITH "${constants_1.VOIDTABLE}" AS (SELECT srid FROM "${constants_1.VOIDTABLE}" LIMIT 1)
                , multidatastream1 AS (SELECT id, thing_id, _default_foi, ${s} LIMIT 1)
                , myValues ( "${Object.keys(n).join(constants_1.DOUBLEQUOTEDCOMA)}") AS (values (${Object.values(n).join()}))
                , searchDuplicate AS (SELECT * FROM "${this.ctx.model.Observations.table}" WHERE ${i})
                , observation1 AS (INSERT INTO  "${this.ctx.model.Observations.table}" ("${Object.keys(n).join(constants_1.DOUBLEQUOTEDCOMA)}") SELECT * FROM myValues WHERE NOT EXISTS (SELECT * FROM searchDuplicate)
                                  AND (SELECT id FROM multidatastream1) IS NOT NULL
                                  RETURNING *)
                , result1 AS (SELECT (SELECT observation1.id FROM observation1)
                , (SELECT multidatastream1."keys" FROM multidatastream1)
                , (SELECT searchDuplicate.id AS duplicate FROM  searchDuplicate)
                , ${this.createListQuery(Object.keys(n),"(SELECT observation1.COLUMN FROM observation1), ")} (SELECT multidatastream1.id FROM multidatastream1) AS multidatastream, (SELECT multidatastream1.thing_id FROM multidatastream1) AS thing)
                 SELECT coalesce(json_agg(t), '[]') AS result FROM result1 AS t`;return(0,helpers_1.executeSqlValues)(this.ctx.config,d).then(async e=>{const t=e[0][0];if(null!=t.id){const s={"@iot.id":t.id,"@iot.selfLink":`${this.ctx.decodedUrl.root}/Observations(${t.id})`,phenomenonTime:`"${t.phenomenonTime}"`,resultTime:`"${t.resultTime}"`,result:t.result.value};return Object.keys(this.ctx.model.Observations.relations).forEach(e=>{s[e+"@iot.navigationLink"]=`${this.ctx.decodedUrl.root}/Observations(${t.id})/`+e}),this.formatReturnResult({body:s,query:d})}if(a)return this.formatReturnResult({body:messages_1.errors.observationExist});this.ctx.throw(409,{code:409,detail:messages_1.errors.observationExist,link:`${this.ctx.decodedUrl.root}/Observations(${[t.duplicate]})`})})}if(e.datastream){r=(0,index_1.getBigIntFromString)(t.FeatureOfInterest);if((await(0,helpers_1.executeSql)(this.ctx.config,r?`SELECT coalesce((SELECT "id" FROM "${this.ctx.model.FeaturesOfInterest.table}" WHERE "id" = ${r}), ${r}) AS id `:e._default_foi?`SELECT id FROM "${this.ctx.model.FeaturesOfInterest.table}" WHERE id = `+e._default_foi:""))[0].length<1){if(a)return this.formatReturnResult({body:messages_1.errors.noFoi});this.ctx.throw(400,{code:400,detail:messages_1.errors.noFoi})}s=this.stean.value||this.stean.decodedPayload.datas||this.stean.data.Data||void 0;if(!s){if(a)return this.formatReturnResult({body:messages_1.errors.noValue});this.ctx.throw(400,{code:400,detail:messages_1.errors.noValue})}i=`'${JSON.stringify({value:s})}'::jsonb`;const l={featureofinterest_id:"(SELECT datastream1._default_foi from datastream1)",datastream_id:"(SELECT datastream1.id from datastream1)",phenomenonTime:`to_timestamp('${this.stean.timestamp}','${enums_1.EnumDatesType.dateWithOutTimeZone}')::timestamp`,resultTime:`to_timestamp('${this.stean.timestamp}}','${enums_1.EnumDatesType.dateWithOutTimeZone}')::timestamp`,result:i};r=Object.keys(l).slice(0,-1).map(e=>`"${e}" = ${l[e]} AND `).concat('"result" = '+i).join("");const u=`WITH "${constants_1.VOIDTABLE}" AS (SELECT srid FROM "${constants_1.VOIDTABLE}" LIMIT 1)
               , datastream1 AS (SELECT id, _default_foi, thing_id FROM "${this.ctx.model.Datastreams.table}" WHERE id =${e.id})
               , myValues ( "${Object.keys(l).join(constants_1.DOUBLEQUOTEDCOMA)}") AS (values (${Object.values(l).join()}))
               , searchDuplicate AS (SELECT * FROM "${this.ctx.model.Observations.table}" WHERE ${r})
               , observation1 AS (INSERT INTO  "${this.ctx.model.Observations.table}" ("${Object.keys(l).join(constants_1.DOUBLEQUOTEDCOMA)}") SELECT * FROM myValues
                                WHERE NOT EXISTS (SELECT * FROM searchDuplicate)
                               AND (SELECT id from datastream1) IS NOT NULL
                               RETURNING *)
               , result1 AS (SELECT 
                    (SELECT observation1.id FROM observation1),
                    (SELECT searchDuplicate.id AS duplicate FROM searchDuplicate),
                    ${this.createListQuery(Object.keys(l),"(SELECT observation1.COLUMN from observation1), ")} (SELECT datastream1.id from datastream1) AS datastream, (SELECT datastream1.thing_id from datastream1) AS thing)
                SELECT coalesce(json_agg(t), '[]') AS result FROM result1 AS t`;return(0,helpers_1.executeSql)(this.ctx.config,u).then(async e=>{const t=e[0].result[0];if(null!=t.id){const s={"@iot.id":t.id,"@iot.selfLink":`${this.ctx.decodedUrl.root}/Observations(${t.id})`,phenomenonTime:`"${t.phenomenonTime}"`,resultTime:`"${t.resultTime}"`,result:t.result.value};return Object.keys(this.ctx.model.Observations.relations).forEach(e=>{s[e+"@iot.navigationLink"]=`${this.ctx.decodedUrl.root}/Observations(${t.id})/`+e}),this.formatReturnResult({body:s,query:u})}if(a)return this.formatReturnResult({body:messages_1.errors.observationExist});this.ctx.throw(409,{code:409,detail:messages_1.errors.observationExist,link:`${this.ctx.decodedUrl.root}/Observations(${[t.duplicate]})`})})}}}exports.Loras=Loras;