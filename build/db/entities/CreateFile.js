"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,a){void 0===a&&(a=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&("get"in i?t.__esModule:!i.writable&&!i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,i)}:function(e,t,r,a){e[a=void 0===a?r:a]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreateFile=void 0;const common_1=require("./common"),logger_1=require("../../logger"),helpers_1=require("../helpers"),messages_1=require("../../messages/"),entities=__importStar(require("../entities/index")),helpers_2=require("../../helpers"),fs_1=require("fs"),stream_1=require("stream"),configuration_1=require("../../configuration"),log_1=require("../../log");class CreateFile extends common_1.Common{constructor(e){super(e)}streamCsvFileInPostgreSqlFileInDatastream=async(o,n)=>{const s=await(0,helpers_1.columnsNameFromCsv)(n.filename);s||o.throw(400,{code:400,detail:messages_1.errors.noHeaderCsv+n.filename});const a=await(async()=>{var t=n.filename.split("/").reverse()[0],r=Object.assign({},o.odata),e=o.odata.id.toString(),a=(o.odata.entity=this.ctx.model.Datastreams.name,o.odata.id="",o.odata.returnFormat=helpers_2.returnFormats.json,o.log=void 0,new entities[this.ctx.model.Datastreams.name](o)),e={name:this.ctx.model.Datastreams.name+" import file "+t,description:"Description in meta ?",observationType:"http://www.opengis.net/def/observation-type/ogc-omxml/2.0/swe-array-observation",Thing:{"@iot.id":e},unitOfMeasurement:{name:s.join(),symbol:"csv",definition:"https://www.rfc-editor.org/rfc/pdfrfc/rfc4180.txt.pdf"},ObservedProperty:{name:"is Generik "+t,description:"KOIKE observe",definition:"http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature"},Sensor:{name:"Nom du Kapteur"+t,description:"Capte heures a la seconde",encodingType:"application/pdf",metadata:"https://time.com/datasheets/capteHour.pdf"}};try{return await a.post(e)}catch(e){o.odata.query.where.init(`"name" ~* '${t}'`);var i=await a.getAll();if(o.odata=r,i)return i.body=i.body?i.body[0]:{},i.body&&await(0,helpers_1.executeSqlValues)(o.config,`DELETE FROM "${this.ctx.model.Observations.table}" WHERE "datastream_id" = `+i.body["@iot.id"]),i}finally{o.odata=r}})(),e=new AbortController,i=(0,fs_1.createReadStream)(n.filename),t=[];s.forEach(e=>t.push(`"${e}" varchar(255) NULL`));var r=`CREATE TABLE public."${n.tempTable}" (
        id serial4 NOT NULL,
        "date" varchar(255) NULL,
        "hour" varchar(255) NULL,
        ${t}, 
        CONSTRAINT ${n.tempTable}_pkey PRIMARY KEY (id));`;await(0,helpers_1.executeSqlValues)(o.config,r);const l=configuration_1.serverConfig.connection(o.config.name).unsafe(`COPY ${n.tempTable}  (${s.join(",")}) FROM STDIN WITH(FORMAT csv, DELIMITER ';'${n.header})`).writable();return new Promise(async(t,r)=>{i.pipe((0,stream_1.addAbortSignal)(e.signal,await l)).on("close",async()=>{var e=`INSERT INTO "${this.ctx.model.Observations.table}" 
                    ("datastream_id", "phenomenonTime", "resultTime", "result") 
                    SELECT '${String(a.body["@iot.id"])}', '2021-09-17T14:56:36+02:00', '2021-09-17T14:56:36+02:00', json_build_object('value',ROW_TO_JSON(p)) FROM (SELECT * FROM ${n.tempTable}) AS p`;await configuration_1.serverConfig.connection(this.ctx.config.name).unsafe(e),t(a.body)}).on("error",e=>{log_1.log.errorMsg("ABORTED-STREAM"),r(e)})})};async getAll(){this.ctx.throw(400,{code:400})}async getSingle(e){this.ctx.throw(400,{code:400})}async post(e){var t;if(this.ctx.datas)return t=[],this.formatReturnResult({body:await this.streamCsvFileInPostgreSqlFileInDatastream(this.ctx,{tempTable:"temp"+Date.now().toString(),filename:this.ctx.datas.file,columns:t,header:", HEADER",stream:[]})});log_1.log.errorMsg("No Datas")}}exports.CreateFile=CreateFile;