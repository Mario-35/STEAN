"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.log=void 0;const fs_1=__importDefault(require("fs")),util_1=__importDefault(require("util")),constants_1=require("../constants"),helpers_1=require("../helpers");class Log{static logFile;errorMsg(...t){if(!(0,helpers_1.isTest)())return Log.logFile=fs_1.default.createWriteStream(constants_1._ERRORFILE,{flags:"a"}),Log.logFile.write(util_1.default.format.apply(null,t).replace(/\u001b[^m]*?m/g,"")+"\n"),process.stdout.write(util_1.default.format.apply(null,t)+"\n"),t}booting(t,o){process.stdout.write(`[36m ${t} [37m ${o}[0m
`)}error(t,o){process.stdout.write(`${(0,constants_1.color)(31)} ${t} ${(0,constants_1.color)(34)} : ${(0,constants_1.color)(33)} ${(0,constants_1.showAll)(o,!0)}${(0,constants_1.color)(0)}\n`)}create(t,o){process.stdout.write(`${(0,constants_1.color)(37)} -->${(0,constants_1.color)(36)} ${t} ${(0,constants_1.color)(37)} ${(0,constants_1.showAll)(o)}${(0,constants_1.color)(0)}\n`)}message(t,o){return`${(0,constants_1.color)(33)} ${t} ${(0,constants_1.color)(37)}:${(0,constants_1.color)(36)} `+(0,constants_1.showAll)(o)+(0,constants_1.color)(0)}query(t){constants_1._DEBUG&&process.stdout.write(""+(0,constants_1.color)(33)+"=".repeat(20)+`[ Query ]${"=".repeat(20)}
${(0,constants_1.color)(36)} ${(0,constants_1.showAll)(t)}${(0,constants_1.color)(0)}
`)}queryError(t,o){process.stdout.write(`${(0,constants_1.color)(32)} ${"=".repeat(15)} ${(0,constants_1.color)(36)} ERROR ${(0,constants_1.color)(32)} ${"=".repeat(15)}${(0,constants_1.color)(0)}
      ${(0,constants_1.color)(31)} ${o} ${(0,constants_1.color)(34)}
      ${(0,constants_1.color)(36)} `+(0,constants_1.showAll)(t,!1)+(0,constants_1.color)(0))}oData(t){var o;return t&&constants_1._DEBUG&&(o=(0,constants_1.color)(39)+` ${t} `+(0,constants_1.color)(0),process.stdout.write(`${(0,constants_1.color)(31)} ${"=".repeat(8)} ${(0,constants_1.color)(36)} ${(new Error).stack?.split("\n")[2].trim().split("(")[0].split("at ")[1].trim()} ${o}${(0,constants_1.color)(31)} `+"=".repeat(8)+(0,constants_1.color)(0))),t}init(){}}exports.log=new Log;